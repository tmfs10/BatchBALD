store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5782, 'nll': 1.6102813000225435}, 'chosen_targets': [9, 2, 9, 0, 4, 9, 2, 8, 0, 5, 7, 3, 4, 8, 7, 7, 7, 4, 1, 6, 1, 1, 9, 1, 1, 1, 1, 4, 4, 1, 4, 8, 4, 1, 3, 1, 4, 1, 7, 5], 'chosen_samples': [15244, 51660, 3935, 38161, 45069, 34404, 53266, 11998, 40208, 14204, 33627, 1158, 37257, 55530, 10337, 15037, 17955, 54672, 28583, 35968, 49283, 57287, 23816, 59713, 6413, 56099, 43332, 1663, 6865, 24322, 49479, 46330, 34572, 41799, 36852, 41961, 13446, 53143, 53074, 21919], 'chosen_samples_score': [1.274635727391908, 1.8904156108125536, 2.1135349051655856, 2.218493231463391, 2.2668645086713135, 2.297037358334798, 2.31627087854553, 2.320143480089925, 2.321415463214409, 2.317453727673678, 2.3166582946106082, 2.316245644716652, 2.320189723129036, 2.316958882312095, 2.3138360825391366, 2.307492272397754, 2.3127474478623835, 2.309068433792806, 2.3095493561377545, 2.310328835546967, 2.30976011053699, 2.310225686502683, 2.316020751958831, 2.3138195902273804, 2.314411083496438, 2.3130090209411716, 2.3147592784887845, 2.3116953931700372, 2.314279540650938, 2.3173457194052745, 2.31997695536832, 2.319743770505969, 2.322697260584544, 2.3224862994774416, 2.3220592438703065, 2.322896857468919, 2.326334395819531, 2.3267643079063536, 2.326938842983015, 2.3234031527350307], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 11.464315943419933, 'batch_acquisition_elapsed_time': 56.561540922150016})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6748, 'nll': 1.037088755097645}, 'chosen_targets': [6, 6, 3, 7, 2, 6, 4, 0, 3, 2, 4, 4, 6, 3, 4, 0, 0, 0, 6, 3, 9, 8, 5, 5, 5, 3, 5, 3, 3, 3, 4, 3, 8, 3, 1, 1, 1, 1, 2, 1], 'chosen_samples': [34840, 13845, 48788, 54194, 28795, 8462, 14411, 16485, 20705, 41595, 12036, 32301, 28805, 2149, 54179, 14564, 7372, 943, 57514, 56383, 16981, 32375, 42274, 21583, 39978, 15261, 14994, 45264, 20902, 53453, 56856, 22708, 26760, 4400, 11143, 41723, 42040, 39857, 50971, 57317], 'chosen_samples_score': [0.9041351072041192, 1.4480398815699072, 1.776289051811316, 1.9778459373072446, 2.1005694092573313, 2.1821449123915357, 2.233490163791263, 2.2614979084764553, 2.2795414394653823, 2.2950257611389633, 2.2960876953791622, 2.3028180541128513, 2.3092057850980314, 2.3167860507978464, 2.3167839985954526, 2.317134531020237, 2.314269869453023, 2.324687995295287, 2.3247481293126135, 2.3257359004926403, 2.319350740181278, 2.3213924395337564, 2.321630509015904, 2.3166237365178937, 2.3097614557017287, 2.300072101257914, 2.3089463141131645, 2.3088446742341837, 2.309423116820181, 2.321751760497886, 2.3169652859482746, 2.3173935558854666, 2.318607403868043, 2.3189092539308156, 2.3198362986863543, 2.323158325548409, 2.321207804402551, 2.3200710261253015, 2.322317195224361, 2.319721932005102], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.9398784078657627, 'batch_acquisition_elapsed_time': 56.30809906497598})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7536, 'nll': 0.8501826940952935}, 'chosen_targets': [1, 8, 2, 7, 3, 8, 7, 3, 1, 5, 2, 9, 9, 3, 6, 0, 1, 0, 4, 6, 2, 7, 6, 7, 0, 1, 7, 6, 9, 4, 4, 4, 1, 1, 0, 7, 1, 4, 6, 7], 'chosen_samples': [44109, 48560, 33659, 7033, 11075, 35924, 41365, 13242, 7402, 19089, 8097, 23901, 5979, 23294, 3364, 19985, 13973, 27477, 32776, 1350, 40206, 55826, 47458, 6650, 9459, 47327, 16133, 37872, 1905, 57946, 8840, 16127, 43535, 9457, 24480, 24723, 397, 59879, 45113, 32649], 'chosen_samples_score': [0.9529043088181729, 1.578750779953257, 1.8984083064505592, 2.087920247036313, 2.1858222699330523, 2.229580296148544, 2.2533479597414843, 2.2714731589726016, 2.2837572910735124, 2.284843413797814, 2.286803166477407, 2.2905287964383767, 2.2851035509886923, 2.282258205177744, 2.282258695999875, 2.2852400357469396, 2.2849950718927143, 2.28741353306801, 2.2829982855720985, 2.282242271697708, 2.282250600787288, 2.2847269568991795, 2.287543850917322, 2.27168792407042, 2.271010608238619, 2.2769110422604406, 2.2789095110774937, 2.2778319106439824, 2.282514189866845, 2.2815892595574994, 2.284875715149642, 2.286131008461158, 2.285917699745408, 2.2826682008104804, 2.2822922997126334, 2.278412972235323, 2.276525083611176, 2.2766413628224456, 2.2742162927596397, 2.2762741555756456], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0118772871792316, 'batch_acquisition_elapsed_time': 56.22230630554259})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7872, 'nll': 0.7669062909330855}, 'chosen_targets': [1, 8, 6, 4, 7, 1, 0, 6, 7, 5, 1, 6, 2, 2, 8, 2, 5, 8, 6, 5, 1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 2, 2, 4, 1, 1, 4, 2, 6, 4], 'chosen_samples': [17394, 18740, 35205, 17492, 45844, 12510, 28305, 8417, 46770, 37507, 35436, 52688, 29176, 47787, 30994, 16902, 16011, 7356, 15862, 45536, 46445, 18858, 552, 12119, 11920, 50728, 48185, 19628, 24189, 44023, 24715, 29501, 2748, 32391, 55710, 31122, 36577, 53727, 15211, 30167], 'chosen_samples_score': [0.8785942521606314, 1.3789715597765313, 1.6904561587907687, 1.907995221221657, 2.036181430557744, 2.1174590281335606, 2.1793641828015398, 2.2085837232294496, 2.234711334913939, 2.2535729579249253, 2.2642970927230763, 2.272740940489557, 2.276849421845508, 2.280468606743703, 2.2853605855221026, 2.288345373720478, 2.2912952994881888, 2.296692364388882, 2.2992508580883495, 2.2991300925106586, 2.300406337591852, 2.293102761596259, 2.2916233991537, 2.2838405569209286, 2.276551620171748, 2.2771831924839425, 2.271167627357663, 2.2687908945498165, 2.2715561090817005, 2.269764073089732, 2.2662300908206703, 2.2625677845999945, 2.266617795346704, 2.2701937383802573, 2.2663534233593445, 2.2648612648006683, 2.2652391510074956, 2.2629796538290456, 2.2595430239385266, 2.265834953785756], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.8593334704637527, 'batch_acquisition_elapsed_time': 55.984963338822126})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8196, 'nll': 0.6310110700709544}, 'chosen_targets': [2, 3, 2, 0, 6, 2, 6, 0, 3, 0, 5, 2, 2, 0, 3, 2, 6, 5, 0, 1, 2, 5, 0, 5, 1, 2, 4, 5, 9, 2, 2, 9, 5, 9, 9, 4, 0, 0, 2, 9], 'chosen_samples': [42206, 57441, 35124, 27069, 30157, 44090, 29843, 22634, 16764, 7875, 47433, 6231, 3871, 22436, 1341, 46447, 8733, 25508, 3585, 15713, 17263, 7907, 30071, 37983, 59339, 38094, 5155, 22779, 36122, 6377, 54556, 6518, 32348, 45739, 32051, 46623, 24809, 50423, 37403, 57309], 'chosen_samples_score': [0.633464831286344, 1.1150265921171563, 1.4508348624205762, 1.7008256065408451, 1.8799573622882235, 1.977376928942367, 2.0611355261534907, 2.120815217012039, 2.16546963963843, 2.2009329758338314, 2.2248801199474624, 2.2395987820387564, 2.256020250332064, 2.2665753274529035, 2.277656735299912, 2.282002782771583, 2.2874103429886894, 2.2911631016539857, 2.2862559383298304, 2.285761853928154, 2.2879938830393627, 2.284600991585016, 2.281838295178318, 2.27653117626118, 2.2768334720420818, 2.289851285494347, 2.2854949913767832, 2.2783962990975297, 2.2805570503064594, 2.2847372348729387, 2.28929835911212, 2.2878906471332847, 2.2984876824985605, 2.296738025930331, 2.2983334589030733, 2.289916136237828, 2.2893340320628894, 2.2937133038599455, 2.3003067446354706, 2.3019336001248334], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.9365710746496916, 'batch_acquisition_elapsed_time': 55.84633379429579})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.805, 'nll': 0.7349772984170935}, 'chosen_targets': [2, 8, 5, 5, 4, 5, 0, 0, 9, 6, 2, 2, 4, 5, 5, 0, 7, 8, 5, 4, 0, 0, 4, 0, 6, 2, 2, 5, 2, 5, 6, 5, 5, 0, 5, 6, 0, 4, 6, 2], 'chosen_samples': [24014, 37909, 10884, 45616, 5175, 45591, 2278, 50559, 14164, 1642, 31002, 44298, 44342, 16993, 28874, 22640, 19592, 39291, 53479, 14715, 33843, 11657, 29291, 50629, 54206, 15958, 21507, 29616, 56168, 48260, 8688, 43623, 42085, 47599, 38023, 27086, 58809, 53738, 14109, 53019], 'chosen_samples_score': [0.5606980540348897, 1.0103744621125998, 1.3258752764901462, 1.5626541012211197, 1.7480561235266157, 1.8817920036031568, 1.9818250539733482, 2.05483268224516, 2.109603126834571, 2.141161640114939, 2.1752535762907286, 2.205883764302744, 2.2268959350884785, 2.2470253832228693, 2.262457733122009, 2.2659167967805267, 2.2758887280425064, 2.2777454795250414, 2.270075435730405, 2.2731686169074514, 2.2792394408002394, 2.285522826716079, 2.2871208484191037, 2.2860331078522123, 2.292909428231628, 2.2948830585374083, 2.293742219430033, 2.288806240678916, 2.2847063572148834, 2.2916061446471545, 2.2883641133119283, 2.289279538111103, 2.287048528330242, 2.280621194588221, 2.289664833966171, 2.2945370987180382, 2.2908428959165477, 2.2862624816927735, 2.287948419484266, 2.2940805300514455], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.9888173788785934, 'batch_acquisition_elapsed_time': 55.702753987163305})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8484, 'nll': 0.6122149431499923}, 'chosen_targets': [7, 2, 7, 0, 8, 5, 1, 8, 2, 5, 3, 8, 4, 5, 0, 2, 7, 4, 0, 9, 1, 8, 2, 2, 7, 2, 9, 7, 9, 8, 3, 9, 9, 9, 2, 7, 9, 9, 9, 9], 'chosen_samples': [3579, 3676, 23352, 43602, 55807, 20476, 48112, 18012, 8886, 25384, 18739, 12934, 21304, 12157, 12748, 863, 11687, 30602, 51415, 45174, 19507, 23440, 41965, 1447, 33710, 40622, 5320, 47062, 59371, 24240, 11377, 2934, 57670, 24489, 23718, 27194, 53550, 50304, 8073, 49130], 'chosen_samples_score': [0.6184990623236385, 1.0871478736475675, 1.4160878157339671, 1.6675940372939295, 1.860606698039204, 1.9648857345930288, 2.0508603584254033, 2.1146604964989155, 2.1617745183481247, 2.1937050979930532, 2.208739599950192, 2.2208316428052726, 2.2371288117522212, 2.2414150104489075, 2.2420296278711227, 2.244071859637973, 2.2528767559379794, 2.25970037793925, 2.2582695194218765, 2.261955960279437, 2.268225777132585, 2.2675614702477382, 2.270983244358039, 2.269825312994449, 2.2728903584206854, 2.267013768515074, 2.2695050195882445, 2.272518661435406, 2.27633161976523, 2.2737639001906302, 2.2751711331154425, 2.2689707562870964, 2.2697973854084807, 2.265658283135835, 2.263486173733668, 2.2588291043107276, 2.2587743927880766, 2.2571980315332283, 2.2533920454358025, 2.2498988115577774], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.9218434654176235, 'batch_acquisition_elapsed_time': 55.07596169784665})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8412, 'nll': 0.6460227603526296}, 'chosen_targets': [5, 3, 8, 7, 4, 2, 8, 5, 0, 3, 8, 5, 5, 6, 5, 9, 9, 4, 7, 3, 9, 8, 6, 5, 7, 5, 5, 2, 7, 8, 3, 4, 8, 3, 3, 1, 3, 3, 8, 0], 'chosen_samples': [34438, 42199, 29711, 50126, 1448, 2714, 25986, 13796, 56444, 4073, 45245, 16931, 51296, 17542, 52896, 11208, 32047, 20110, 34899, 36815, 19824, 38112, 52275, 2739, 8866, 34602, 40659, 44424, 52666, 39575, 46379, 39486, 8299, 17139, 16569, 54947, 22185, 40307, 13018, 20418], 'chosen_samples_score': [0.6315522094256102, 1.1443100999851874, 1.4750945277379321, 1.7269556347791735, 1.8903929418290968, 1.993296527315639, 2.0778494350828485, 2.131854565716157, 2.1837109903941725, 2.2136847494893956, 2.233703116931016, 2.2522408043430655, 2.2711799302012547, 2.2860687546722342, 2.2943489009352707, 2.2899333654445275, 2.2913140023478658, 2.292131434731944, 2.289334556040604, 2.2919921592743435, 2.2986736199059905, 2.3070347871887016, 2.3055046070095635, 2.3104504234499963, 2.306398329751044, 2.3056529323705988, 2.3107405709273294, 2.3091912812678324, 2.3119826321564254, 2.3100933252849707, 2.3066148825596713, 2.3126747925928157, 2.305763702849962, 2.3078950673405885, 2.3160876820208074, 2.314591964439316, 2.3091918452393685, 2.306993643195696, 2.3132257596955483, 2.312215737241047], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.9243096206337214, 'batch_acquisition_elapsed_time': 54.78679593466222})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.857, 'nll': 0.6885945654891162}, 'chosen_targets': [5, 7, 9, 9, 7, 5, 7, 4, 5, 5, 7, 5, 7, 7, 5, 9, 7, 9, 5, 4, 7, 5, 4, 7, 7, 5, 7, 7, 0, 4, 9, 7, 3, 7, 4, 4, 4, 7, 7, 5], 'chosen_samples': [42659, 34516, 26527, 52462, 18472, 43144, 42368, 48467, 24426, 39132, 29470, 11417, 42527, 2522, 25603, 27884, 6280, 1962, 57242, 37248, 11594, 32674, 47028, 38506, 3538, 25679, 54882, 37900, 27427, 20467, 44936, 14095, 57872, 53956, 42587, 5287, 10191, 16882, 19424, 49291], 'chosen_samples_score': [0.6001528753733942, 1.0102950916304023, 1.2812695335929347, 1.4996324060628305, 1.660386764809652, 1.8001070026381871, 1.9063450020289938, 1.987419481647498, 2.055407970129947, 2.109997184719621, 2.1485382504030532, 2.1834928769592956, 2.213416220943474, 2.2372928750430194, 2.253561250946884, 2.254831426800461, 2.2664878618996163, 2.2748174993818893, 2.283292223041709, 2.286244405375424, 2.2913997926133476, 2.303592815406148, 2.3025456202319283, 2.3046063204185856, 2.3086796131081044, 2.306765205663865, 2.3082051929486127, 2.312149598700593, 2.313955467395381, 2.3200420557209895, 2.3253434287998047, 2.326694441392185, 2.328669821696515, 2.3337933037298413, 2.3376201338899634, 2.330495425907678, 2.3319021543128855, 2.329645206222416, 2.3170289203720316, 2.3159877464471776], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.8034229706972837, 'batch_acquisition_elapsed_time': 54.0963822286576})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8426, 'nll': 0.697802642375329}, 'chosen_targets': [2, 4, 5, 9, 9, 5, 8, 7, 2, 6, 1, 8, 3, 3, 0, 1, 5, 2, 9, 8, 7, 3, 5, 9, 2, 8, 7, 9, 5, 3, 9, 7, 5, 2, 5, 2, 6, 8, 6, 3], 'chosen_samples': [27598, 47068, 36984, 7518, 5045, 47741, 59294, 32048, 53076, 10503, 45532, 47297, 37464, 7322, 48227, 49559, 34137, 11364, 23366, 42417, 52787, 42212, 44928, 51552, 36936, 50902, 26162, 9119, 19106, 6213, 15832, 33304, 29845, 40968, 11523, 23716, 8265, 34929, 5554, 50131], 'chosen_samples_score': [0.8086124221432238, 1.297583344895011, 1.5939179934025711, 1.7894087031967008, 1.9381843355068478, 2.0237095768203677, 2.097406707859328, 2.145455090697846, 2.187300593919078, 2.2171967780972537, 2.230153447415951, 2.243179984176681, 2.2481904622136692, 2.2545428861083145, 2.2482661212690687, 2.2460503246470633, 2.255379814590226, 2.249928943061061, 2.252353937830115, 2.2597762777392383, 2.267596921273455, 2.2712474831539673, 2.2726719347720348, 2.278072806185044, 2.2760578880188476, 2.2854667452822, 2.289396036812274, 2.2889773296657197, 2.2888844845902057, 2.2920724296070993, 2.2926507165738492, 2.300292981559611, 2.295933442953725, 2.3015451617340332, 2.3040370884121586, 2.3048817509910293, 2.3078026136740704, 2.311679817181073, 2.3035660636396855, 2.2983017124814538], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.990991111844778, 'batch_acquisition_elapsed_time': 53.92295283079147})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8506, 'nll': 0.6376076907285317}, 'chosen_targets': [3, 2, 7, 0, 2, 6, 7, 2, 6, 8, 5, 6, 2, 5, 6, 6, 3, 9, 0, 7, 4, 2, 3, 2, 6, 2, 7, 2, 6, 3, 4, 2, 6, 0, 6, 5, 4, 9, 2, 4], 'chosen_samples': [42255, 54574, 58258, 57041, 5103, 59029, 46356, 10477, 13709, 30451, 46073, 29489, 34226, 15767, 33055, 21081, 8427, 32417, 51809, 8517, 49858, 58476, 57195, 44149, 55645, 40198, 41054, 4935, 47807, 44456, 14193, 17434, 10463, 39039, 14186, 31418, 52729, 58470, 16479, 33792], 'chosen_samples_score': [0.4754734624872463, 0.836972987707219, 1.1222668727739493, 1.3580901215006942, 1.5385478632727603, 1.6799425237515129, 1.8014638310622972, 1.8901708278190448, 1.9647287828429842, 2.0289677207019263, 2.072367410603242, 2.115081899009235, 2.1348267462703507, 2.162847799972724, 2.1863916246398283, 2.200908108083585, 2.2142312253468788, 2.225754260386445, 2.228916285085873, 2.238898796661104, 2.2400473599117845, 2.243008789213718, 2.2417789757596296, 2.243428032414979, 2.2381585041356367, 2.238432390812143, 2.2428921776960884, 2.251704040209912, 2.2527522313250756, 2.2591149325528974, 2.2609259054353785, 2.2640125930052335, 2.2644562258847927, 2.268769544854308, 2.2708189819107076, 2.276542441859192, 2.2784739095460935, 2.278271094620358, 2.277035421354057, 2.272426998529113], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0691491961479187, 'batch_acquisition_elapsed_time': 53.453415436670184})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.799, 'nll': 0.7971439082532336}, 'chosen_targets': [8, 8, 4, 2, 9, 1, 0, 8, 1, 9, 0, 7, 3, 0, 9, 5, 1, 0, 4, 1, 4, 6, 1, 6, 6, 0, 3, 1, 1, 2, 9, 0, 4, 2, 6, 8, 3, 8, 4, 9], 'chosen_samples': [14645, 32926, 22531, 42717, 36606, 35360, 40612, 39547, 24904, 641, 34706, 44219, 8958, 11597, 29475, 39526, 57436, 14773, 4636, 26835, 7984, 4143, 45284, 25297, 9497, 6326, 48385, 14853, 41226, 30346, 8238, 18658, 34860, 46217, 35184, 8008, 8450, 17760, 11009, 34668], 'chosen_samples_score': [0.5542520586058073, 0.9710739848284604, 1.2701943161910711, 1.5019432646524589, 1.684402922313052, 1.820119119764497, 1.9289896220792908, 2.011896187375612, 2.0677886586770935, 2.1212987890809227, 2.160281156121604, 2.186608685636534, 2.204670161248723, 2.2240791431972475, 2.236634106332648, 2.2498218163670494, 2.2652631510996564, 2.268041242172565, 2.2711215801486553, 2.2789688801436014, 2.2897071331552787, 2.2897950054274183, 2.2878956877277083, 2.2864298464757304, 2.2927906165508922, 2.2953332089377056, 2.2894778868134154, 2.292190624762931, 2.2886038284982817, 2.289521466058467, 2.2958867302246873, 2.3040200656966476, 2.304428428460554, 2.303864271923146, 2.3063172278670976, 2.3073032964853084, 2.311538244739353, 2.3149058158786815, 2.314109086898007, 2.307231160009522], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.990430574864149, 'batch_acquisition_elapsed_time': 52.99657835997641})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8702, 'nll': 0.6270212318800032}, 'chosen_targets': [8, 8, 8, 9, 9, 8, 5, 5, 1, 3, 9, 9, 3, 1, 0, 5, 2, 8, 9, 6, 7, 3, 9, 1, 1, 4, 4, 1, 4, 8, 3, 3, 9, 3, 2, 7, 4, 4, 9, 8], 'chosen_samples': [24740, 37778, 19981, 22692, 44973, 25587, 23629, 25747, 4225, 46406, 42838, 45810, 38804, 51249, 18222, 49140, 15093, 40022, 55856, 54316, 55426, 15216, 57236, 52624, 43344, 44224, 54634, 7729, 48690, 20819, 30692, 37271, 4989, 33331, 8691, 50743, 17678, 23429, 37318, 32712], 'chosen_samples_score': [0.44981894954148793, 0.8203963066652125, 1.1097288257833418, 1.331079081691822, 1.5164841352073184, 1.6592181952720102, 1.7744394227188867, 1.875918990496432, 1.9513583323017514, 2.0124442824441626, 2.068212211028417, 2.113843140535124, 2.1397878275966615, 2.168096793409152, 2.1913297005977945, 2.2056456864938667, 2.218215943018105, 2.228416108644385, 2.240451377995086, 2.249992563060072, 2.259614037340217, 2.2652033548861645, 2.2695418303740382, 2.267460006386493, 2.2690436933600395, 2.274567253428444, 2.2798463047260853, 2.2839430683934125, 2.2855508575953607, 2.292811080313129, 2.294935649713395, 2.2986664689494987, 2.298472063423503, 2.290193903041768, 2.2857649371620354, 2.2824744250634836, 2.283641557847865, 2.284299778420504, 2.286443261958702, 2.289585073226064], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0066343676298857, 'batch_acquisition_elapsed_time': 52.6045173574239})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.86, 'nll': 0.6899075960700228}, 'chosen_targets': [6, 3, 6, 3, 2, 8, 3, 2, 6, 4, 9, 2, 1, 3, 5, 2, 3, 0, 3, 6, 3, 5, 3, 5, 3, 7, 2, 2, 2, 3, 8, 9, 4, 4, 3, 3, 8, 4, 5, 6], 'chosen_samples': [47288, 15412, 23626, 13929, 50826, 44624, 53209, 32405, 10275, 33630, 13996, 33685, 56836, 43373, 31402, 16925, 13221, 26722, 8077, 57015, 4795, 29156, 45699, 8104, 38193, 33913, 51131, 10476, 32634, 53042, 1943, 18728, 11624, 28159, 5831, 50946, 26532, 59708, 47934, 36101], 'chosen_samples_score': [0.4734907226300433, 0.8093702922794868, 1.0629977715945498, 1.2682722984036143, 1.4429643623951076, 1.5681415733793962, 1.6816450727062513, 1.7820238623475948, 1.8650362987326758, 1.9273331585280538, 1.9819785342912137, 2.0326270941231463, 2.068324473969543, 2.1053243215000546, 2.1309873453115316, 2.1537067159165915, 2.1734139474756162, 2.1879889068341036, 2.199853685331842, 2.2090618583024515, 2.2259396743857707, 2.2303595314696842, 2.234325471977602, 2.2488524850999454, 2.2477783304772068, 2.252242730077409, 2.2663523905975715, 2.2638720601266975, 2.264476563784754, 2.2688261170326527, 2.270899651793755, 2.271890709457928, 2.2767608077940125, 2.2772810803525587, 2.2720708596828985, 2.271293669251307, 2.271139763948014, 2.265883806645512, 2.2732240909203654, 2.2762199272476593], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.060416642576456, 'batch_acquisition_elapsed_time': 52.21834463439882})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8686, 'nll': 0.6712754796190966}, 'chosen_targets': [9, 2, 0, 5, 9, 6, 5, 7, 7, 8, 0, 7, 1, 3, 6, 5, 5, 7, 7, 2, 2, 3, 5, 6, 3, 9, 9, 0, 7, 5, 7, 9, 5, 6, 5, 3, 2, 2, 2, 7], 'chosen_samples': [22597, 49773, 13454, 31682, 47398, 28898, 20718, 53911, 50783, 53181, 40396, 9307, 22639, 5328, 30128, 30216, 14534, 24990, 54937, 23584, 2855, 58249, 10770, 47214, 43198, 3742, 24497, 46439, 46076, 23746, 50891, 40439, 10995, 39320, 52857, 26694, 52755, 38435, 31092, 22753], 'chosen_samples_score': [0.4288940194920354, 0.7841408585769751, 1.0754807086332288, 1.2980816371108825, 1.477052530273646, 1.6161111683401987, 1.743338138655039, 1.8330899211609406, 1.91402573027999, 1.9783879700001954, 2.026636654933169, 2.061866591797102, 2.10190226300646, 2.133312162580781, 2.167304737608955, 2.185787070524519, 2.2055191231640627, 2.218813969118802, 2.2308891436557943, 2.236943560521123, 2.235847763838944, 2.2523007245921676, 2.2536435036029694, 2.257232553167846, 2.255118331350097, 2.2523861427034113, 2.2592490612052174, 2.2603023039359016, 2.252836502680019, 2.2568003252033506, 2.2580940596132137, 2.2544737882240895, 2.255913786685902, 2.257337024733026, 2.2569417152987654, 2.2564633646278907, 2.250777034669582, 2.255346662076832, 2.248487338621743, 2.2549951157466097], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.999516708776355, 'batch_acquisition_elapsed_time': 51.445219757035375})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8476, 'nll': 0.7327871103732793}, 'chosen_targets': [7, 2, 3, 5, 7, 2, 5, 5, 8, 8, 6, 7, 1, 8, 8, 5, 8, 1, 1, 6, 3, 7, 3, 1, 2, 1, 7, 7, 9, 5, 8, 3, 2, 7, 1, 1, 1, 3, 1, 3], 'chosen_samples': [50978, 1724, 32193, 26700, 4832, 53884, 47951, 20186, 58058, 47635, 15280, 14930, 21899, 14896, 48503, 12770, 44196, 14312, 42440, 34703, 15848, 4074, 4866, 14846, 8257, 25244, 3010, 3498, 47237, 7482, 33162, 43417, 28471, 33037, 47129, 42849, 10783, 49841, 4561, 13225], 'chosen_samples_score': [0.498657248587722, 0.8978486227312481, 1.1924575956144552, 1.4223203087890708, 1.5942553179176295, 1.7345406284255223, 1.8412991605096831, 1.9281503562236395, 1.9988253184430977, 2.0537938752313156, 2.105670200078043, 2.1430140215859446, 2.1713347271674124, 2.192995449937529, 2.2076326519985052, 2.2304820851806113, 2.2502740822207663, 2.2613605993883503, 2.2648803702267237, 2.26862049052853, 2.280387867661805, 2.285821744081897, 2.2783204793604916, 2.2804934142132645, 2.2881399381945364, 2.296059439176453, 2.2940981066980584, 2.2993742500360383, 2.298846222957714, 2.3038121178807813, 2.309261087871377, 2.3033745950662947, 2.2967266522107153, 2.3085347421699396, 2.3112003541881023, 2.3116248901682823, 2.314273962274399, 2.317726426102375, 2.3146515655735698, 2.313117833878735], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.014457182958722, 'batch_acquisition_elapsed_time': 51.446338122710586})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8616, 'nll': 0.6120399626678871}, 'chosen_targets': [2, 3, 9, 2, 4, 5, 7, 3, 3, 5, 8, 2, 6, 9, 0, 5, 0, 6, 6, 5, 8, 5, 2, 9, 8, 6, 2, 4, 0, 2, 6, 6, 6, 6, 6, 2, 5, 4, 2, 2], 'chosen_samples': [19524, 4429, 80, 40221, 45357, 23733, 51180, 7214, 38970, 31863, 38613, 55011, 7202, 1683, 12741, 15732, 25928, 23126, 49418, 26926, 54423, 27778, 31802, 59719, 35018, 6456, 21668, 46164, 43236, 57442, 48630, 29370, 59359, 59181, 17164, 7895, 516, 19923, 50105, 39879], 'chosen_samples_score': [0.5089522861863025, 0.9075047593682521, 1.2170430264148844, 1.46581902531628, 1.649140627341838, 1.801021621722204, 1.911354479014249, 1.9904382411898904, 2.0545902964806473, 2.11009757348611, 2.1498934339174927, 2.1818588258678613, 2.2047846454512747, 2.227466507251341, 2.2441727751017915, 2.258787826199189, 2.264498638387934, 2.2752853620464357, 2.2891056258119313, 2.2949557902037405, 2.3056704526840512, 2.3075266289504057, 2.312708386647003, 2.310039626064203, 2.320804553417272, 2.3212491173011927, 2.322801873591615, 2.3218917995533843, 2.3119631828303966, 2.305254430550029, 2.3070002472511035, 2.293934693798839, 2.288889914516183, 2.2952219978513, 2.305053333270692, 2.3069124398163368, 2.3061615698416773, 2.307284377743116, 2.3118415258299123, 2.3097530159378294], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1069213282316923, 'batch_acquisition_elapsed_time': 50.99596724845469})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8614, 'nll': 0.6935121588988885}, 'chosen_targets': [5, 7, 0, 5, 3, 5, 0, 6, 5, 6, 9, 8, 5, 0, 5, 8, 9, 0, 7, 5, 0, 5, 8, 3, 5, 2, 8, 0, 9, 8, 8, 3, 1, 8, 8, 8, 8, 8, 2, 0], 'chosen_samples': [19174, 43378, 18543, 13336, 32490, 13348, 47923, 55475, 22426, 55314, 7904, 27646, 40587, 47156, 49991, 54136, 1364, 825, 5422, 32488, 48434, 38577, 29422, 53630, 2412, 39198, 27121, 34283, 6145, 6580, 8759, 16676, 10285, 25415, 40453, 6873, 38351, 20079, 53473, 15103], 'chosen_samples_score': [0.5845214138819369, 1.0492601527181042, 1.3711588818222524, 1.6189573891792244, 1.7798420648832503, 1.910799655584424, 2.005497954656838, 2.0761821144835624, 2.1256023326370315, 2.1618826390924397, 2.193760950564428, 2.2110874957782194, 2.2326868079392597, 2.247245200336714, 2.255595472756326, 2.267098025254466, 2.2701544358282106, 2.2774957586552524, 2.285668061556912, 2.286627121937766, 2.286799757679198, 2.2876869935363615, 2.2908301296183033, 2.293678288042166, 2.296589850128697, 2.2931841525975187, 2.2846560272041927, 2.2808106260389494, 2.2868949559211806, 2.2956521523465625, 2.3022618953102736, 2.297286701079763, 2.2990286755118277, 2.2914092572609235, 2.284649139989625, 2.2787857527681297, 2.284841633300651, 2.287537853682643, 2.29611904730897, 2.3037348144031], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.753634564578533, 'batch_acquisition_elapsed_time': 50.55729093961418})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8794, 'nll': 0.6413696663133239}, 'chosen_targets': [5, 7, 0, 9, 7, 5, 3, 2, 0, 7, 5, 2, 1, 0, 3, 1, 1, 2, 5, 9, 7, 5, 3, 1, 1, 9, 9, 5, 3, 1, 3, 2, 3, 4, 1, 1, 1, 0, 9, 1], 'chosen_samples': [27403, 40070, 8116, 41942, 38001, 41582, 39397, 13741, 58116, 14288, 21385, 30884, 11395, 45617, 44903, 42690, 49099, 3006, 9073, 28416, 13963, 45607, 45732, 29430, 40509, 50408, 17817, 35976, 32409, 34641, 12967, 37234, 24414, 16969, 22627, 8873, 37101, 50424, 36080, 58361], 'chosen_samples_score': [0.502925233955485, 0.8407968097018571, 1.1158033600417179, 1.3348648998417376, 1.5198492928753344, 1.674928047792914, 1.7909686841584884, 1.8916914886443505, 1.9667589960832998, 2.029811128193076, 2.077282743146359, 2.1143166045930197, 2.1527608806607006, 2.1842631143848212, 2.203875609857361, 2.224842547269837, 2.2480284205088665, 2.261884913372519, 2.272058859797852, 2.280772582769405, 2.2871373347156947, 2.296388612682037, 2.2951028778721927, 2.3009195046175037, 2.3095978338738483, 2.3149450703148737, 2.3119386711815153, 2.3197652419797876, 2.3235670018093373, 2.329915548828417, 2.3340113651077736, 2.3435532420942096, 2.345300826653066, 2.3433547602662017, 2.341086150481523, 2.3419554138787078, 2.3363735701794184, 2.336390857435717, 2.338302071083703, 2.341043219495006], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.9000577479600906, 'batch_acquisition_elapsed_time': 50.238665863871574})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8586, 'nll': 0.6648457108567303}, 'chosen_targets': [2, 2, 3, 8, 2, 1, 4, 3, 2, 8, 6, 2, 3, 7, 7, 0, 7, 8, 3, 9, 7, 4, 7, 2, 0, 3, 2, 8, 2, 3, 4, 0, 2, 0, 0, 4, 2, 2, 3, 2], 'chosen_samples': [41141, 44898, 26942, 31656, 38080, 47729, 21270, 17324, 15203, 56594, 10271, 40637, 38593, 14004, 7085, 47473, 32104, 5409, 36324, 9306, 40684, 56258, 5049, 41189, 55259, 17509, 48043, 47080, 57619, 25538, 20741, 46375, 14363, 1363, 10840, 29075, 2513, 4187, 9491, 36631], 'chosen_samples_score': [0.41984331761234395, 0.7821421697736877, 1.0804326556916206, 1.3293091497530143, 1.520815144734586, 1.6684653137089143, 1.7773478943987602, 1.8769033387944152, 1.9532068649465977, 2.0129597389256997, 2.061454938060777, 2.108365456447638, 2.142407485637433, 2.1720600623053077, 2.194451824099195, 2.20302765827282, 2.222149370704038, 2.2460189197207434, 2.251649220356068, 2.2555222097950605, 2.2607238823927247, 2.2653308846417026, 2.2660317249267834, 2.266999135573137, 2.2625108726369767, 2.2718722282514783, 2.2710584699612433, 2.270456572350149, 2.2787327131849295, 2.2750462638630147, 2.2704958755154863, 2.276054999986279, 2.266159306237647, 2.2668273583638126, 2.2641239474811243, 2.264878076840752, 2.2676953973758884, 2.2665157223445647, 2.2653657617218386, 2.2666936344079502], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.033023279160261, 'batch_acquisition_elapsed_time': 49.709514720365405})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.emnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--dataset', 'emnist']
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--dataset', 'mnist']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--dataset', 'mnist']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--dataset', 'mnist']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--dataset', 'mnist']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.emnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--dataset', 'emnist']
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.emnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--dataset', 'emnist']
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.emnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--dataset', 'emnist']
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.independent', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'independent']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.independent', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'independent']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 2, 7, 9, 6, 9, 9, 5, 2, 8, 3, 9, 3, 7, 2, 5, 5, 6, 5, 3, 9, 9, 9, 2, 6, 9, 9, 2, 5, 8, 9, 9, 4, 0, 9, 3, 3, 8, 5, 5], 'chosen_samples': [54498, 19443, 36157, 42773, 32140, 14790, 36807, 32074, 1255, 35841, 25453, 42643, 32619, 4842, 46036, 53000, 15918, 17161, 43245, 54898, 28149, 27909, 34404, 19519, 3623, 18885, 9390, 16532, 51492, 24240, 34824, 6205, 23435, 28102, 38153, 27362, 54242, 23865, 45604, 14143], 'chosen_samples_score': [1.0639342932484648, 1.0620308457611038, 1.052415707887233, 1.036556891410246, 1.027462937671627, 1.0205745740716767, 1.0174892680882661, 1.0113533608508707, 1.010629463077382, 1.0004807402077438, 0.9965709725771075, 0.9948893787536195, 0.9947192994080314, 0.9944376823124972, 0.9926789869903347, 0.9916180377256604, 0.9837104124451923, 0.9835538179825203, 0.9807766590472532, 0.9780266774814717, 0.9755577806438055, 0.9744865058669391, 0.971801576379207, 0.9706004609376887, 0.9697337579213515, 0.9688878354980834, 0.9688450298720971, 0.9674910076182237, 0.9641611845854577, 0.9638454907134517, 0.9637970565508416, 0.9637716918191449, 0.9619799196166665, 0.9596281868243942, 0.9584364023954353, 0.9564108415124283, 0.9563037083983307, 0.9561071835687052, 0.9541907325005446, 0.9535910034305974], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.369276886805892, 'batch_acquisition_elapsed_time': 12.466171631589532})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.697, 'nll': 0.964513222442157}, 'chosen_targets': [6, 6, 2, 6, 6, 0, 2, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 2, 6, 6, 6, 6, 2, 6, 2, 0, 2, 2, 5, 0, 6, 6], 'chosen_samples': [6387, 23073, 57366, 38260, 55590, 27484, 15905, 43574, 12957, 10135, 18517, 852, 547, 9872, 22448, 11673, 10836, 52759, 52387, 6975, 34905, 12231, 42080, 3858, 5419, 161, 2061, 41213, 9338, 1889, 57910, 24191, 13179, 49528, 21255, 38171, 5939, 43536, 41899, 11941], 'chosen_samples_score': [0.841021256657242, 0.8364468232765538, 0.8273456001618076, 0.8252338688346409, 0.81209893578805, 0.8061850347164665, 0.8045574275828338, 0.7977844309812354, 0.7955801269297728, 0.7950395515612474, 0.794761282660321, 0.7947482258554652, 0.794739414651982, 0.7947242930223806, 0.7927505041713178, 0.7927152000517742, 0.7888390057063008, 0.7865752245319915, 0.7857216966556672, 0.7808411273064702, 0.7803620506628464, 0.780256915996331, 0.7763352366858755, 0.7760972389398066, 0.7755202544547178, 0.7748766852156946, 0.7736233373020523, 0.7715013518414786, 0.7713380993316877, 0.7704791549527271, 0.7695411780032861, 0.7686619023313013, 0.768234259529928, 0.766603319950253, 0.7648322673175048, 0.764623103511147, 0.7620271297310739, 0.7611608312101628, 0.758303021528592, 0.7560045175680608], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.265898739919066, 'batch_acquisition_elapsed_time': 10.999979201704264})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7598, 'nll': 0.7838615048322959}, 'chosen_targets': [3, 3, 3, 9, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 2, 3, 3, 9, 3, 3, 8], 'chosen_samples': [6071, 5987, 52101, 37430, 13931, 22480, 17491, 12983, 55923, 49560, 49771, 34995, 28861, 56139, 38145, 56974, 8833, 49461, 53376, 25689, 56191, 41969, 56165, 21815, 51201, 20985, 39818, 51091, 49673, 1971, 20167, 7987, 4179, 20473, 27316, 1651, 48072, 33331, 24442, 12623], 'chosen_samples_score': [0.9219295386260247, 0.8729997334735332, 0.8712416508026963, 0.8693953991733672, 0.8688571889426848, 0.855824721938485, 0.853084302806738, 0.8504623810746014, 0.846860083683577, 0.8460865606520068, 0.8323519745736436, 0.8306791948044996, 0.8278751121497313, 0.8270150893246249, 0.824907886336621, 0.8233331988484596, 0.8200645296937471, 0.8167616796296052, 0.8153929427810737, 0.8135932483608852, 0.8090808154919785, 0.8079404852075266, 0.807421499124957, 0.8063410278891293, 0.803869792886116, 0.803755101719632, 0.8035471516981971, 0.8033916321818722, 0.8025497842122283, 0.8023877083376814, 0.8013806876715515, 0.8008545542399452, 0.7988567390023769, 0.798571365168975, 0.7983285969183459, 0.7981828568841384, 0.7979112153891703, 0.7964435366654142, 0.7964205923621883, 0.7945418081850727], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.510341551154852, 'batch_acquisition_elapsed_time': 11.342194275930524})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7215, 'nll': 0.8866817941245526}, 'chosen_targets': [5, 7, 5, 7, 7, 7, 5, 5, 7, 5, 5, 2, 7, 7, 5, 7, 5, 5, 7, 7, 7, 7, 5, 7, 5, 7, 7, 7, 0, 5, 2, 7, 7, 5, 7, 7, 5, 5, 5, 7], 'chosen_samples': [25765, 12391, 18932, 59306, 23803, 40837, 12898, 32343, 55195, 32132, 28886, 51986, 5283, 4081, 51367, 46493, 652, 43055, 41630, 56121, 17185, 10050, 3289, 1589, 41094, 24515, 46429, 20707, 40312, 24250, 14901, 12579, 1833, 34122, 20619, 36479, 11721, 35097, 22517, 38088], 'chosen_samples_score': [0.8322922922633557, 0.8074434694217124, 0.8005333992913005, 0.7987136096121776, 0.7942418909510354, 0.7819215499780992, 0.7733515924087238, 0.773014214160305, 0.7715645386094119, 0.7674309344058815, 0.7657069887429737, 0.7580353178329275, 0.7566933633434272, 0.7544074948535306, 0.7536421675419369, 0.7522201142389857, 0.7521447336348089, 0.7498241498166442, 0.7496710030920797, 0.7484078491617205, 0.74817597217623, 0.7479572655142404, 0.7471043536532053, 0.7466839978983946, 0.7466836178763159, 0.7464762631106591, 0.7442509893727691, 0.7422672905057872, 0.7414780042157981, 0.7389286921862298, 0.7386917198171683, 0.7364546179453683, 0.7360695735042121, 0.7345230052570249, 0.7344481527624145, 0.7320842301630733, 0.7307685547061158, 0.7296616274957062, 0.7277170512687889, 0.7266417218649143], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.126371620222926, 'batch_acquisition_elapsed_time': 10.935656810179353})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7042, 'nll': 0.8875297297327219}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 8, 7, 0, 0, 2, 0, 0, 2, 0, 7, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 3, 7, 0, 0, 0, 0, 0, 0], 'chosen_samples': [6097, 45942, 18538, 51499, 25547, 47599, 32926, 22481, 7378, 56362, 25309, 57542, 36318, 52358, 21242, 57663, 7254, 23140, 59433, 28740, 19369, 59418, 45035, 25022, 22640, 3492, 34706, 14729, 14775, 23104, 36251, 55513, 59383, 46356, 6137, 13030, 56766, 50518, 53678, 46683], 'chosen_samples_score': [0.807948196097023, 0.7901240030936204, 0.7868175974836982, 0.7788515680473631, 0.777415021821831, 0.774958475598607, 0.7739327426372851, 0.7708215397700412, 0.7693332726269348, 0.7681774381487269, 0.7641465390205657, 0.760594870377003, 0.7587971974206432, 0.7584364368670897, 0.7574245116099277, 0.7563702637551617, 0.7554798689833169, 0.7551494830156404, 0.7544831148325353, 0.753808552228902, 0.7530804476421342, 0.7516770418908505, 0.7516549018613876, 0.7504217998535428, 0.7476820338523282, 0.7471949268889377, 0.7457992884637523, 0.745360238778642, 0.7444309254787685, 0.744027197193879, 0.7429987837750663, 0.7420172698042369, 0.7416692909937439, 0.7408479113627863, 0.7389498613774683, 0.7384154663682316, 0.7381882577486312, 0.7381210943753519, 0.7374548132653753, 0.7367175487719038], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.283379126340151, 'batch_acquisition_elapsed_time': 11.338725928217173})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5782, 'nll': 1.6102813000225435}, 'chosen_targets': [9, 8, 8, 8, 8, 5, 8, 8, 8, 5, 5, 5, 5, 8, 5, 5, 0, 5, 5, 8, 5, 8, 8, 5, 5, 0, 5, 8, 8, 5, 5, 4, 5, 5, 7, 8, 9, 5, 4, 4], 'chosen_samples': [15244, 36891, 14362, 8928, 39291, 19354, 38251, 11751, 32389, 42085, 22571, 2401, 54779, 41183, 34509, 8549, 1137, 11115, 5757, 5409, 32674, 11365, 51943, 48197, 12229, 51415, 49375, 13018, 22389, 50409, 13603, 49665, 48939, 8104, 37833, 39373, 32417, 49655, 5287, 5175], 'chosen_samples_score': [0, 0.023375250045917895, 0.023628959867094398, 0.02365014013602494, 0.02358921278376616, 0.02361367354372724, 0.023593920822582555, 0.023465227002168996, 0.023331509537764247, 0.023067635002711705, 0.022928463472020117, 0.02282683691171275, 0.02263794807918027, 0.022464597251131188, 0.022287684338577116, 0.022130449082521535, 0.021915957015595296, 0.021717718928773628, 0.02146473821190456, 0.021231274760308554, 0.021019051815200303, 0.020803760810604994, 0.02061349258912315, 0.020441363915990426, 0.020262294986100254, 0.020088777745739327, 0.0199175821077863, 0.01975513565764875, 0.01960574372500333, 0.019458331379727904, 0.019315781768049687, 0.01917439786099669, 0.019039008104106952, 0.018898518560181602, 0.018761069464202078, 0.018628156900183455, 0.018517860501774546, 0.018397359549077424, 0.01827434327394206, 0.018155691222448565], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.035696595907211, 'batch_acquisition_elapsed_time': 2.660524236038327})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5782, 'nll': 1.6102813000225435}, 'chosen_targets': [9, 8, 8, 8, 8, 5, 8, 8, 8, 5, 5, 5, 5, 8, 5, 5, 0, 5, 5, 8, 5, 8, 8, 5, 5, 0, 5, 8, 8, 5, 5, 4, 5, 5, 7, 8, 9, 5, 4, 4], 'chosen_samples': [15244, 36891, 14362, 8928, 39291, 19354, 38251, 11751, 32389, 42085, 22571, 2401, 54779, 41183, 34509, 8549, 1137, 11115, 5757, 5409, 32674, 11365, 51943, 48197, 12229, 51415, 49375, 13018, 22389, 50409, 13603, 49665, 48939, 8104, 37833, 39373, 32417, 49655, 5287, 5175], 'chosen_samples_score': [0, 0.023375250045917895, 0.023628959867094398, 0.02365014013602494, 0.02358921278376616, 0.02361367354372724, 0.023593920822582555, 0.023465227002168996, 0.023331509537764247, 0.023067635002711705, 0.022928463472020117, 0.02282683691171275, 0.02263794807918027, 0.022464597251131188, 0.022287684338577116, 0.022130449082521535, 0.021915957015595296, 0.021717718928773628, 0.02146473821190456, 0.021231274760308554, 0.021019051815200303, 0.020803760810604994, 0.02061349258912315, 0.020441363915990426, 0.020262294986100254, 0.020088777745739327, 0.0199175821077863, 0.01975513565764875, 0.01960574372500333, 0.019458331379727904, 0.019315781768049687, 0.01917439786099669, 0.019039008104106952, 0.018898518560181602, 0.018761069464202078, 0.018628156900183455, 0.018517860501774546, 0.018397359549077424, 0.01827434327394206, 0.018155691222448565], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.048037387430668, 'batch_acquisition_elapsed_time': 3.082060668617487})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.4017298123037347}, 'chosen_targets': [2, 0, 0, 0, 0, 0, 0, 9, 8, 8, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 9, 0, 0, 3, 3], 'chosen_samples': [6391, 48421, 23753, 38599, 51809, 16817, 20283, 20573, 50238, 49532, 18759, 44205, 15103, 48207, 20141, 41996, 35485, 42063, 17581, 51797, 9329, 48547, 39039, 48268, 24476, 7855, 49304, 18543, 15249, 45115, 36689, 47599, 44598, 23746, 24480, 195, 13497, 35943, 14588, 43373], 'chosen_samples_score': [0, 0.019558914184417624, 0.021143694545405645, 0.022760707405037876, 0.02368781024738921, 0.02411794959151908, 0.024265898127058507, 0.02400218945249715, 0.02387016210474267, 0.023640471485791723, 0.02328782227961228, 0.022983285810736744, 0.022720693620620954, 0.02248614825175211, 0.022235331868323972, 0.02200302470051826, 0.021765247685353234, 0.02153790948508858, 0.021304317861414384, 0.02110031371456475, 0.02090166905341942, 0.020708100902805962, 0.02054736571331342, 0.02038389396032268, 0.020204573064102803, 0.020006905541087923, 0.019824780491597294, 0.019661809543965007, 0.019507252621777584, 0.019347866817093995, 0.01917864079666815, 0.019019497545097866, 0.018857517499733117, 0.018690818908361405, 0.018530870866458268, 0.018375296075071545, 0.018219909233940988, 0.0180728844593284, 0.017934487681046253, 0.017789146892751538], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.853818004950881, 'batch_acquisition_elapsed_time': 2.7238094583153725})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.537, 'nll': 1.3580902668237844}, 'chosen_targets': [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 7, 7, 7, 7, 4, 7, 7, 7, 7, 9, 7, 7, 4, 5, 7, 7, 7, 0, 7], 'chosen_samples': [3579, 19424, 32651, 19527, 42011, 17183, 7085, 14095, 43461, 8068, 6280, 193, 45257, 45333, 4794, 59856, 19635, 42527, 58907, 42368, 24636, 56611, 48910, 5387, 40415, 52729, 37657, 37900, 42057, 9522, 1683, 41571, 17329, 28310, 23629, 5049, 17205, 40643, 33843, 11594], 'chosen_samples_score': [0, 0.0175517472804188, 0.015566836897613623, 0.015867714351080968, 0.016570155376368505, 0.017278389840653337, 0.017852852192864446, 0.018299314227035107, 0.01854197576428944, 0.018591987242222552, 0.01854439414251869, 0.0184212492695231, 0.018209470947714034, 0.0180000197508448, 0.01781805132901731, 0.017630478706856547, 0.017426697297869328, 0.01724637359486263, 0.017067016189646702, 0.01686863059626856, 0.016686486718934215, 0.01651386082928484, 0.016331741613506628, 0.016153051741075158, 0.01597996962818957, 0.01580380521165665, 0.015601211801038307, 0.015380888046109072, 0.015173119524814387, 0.014975676881806817, 0.014788876207828964, 0.014598146477790303, 0.014409635098343112, 0.01422872581521054, 0.014059233903690302, 0.013883046114670332, 0.013705117527612718, 0.013538404411994664, 0.013369554201223348, 0.013209956140312418], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0211797319352627, 'batch_acquisition_elapsed_time': 2.422078786417842})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'multibald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'multibald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5782, 'nll': 1.6102813000225435}, 'chosen_targets': [9, 2, 9, 0, 4, 9, 2, 8, 0, 5, 7, 3, 4, 8, 7, 7, 7, 4, 1, 6, 1, 1, 9, 1, 1, 1, 1, 4, 4, 1, 4, 8, 4, 1, 3, 1, 4, 1, 7, 5], 'chosen_samples': [15244, 51660, 3935, 38161, 45069, 34404, 53266, 11998, 40208, 14204, 33627, 1158, 37257, 55530, 10337, 15037, 17955, 54672, 28583, 35968, 49283, 57287, 23816, 59713, 6413, 56099, 43332, 1663, 6865, 24322, 49479, 46330, 34572, 41799, 36852, 41961, 13446, 53143, 53074, 21919], 'chosen_samples_score': [1.274635727391908, 1.8904156108125536, 2.1135349051655856, 2.218493231463391, 2.2668645086713135, 2.297037358334798, 2.31627087854553, 2.320143480089925, 2.321415463214409, 2.317453727673678, 2.3166582946106082, 2.316245644716652, 2.320189723129036, 2.316958882312095, 2.3138360825391366, 2.307492272397754, 2.3127474478623835, 2.309068433792806, 2.3095493561377545, 2.310328835546967, 2.30976011053699, 2.310225686502683, 2.316020751958831, 2.3138195902273804, 2.314411083496438, 2.3130090209411716, 2.3147592784887845, 2.3116953931700372, 2.314279540650938, 2.3173457194052745, 2.31997695536832, 2.319743770505969, 2.322697260584544, 2.3224862994774416, 2.3220592438703065, 2.322896857468919, 2.326334395819531, 2.3267643079063536, 2.326938842983015, 2.3234031527350307], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.040257088840008, 'batch_acquisition_elapsed_time': 56.45783109404147})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5782, 'nll': 1.6102813000225435}, 'chosen_targets': [9, 8, 8, 8, 8, 5, 8, 8, 8, 5, 5, 5, 5, 8, 5, 5, 0, 5, 5, 8, 5, 8, 8, 5, 5, 0, 5, 8, 8, 5, 5, 4, 5, 5, 7, 8, 9, 5, 4, 4], 'chosen_samples': [15244, 36891, 14362, 8928, 39291, 19354, 38251, 11751, 32389, 42085, 22571, 2401, 54779, 41183, 34509, 8549, 1137, 11115, 5757, 5409, 32674, 11365, 51943, 48197, 12229, 51415, 49375, 13018, 22389, 50409, 13603, 49665, 48939, 8104, 37833, 39373, 32417, 49655, 5287, 5175], 'chosen_samples_score': [0, 0.023375250045917895, 0.023628959867094398, 0.02365014013602494, 0.02358921278376616, 0.02361367354372724, 0.023593920822582555, 0.023465227002168996, 0.023331509537764247, 0.023067635002711705, 0.022928463472020117, 0.02282683691171275, 0.02263794807918027, 0.022464597251131188, 0.022287684338577116, 0.022130449082521535, 0.021915957015595296, 0.021717718928773628, 0.02146473821190456, 0.021231274760308554, 0.021019051815200303, 0.020803760810604994, 0.02061349258912315, 0.020441363915990426, 0.020262294986100254, 0.020088777745739327, 0.0199175821077863, 0.01975513565764875, 0.01960574372500333, 0.019458331379727904, 0.019315781768049687, 0.01917439786099669, 0.019039008104106952, 0.018898518560181602, 0.018761069464202078, 0.018628156900183455, 0.018517860501774546, 0.018397359549077424, 0.01827434327394206, 0.018155691222448565], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.16859913803637, 'batch_acquisition_elapsed_time': 2.6717474162578583})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5782, 'nll': 1.6102813000225435}, 'chosen_targets': [9, 4, 6, 4, 6, 6, 4, 8, 8, 6, 8, 6, 3, 8, 6, 4, 6, 6, 8, 6, 4, 6, 6, 6, 3, 8, 8, 8, 6, 8, 6, 5, 8, 6, 2, 6, 2, 6, 6, 2], 'chosen_samples': [15244, 33630, 9156, 7863, 8774, 27505, 11624, 20559, 33801, 46811, 42107, 38933, 5455, 12295, 16131, 19923, 11263, 35810, 36681, 36358, 14103, 2573, 24526, 17874, 35801, 16246, 38979, 23253, 56796, 8397, 59065, 10226, 4521, 51507, 56403, 45113, 43617, 59531, 26977, 40420], 'chosen_samples_score': [0, 0.005626175008721597, 0.002500533023414355, 0.0014065577858838668, 0.0009002044108435862, 0.000625148281948031, 0.00045930265776559284, 0.0003516614487717379, 0.00027786309744348063, 0.00022507729772144332, 0.000186023512665814, 0.00015631954062404166, 0.00013320342039551176, 0.00011486184308581101, 0.00010006597659222104, 8.795614066851387e-05, 7.79201901285093e-05, 6.951075902353282e-05, 6.239431817842547e-05, 5.6318105189134724e-05, 5.108896263940306e-05, 4.6556488732872734e-05, 4.2602260793912734e-05, 3.9131913404243485e-05, 3.6069528550474584e-05, 3.335347902113303e-05, 3.093499176206033e-05, 2.877082373492896e-05, 2.6826511884666226e-05, 2.5073309235742e-05, 2.3487872606102573e-05, 2.2048948685556046e-05, 2.073874140872093e-05, 1.9542798356866646e-05, 1.844800609947308e-05, 1.744303867922364e-05, 1.6518748698339386e-05, 1.5666359232287037e-05, 1.487888634638397e-05, 1.4149616032652893e-05], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.051292860880494, 'batch_acquisition_elapsed_time': 2.7748734150081873})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 50, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '50', '--available_sample_k', '10', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 50, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '50', '--available_sample_k', '10', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5842, 'nll': 1.5175569628375287}, 'chosen_targets': [8, 6, 6, 6, 6, 6, 6, 6, 6, 6], 'chosen_samples': [6580, 19927, 18530, 54206, 59359, 50551, 1918, 9497, 45558, 4520], 'chosen_samples_score': [0, 0.010966895065152658, 0.013619798128552445, 0.01505127644882242, 0.015767989496028884, 0.015771243755067037, 0.015584811714590254, 0.015233345573383145, 0.014983030739508768, 0.014713888475016089], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.250617243349552, 'batch_acquisition_elapsed_time': 6.810171514749527})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5906, 'nll': 1.396265441851743}, 'chosen_targets': [0, 6, 6, 6, 6, 6, 6, 6, 6, 6], 'chosen_samples': [41012, 28805, 23075, 52156, 57456, 20469, 19382, 11497, 7785, 28756], 'chosen_samples_score': [0, 0.012092027857343727, 0.01680563786843904, 0.019469066288993572, 0.0210799036235207, 0.022117347557720508, 0.022793802593815228, 0.023367770804305004, 0.023794713756529636, 0.024013674923282654], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.195827255025506, 'batch_acquisition_elapsed_time': 6.506837956607342})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5816, 'nll': 1.3997115721343893}, 'chosen_targets': [2, 2, 2, 2, 2, 2, 2, 2, 2, 0], 'chosen_samples': [7895, 48391, 2075, 14837, 42068, 54075, 2855, 23776, 36631, 20418], 'chosen_samples_score': [0, 0.014402416578365029, 0.015011492962180255, 0.014223345545638373, 0.013528990705989462, 0.013058045094895335, 0.012919807934481964, 0.012405884366423875, 0.01193022251821134, 0.011465892978635423], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.2650263123214245, 'batch_acquisition_elapsed_time': 6.511954577639699})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 50, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '50', '--available_sample_k', '10', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5842, 'nll': 1.5175569628375287}, 'chosen_targets': [8, 5, 1, 6, 1, 1, 1, 6, 1, 1], 'chosen_samples': [6580, 10226, 11352, 9156, 55299, 27885, 14858, 46811, 39912, 8664], 'chosen_samples_score': [0, 0.0022476501713828687, 0.0009990435270698084, 0.0005620194330021541, 0.00035973064642718137, 0.00024984068943540566, 0.00018358079558966286, 0.000140573028442133, 0.00011108585838431215, 8.999337659757886e-05], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.193986296653748, 'batch_acquisition_elapsed_time': 7.512312086299062})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5806, 'nll': 1.5337420510212114}, 'chosen_targets': [6, 6, 0, 0, 0, 0, 5, 0, 0, 0], 'chosen_samples': [10463, 27505, 33157, 59696, 8969, 58356, 27627, 9695, 3337, 20584], 'chosen_samples_score': [0, 0.002511543994466795, 0.0011162610692920971, 0.0006279121701755298, 0.00040187736391993854, 0.0002790913794127255, 0.00020505594071320253, 0.00015700316036231632, 0.0001240630882553056, 0.00010050199899739942], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.2303774412721395, 'batch_acquisition_elapsed_time': 6.481563104316592})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5782, 'nll': 1.6102813000225435}, 'chosen_targets': [9, 8, 8, 8, 8, 5, 8, 8, 8, 5], 'chosen_samples': [15244, 36891, 14362, 8928, 39291, 19354, 38251, 11751, 32389, 42085], 'chosen_samples_score': [0, 0.023375250045917895, 0.023628959867094398, 0.02365014013602494, 0.02358921278376616, 0.02361367354372724, 0.023593920822582555, 0.023465227002168996, 0.023331509537764247, 0.023067635002711705], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.150817409157753, 'batch_acquisition_elapsed_time': 1.5864717438817024})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5998, 'nll': 1.413471558026828}, 'chosen_targets': [4, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [50957, 18759, 39789, 9142, 48421, 44205, 27805, 18543, 48268, 26457], 'chosen_samples_score': [0, 0.01710740572917643, 0.021004474386634962, 0.023300523307123972, 0.024324168117322284, 0.025027908211449526, 0.025382546704121572, 0.025695966276286036, 0.02591477793442577, 0.025937657225127562], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.016054416075349, 'batch_acquisition_elapsed_time': 1.2716056443750858})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5646, 'nll': 1.5640084027232852}, 'chosen_targets': [5, 5, 5, 8, 7, 8, 4, 4, 4, 2], 'chosen_samples': [47741, 46693, 35268, 5205, 16809, 48560, 34855, 35482, 4959, 1447], 'chosen_samples_score': [0, 0.02026573418133322, 0.023196828123305105, 0.02444162606151953, 0.02527340503483448, 0.025732242186914202, 0.025932827463840173, 0.025982396990256198, 0.02587005903268732, 0.025731268346188274], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.216830188408494, 'batch_acquisition_elapsed_time': 1.2688751481473446})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6282, 'nll': 1.2668020469275676}, 'chosen_targets': [3, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'chosen_samples': [875, 31681, 47862, 1609, 21207, 28630, 18922, 38140, 410, 49168], 'chosen_samples_score': [0, 0.015484839804682522, 0.018978409964334104, 0.021160209220730843, 0.02191235547462215, 0.02226459167178115, 0.02223116428549026, 0.021881211267316777, 0.02162722808222542, 0.021323368472349415], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.054699132218957, 'batch_acquisition_elapsed_time': 1.2226782348006964})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '100', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.589, 'nll': 1.4860003248883318}, 'chosen_targets': [5, 7, 7, 7, 7, 5, 5, 7, 5, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 4, 3, 9, 9, 8, 9, 8, 5, 5, 5, 5, 5, 5, 3], 'chosen_samples': [10995, 59845, 10337, 33873, 59812, 58005, 34137, 59802, 51296, 15253, 19885, 38829, 36863, 47125, 36973, 20811, 19417, 5979, 43745, 3925, 26353, 11385, 12945, 34876, 50832, 419, 7009, 53209, 48882, 3519, 53236, 46698, 24110, 43377, 19390, 20668, 43803, 50779, 51177, 4957], 'chosen_samples_score': [0, 0.01009122064622238, 0.010536666315542599, 0.010874124417934167, 0.010244804339714648, 0.009914980286752579, 0.009791966126358916, 0.009546835938517758, 0.009355959445031257, 0.009180538968937932, 0.00904291711945908, 0.009009341756657206, 0.009026240231485037, 0.009040572554397643, 0.00905199126722604, 0.009035121855692798, 0.00902747223120425, 0.009020438356423506, 0.009033856418157717, 0.009007736851376222, 0.008979244071187711, 0.008951044590901475, 0.00887329841848587, 0.008801611378456437, 0.008706610981879189, 0.008602376923191685, 0.008506309623566827, 0.008403103242556414, 0.008305381324779617, 0.008212137796260484, 0.00811529730290464, 0.008024526167466635, 0.007937662497824273, 0.007855494992924183, 0.007777737776629047, 0.007712921357222962, 0.007659783343855506, 0.007613902591010482, 0.007568260773819974, 0.007532077518201631], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.29223264195025, 'batch_acquisition_elapsed_time': 160.81930962391198})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6236, 'nll': 1.0804010510075328}, 'chosen_targets': [9, 9, 9, 9, 9, 7, 9, 9, 5, 3, 3, 5, 5, 9, 3, 3, 5, 3, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'chosen_samples': [24489, 17707, 9555, 7264, 56152, 4074, 47237, 56090, 12770, 38238, 10644, 38888, 20718, 17958, 8958, 46406, 35224, 45601, 7419, 12146, 19174, 34893, 33828, 58449, 15936, 3596, 49627, 21559, 31636, 42054, 16945, 45545, 14674, 35528, 59120, 54700, 2883, 49732, 15292, 43076], 'chosen_samples_score': [0, 0.00863410659621226, 0.00874269681239712, 0.008910721402531411, 0.008841060556645417, 0.008386346604405973, 0.008189423216346196, 0.00803704520014638, 0.00758772028584495, 0.007276985782789531, 0.007055870272593025, 0.006873791272928587, 0.006692380069683365, 0.0065179546494834335, 0.00635363202825559, 0.006200800693065585, 0.006070342358569653, 0.00594002065682471, 0.005832722039349409, 0.005737182905039175, 0.005643483094978075, 0.005557736283374871, 0.005491299542330869, 0.005436866638496102, 0.005395751220077858, 0.005366221817511255, 0.005360026037488968, 0.005355789302290957, 0.005354474810899984, 0.005354549303418616, 0.0053569734689203835, 0.005351832958954582, 0.00533467257275887, 0.005311557601827388, 0.0052880905054887555, 0.0052678861014433314, 0.005250334623514391, 0.00523299429600535, 0.00521543078816287, 0.005202878137984501], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0254650618880987, 'batch_acquisition_elapsed_time': 160.46574282087386})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '100', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5782, 'nll': 1.6102813000225435}, 'chosen_targets': [9, 8, 8, 8, 8, 5, 8, 8, 8, 5, 5, 5, 5, 8, 5, 5, 0, 5, 5, 8, 5, 8, 8, 5, 5, 0, 5, 8, 8, 5, 5, 4, 5, 5, 7, 8, 9, 5, 4, 4], 'chosen_samples': [15244, 36891, 14362, 8928, 39291, 19354, 38251, 11751, 32389, 42085, 22571, 2401, 54779, 41183, 34509, 8549, 1137, 11115, 5757, 5409, 32674, 11365, 51943, 48197, 12229, 51415, 49375, 13018, 22389, 50409, 13603, 49665, 48939, 8104, 37833, 39373, 32417, 49655, 5287, 5175], 'chosen_samples_score': [0, 0.023375250045917895, 0.023628959867094398, 0.02365014013602494, 0.02358921278376616, 0.02361367354372724, 0.023593920822582555, 0.023465227002168996, 0.023331509537764247, 0.023067635002711705, 0.022928463472020117, 0.02282683691171275, 0.02263794807918027, 0.022464597251131188, 0.022287684338577116, 0.022130449082521535, 0.021915957015595296, 0.021717718928773628, 0.02146473821190456, 0.021231274760308554, 0.021019051815200303, 0.020803760810604994, 0.02061349258912315, 0.020441363915990426, 0.020262294986100254, 0.020088777745739327, 0.0199175821077863, 0.01975513565764875, 0.01960574372500333, 0.019458331379727904, 0.019315781768049687, 0.01917439786099669, 0.019039008104106952, 0.018898518560181602, 0.018761069464202078, 0.018628156900183455, 0.018517860501774546, 0.018397359549077424, 0.01827434327394206, 0.018155691222448565], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.012844435870647, 'batch_acquisition_elapsed_time': 2.891916312277317})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.4017298123037347}, 'chosen_targets': [2, 0, 0, 0, 0, 0, 0, 9, 8, 8, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 9, 0, 0, 3, 3], 'chosen_samples': [6391, 48421, 23753, 38599, 51809, 16817, 20283, 20573, 50238, 49532, 18759, 44205, 15103, 48207, 20141, 41996, 35485, 42063, 17581, 51797, 9329, 48547, 39039, 48268, 24476, 7855, 49304, 18543, 15249, 45115, 36689, 47599, 44598, 23746, 24480, 195, 13497, 35943, 14588, 43373], 'chosen_samples_score': [0, 0.019558914184417624, 0.021143694545405645, 0.022760707405037876, 0.02368781024738921, 0.02411794959151908, 0.024265898127058507, 0.02400218945249715, 0.02387016210474267, 0.023640471485791723, 0.02328782227961228, 0.022983285810736744, 0.022720693620620954, 0.02248614825175211, 0.022235331868323972, 0.02200302470051826, 0.021765247685353234, 0.02153790948508858, 0.021304317861414384, 0.02110031371456475, 0.02090166905341942, 0.020708100902805962, 0.02054736571331342, 0.02038389396032268, 0.020204573064102803, 0.020006905541087923, 0.019824780491597294, 0.019661809543965007, 0.019507252621777584, 0.019347866817093995, 0.01917864079666815, 0.019019497545097866, 0.018857517499733117, 0.018690818908361405, 0.018530870866458268, 0.018375296075071545, 0.018219909233940988, 0.0180728844593284, 0.017934487681046253, 0.017789146892751538], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0052863899618387, 'batch_acquisition_elapsed_time': 2.2780782394111156})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '100', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.589, 'nll': 1.4860003248883318}, 'chosen_targets': [5, 7, 7, 7, 7, 5, 5, 7, 5, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 4, 3, 9, 9, 8, 9, 8, 5, 5, 5, 5, 5, 5, 3], 'chosen_samples': [10995, 59845, 10337, 33873, 59812, 58005, 34137, 59802, 51296, 15253, 19885, 38829, 36863, 47125, 36973, 20811, 19417, 5979, 43745, 3925, 26353, 11385, 12945, 34876, 50832, 419, 7009, 53209, 48882, 3519, 53236, 46698, 24110, 43377, 19390, 20668, 43803, 50779, 51177, 4957], 'chosen_samples_score': [0, 0.01009122064622238, 0.010536666315542599, 0.010874124417934167, 0.010244804339714648, 0.009914980286752579, 0.009791966126358916, 0.009546835938517758, 0.009355959445031257, 0.009180538968937932, 0.00904291711945908, 0.009009341756657206, 0.009026240231485037, 0.009040572554397643, 0.00905199126722604, 0.009035121855692798, 0.00902747223120425, 0.009020438356423506, 0.009033856418157717, 0.009007736851376222, 0.008979244071187711, 0.008951044590901475, 0.00887329841848587, 0.008801611378456437, 0.008706610981879189, 0.008602376923191685, 0.008506309623566827, 0.008403103242556414, 0.008305381324779617, 0.008212137796260484, 0.00811529730290464, 0.008024526167466635, 0.007937662497824273, 0.007855494992924183, 0.007777737776629047, 0.007712921357222962, 0.007659783343855506, 0.007613902591010482, 0.007568260773819974, 0.007532077518201631], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.32235261797905, 'batch_acquisition_elapsed_time': 155.14659970626235})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '100', '--available_sample_k', '40', '--acquisition_method', 'multibald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '100', '--available_sample_k', '40', '--acquisition_method', 'multibald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '100', '--available_sample_k', '40', '--acquisition_method', 'hsicbald']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 0, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '100', '--available_sample_k', '40', '--acquisition_method', 'multibald', '--gpu', '0']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '100', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 0, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'multibald', '--gpu', '0']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 1, 6, 1, 1, 6, 4, 1, 1], 'chosen_samples': [6580, 10226, 11352, 9156, 55299, 27885, 46811, 11624, 14858, 39912], 'chosen_samples_score': [0, 3.5732600655556166e-07, 1.046255380182319e-06, 1.7458639550171385e-06, 2.562459260648065e-06, 3.432139552082789e-06, 4.383715260056374e-06, 5.379241814796942e-06, 6.3859435606588855e-06, 7.460169724139973e-06], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 11.478216421091929, 'batch_acquisition_elapsed_time': 5.059807850047946})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.587, 'nll': 1.589604198684977}, 'chosen_targets': [6, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [10463, 55449, 45063, 33869, 9907, 11728, 47327, 26459, 8664, 1658], 'chosen_samples_score': [0, 1.1167571485366397e-11, 2.8131572047426042e-11, 4.5372503443463157e-11, 6.422490930071198e-11, 8.316698782624998e-11, 1.0349569925416718e-10, 1.2483982393328753e-10, 1.578288956358538e-10, 1.936439809400397e-10], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.516176586970687, 'batch_acquisition_elapsed_time': 4.375999240903184})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 2, 0, 5, 2, 0, 7, 7, 5, 3], 'chosen_samples': [6580, 33133, 38161, 55685, 1096, 50476, 16809, 6280, 30216, 37271], 'chosen_samples_score': [1.0727238605437621, 1.9052184142292288, 2.5477586329113433, 2.9837488702667607, 3.251945962331893, 3.3960515354812855, 3.514190084870985, 3.5771500007427246, 3.624931282177858, 3.6467907205631516], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.040607305942103, 'batch_acquisition_elapsed_time': 16.620158571051434})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.56, 'nll': 1.7158068493080159}, 'chosen_targets': [7, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [56329, 53899, 2957, 31357, 53707, 57095, 20427, 14346, 45075, 9622], 'chosen_samples_score': [0, 1.5017809803524954e-13, 4.553123136630549e-13, 9.548624981762062e-13, 1.541405590745384e-12, 2.1332209806772187e-12, 2.8845233686579823e-12, 3.6318715334260345e-12, 4.443805341917218e-12, 5.283418712015409e-12], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1666297200135887, 'batch_acquisition_elapsed_time': 5.715674326987937})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.572, 'nll': 1.550909479515058}, 'chosen_targets': [7, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [16133, 19968, 38682, 45816, 6747, 47259, 57057, 39049, 39737, 58741], 'chosen_samples_score': [0, 6.207805951415357e-10, 1.2654569966213729e-09, 2.1083531187197237e-09, 3.0631808369690897e-09, 4.0309560984852e-09, 5.3443222891371605e-09, 6.76729515855775e-09, 8.237890346554392e-09, 9.915152657330067e-09], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.57538547902368, 'batch_acquisition_elapsed_time': 4.548847329104319})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6418, 'nll': 1.2155042615277758}, 'chosen_targets': [4, 9, 2, 4, 8, 2, 6, 4, 6, 3], 'chosen_samples': [39209, 58470, 54556, 46613, 14896, 47787, 13565, 4135, 28163, 42212], 'chosen_samples_score': [0.9270377945177717, 1.6550949657863039, 2.247723897624756, 2.664143500813253, 2.9675126734180193, 3.198466546041634, 3.363343457848752, 3.4761143922299356, 3.5486297367518587, 3.5945226496418625], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.128906896803528, 'batch_acquisition_elapsed_time': 16.470965732820332})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5664, 'nll': 1.4970383384613255}, 'chosen_targets': [4, 1, 6, 7, 1, 6, 1, 1, 1, 7], 'chosen_samples': [57371, 47982, 26039, 44465, 38666, 27505, 6701, 9903, 42849, 51011], 'chosen_samples_score': [0, 5.500035911447942e-07, 1.2285568316753717e-06, 2.1399006591904198e-06, 3.124236656746703e-06, 4.213373157322064e-06, 5.417032033649256e-06, 6.820704677450912e-06, 8.407109075213562e-06, 1.02988329053617e-05], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.237904889974743, 'batch_acquisition_elapsed_time': 5.2688421660568565})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5898, 'nll': 1.4370464991495464}, 'chosen_targets': [5, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [42850, 1321, 32179, 11671, 39857, 54753, 16233, 40007, 49123, 22325], 'chosen_samples_score': [0, 5.4581783517468494e-08, 1.1430615520063747e-07, 1.7801506660444684e-07, 2.424058920107013e-07, 3.077237456075112e-07, 3.7902170307480735e-07, 4.5396299130643955e-07, 5.294777706042566e-07, 6.062867819088046e-07], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.130953621119261, 'batch_acquisition_elapsed_time': 4.372920031892136})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6778, 'nll': 0.9863309681819513}, 'chosen_targets': [7, 0, 4, 6, 2, 2, 3, 4, 5, 7], 'chosen_samples': [2852, 56444, 47028, 10442, 4080, 2748, 16764, 30602, 7907, 14004], 'chosen_samples_score': [0.8436826699398549, 1.5556919550805077, 2.1161820636863515, 2.5799954525734723, 2.9217451909251864, 3.134249603326697, 3.2842299841891736, 3.3998140592411614, 3.4894909307294375, 3.5459285073194735], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.869915826013312, 'batch_acquisition_elapsed_time': 16.49859185796231})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 6, 0, 1, 5, 1, 8, 6, 1, 1], 'chosen_samples': [6580, 59531, 997, 1321, 59406, 1658, 1943, 59065, 58741, 58727], 'chosen_samples_score': [0, 8.64237563291681e-07, nan, nan, 2.8807903618144337e-07, nan, nan, 4.897317921859212e-06, 2.880784961689642e-07, 4.8973365665005986e-06], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.08824575599283, 'batch_acquisition_elapsed_time': 3.3622327959164977})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5926, 'nll': 1.511262736292339}, 'chosen_targets': [3, 1, 1, 1, 1, 0, 0, 0, 6, 0], 'chosen_samples': [35692, 397, 492, 711, 59713, 825, 927, 59696, 1091, 59187], 'chosen_samples_score': [0, nan, nan, nan, 1.7590825791558018e-06, nan, nan, 4.104509571334347e-06, nan, 4.104525487491628e-06], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.2675140290521085, 'batch_acquisition_elapsed_time': 3.0698317638598382})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 5, 4, 5, 4, 6, 6], 'chosen_samples': [6580, 10226, 27505, 9156, 59406, 11624, 27627, 33630, 46811, 8774], 'chosen_samples_score': [0, 0.00013966540368376643, 0.00037742867955003687, 0.0006813507362001432, 0.0010086996530758656, 0.0013561056695886478, 0.001779430572051783, 0.0021954278871661155, 0.002629717758005727, 0.0031445647400192072], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.957587143173441, 'batch_acquisition_elapsed_time': 4.731131847947836})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6052, 'nll': 1.4972969303106904}, 'chosen_targets': [6, 6, 6, 6, 6, 6, 6, 6, 6, 6], 'chosen_samples': [12810, 4724, 2020, 35810, 49344, 8478, 4741, 34456, 53830, 25684], 'chosen_samples_score': [0, 7.049026187867453e-06, 2.380414322293038e-05, 4.826257957393366e-05, 9.168879633941114e-05, 0.00015541173901690767, 0.00022556593532750447, 0.00032279513694462997, 0.0004367458229199244, 0.0005704488184145219], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0333109190687537, 'batch_acquisition_elapsed_time': 4.470758516807109})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 4, 4, 4, 4, 4, 4, 4, 4, 4], 'chosen_samples': [6580, 4954, 52274, 4789, 34572, 8508, 8644, 7248, 59434, 12618], 'chosen_samples_score': [0, 0.009622904862129265, 0.011520054708927325, 0.012417906016995866, 0.012788264370393205, 0.013015005366332348, 0.01316328288887356, 0.013175272824088445, 0.013157960617401356, 0.013133374128415162], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.064919594908133, 'batch_acquisition_elapsed_time': 3.6523204501718283})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5822, 'nll': 1.5074473642464161}, 'chosen_targets': [3, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'chosen_samples': [875, 21470, 49168, 34484, 18097, 29698, 41087, 26245, 36833, 38140], 'chosen_samples_score': [0, 0.010167128959947914, 0.012414989824391843, 0.013575095365420746, 0.014236376223250897, 0.014719800162013214, 0.014952436418490587, 0.015173120276214959, 0.015330447171899303, 0.015316310744206725], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.6381729310378432, 'batch_acquisition_elapsed_time': 3.5272574899718165})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [6580, 2629, 20863, 39093, 45021, 14897, 9142, 54832, 28295, 39789], 'chosen_samples_score': [0, 0.15525335627964854, 0.1975397888690773, 0.21942145891854967, 0.2351747159816159, 0.2450039720631855, 0.2512883355247309, 0.25367531572723134, 0.2546591788346168, 0.2539389219145341], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 11.540136016905308, 'batch_acquisition_elapsed_time': 4.4995871698483825})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 5, 4, 5, 4, 6, 6], 'chosen_samples': [6580, 10226, 27505, 9156, 59406, 11624, 27627, 33630, 46811, 8774], 'chosen_samples_score': [0, 0.00013966540368376643, 0.00037742867955003687, 0.0006813507362001432, 0.0010086996530758656, 0.0013561056695886478, 0.001779430572051783, 0.0021954278871661155, 0.002629717758005727, 0.0031445647400192072], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 11.69160719611682, 'batch_acquisition_elapsed_time': 6.669464925071225})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6052, 'nll': 1.4972969303106904}, 'chosen_targets': [6, 6, 6, 6, 6, 6, 6, 6, 6, 6], 'chosen_samples': [12810, 4724, 2020, 35810, 49344, 8478, 4741, 34456, 53830, 25684], 'chosen_samples_score': [0, 7.049026187867453e-06, 2.380414322293038e-05, 4.826257957393366e-05, 9.168879633941114e-05, 0.00015541173901690767, 0.00022556593532750447, 0.00032279513694462997, 0.0004367458229199244, 0.0005704488184145219], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.868857241002843, 'batch_acquisition_elapsed_time': 5.849603828974068})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 5, 4, 5, 4, 6, 6], 'chosen_samples': [6580, 10226, 27505, 9156, 59406, 11624, 27627, 33630, 46811, 8774], 'chosen_samples_score': [0, 0.00013966540368376643, 0.00037742867955003687, 0.0006813507362001432, 0.0010086996530758656, 0.0013561056695886478, 0.001779430572051783, 0.0021954278871661155, 0.002629717758005727, 0.0031445647400192072], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.788925278000534, 'batch_acquisition_elapsed_time': 6.6233458910137415})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 0, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'multibald', '--gpu', '0']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 5, 4, 5, 4, 6, 6], 'chosen_samples': [6580, 10226, 27505, 9156, 59406, 11624, 27627, 33630, 46811, 8774], 'chosen_samples_score': [0, 0.00013966540368376643, 0.00037742867955003687, 0.0006813507362001432, 0.0010086996530758656, 0.0013561056695886478, 0.001779430572051783, 0.0021954278871661155, 0.002629717758005727, 0.0031445647400192072], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.788826329167932, 'batch_acquisition_elapsed_time': 6.424968971172348})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 5, 4, 5, 4, 6, 6], 'chosen_samples': [6580, 10226, 27505, 9156, 59406, 11624, 27627, 33630, 46811, 8774], 'chosen_samples_score': [0, 0.00013966540368376643, 0.00037742867955003687, 0.0006813507362001432, 0.0010086996530758656, 0.0013561056695886478, 0.001779430572051783, 0.0021954278871661155, 0.002629717758005727, 0.0031445647400192072], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.304201178951189, 'batch_acquisition_elapsed_time': 5.871657100971788})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 5, 4, 5, 4, 6, 6], 'chosen_samples': [6580, 10226, 27505, 9156, 59406, 11624, 27627, 33630, 46811, 8774], 'chosen_samples_score': [0, 0.00013966540368376653, 0.00037742867955003676, 0.0006813507362001431, 0.0010086996530758656, 0.0013561056695886478, 0.0017794305720517827, 0.002195427887166115, 0.0026297177580057274, 0.003144564740019208], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 11.79303907114081, 'batch_acquisition_elapsed_time': 6.468405717052519})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 5, 4, 5, 4, 6, 6], 'chosen_samples': [6580, 10226, 27505, 9156, 59406, 11624, 27627, 33630, 46811, 8774], 'chosen_samples_score': [0, 0.00013966540368376653, 0.00037742867955003676, 0.0006813507362001431, 0.0010086996530758656, 0.0013561056695886478, 0.0017794305720517827, 0.002195427887166115, 0.0026297177580057274, 0.003144564740019208], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.56327533791773, 'batch_acquisition_elapsed_time': 5.523045655107126})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6052, 'nll': 1.4972969303106904}, 'chosen_targets': [6, 6, 6, 6, 6, 6, 6, 6, 6, 6], 'chosen_samples': [12810, 4724, 2020, 35810, 49344, 8478, 4741, 34456, 53830, 25684], 'chosen_samples_score': [0, 7.0490261878674515e-06, 2.3804143222930363e-05, 4.8262579573933645e-05, 9.168879633941106e-05, 0.0001554117390169076, 0.00022556593532750428, 0.00032279513694463013, 0.0004367458229199242, 0.000570448818414522], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.320970620028675, 'batch_acquisition_elapsed_time': 4.769137101015076})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 5, 6, 6, 5, 5, 4], 'chosen_samples': [6580, 10226, 27505, 9156, 59406, 46811, 8774, 27627, 42511, 11624], 'chosen_samples_score': [0, 0.00013966540368376653, 0.00023624173951054218, 0.0002455960789693293, 0.0002975272063697023, 0.0003111464720097506, 0.0003413132574001914, 0.00034902141867466826, 0.00035066340137904, 0.00035810148776065304], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 11.215085403993726, 'batch_acquisition_elapsed_time': 5.431226457934827})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6034, 'nll': 1.4619396685793375}, 'chosen_targets': [3, 6, 6, 5, 4, 6, 6, 6, 6, 6], 'chosen_samples': [37271, 4724, 35810, 13580, 33630, 51507, 34456, 2020, 8478, 25684], 'chosen_samples_score': [0, 6.378506844520161e-05, 0.00011967348286250453, 0.0001599386058701154, 0.00017335362764586712, 0.0001756260403395401, 0.0002031846087217989, 0.00020982686224159695, 0.0002104684913626013, 0.0002287575022594895], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.9524967989418656, 'batch_acquisition_elapsed_time': 6.36975106690079})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5894, 'nll': 1.3973800564921013}, 'chosen_targets': [4, 5, 5, 5, 5, 5, 5, 3, 3, 5], 'chosen_samples': [40025, 4462, 5934, 2329, 6426, 7457, 27310, 52038, 50560, 17468], 'chosen_samples_score': [0, 2.4404538227461788e-05, 4.0762912266861425e-05, 4.119878234765072e-05, 4.877180046777626e-05, 5.3252212234070966e-05, 5.5359121672474494e-05, 6.18765537746937e-05, 6.958361727411352e-05, 7.60765253458068e-05], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.047844627872109, 'batch_acquisition_elapsed_time': 6.157803178066388})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 5, 6, 6, 5, 5, 4], 'chosen_samples': [6580, 10226, 27505, 9156, 59406, 46811, 8774, 27627, 42511, 11624], 'chosen_samples_score': [0, 0.00013966540368376653, 0.00023624173951054218, 0.0002455960789693293, 0.0002975272063697023, 0.0003111464720097506, 0.0003413132574001914, 0.00034902141867466826, 0.00035066340137904, 0.00035810148776065304], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.470473219873384, 'batch_acquisition_elapsed_time': 5.8391870749183})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 6, 6, 6, 5, 6, 5, 1, 5], 'chosen_samples': [6580, 10226, 27505, 9156, 46811, 42511, 8774, 59406, 11352, 27627], 'chosen_samples_score': [0, 0.000311699324273463, 0.00040998335395720826, 0.00042383602406583675, 0.0005368755885693954, 0.0005599056075863526, 0.0006276448360835497, 0.0006373424885727336, 0.0006727061377557489, 0.0007016033124657293], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.26712494599633, 'batch_acquisition_elapsed_time': 6.052534321788698})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 4, 0, 4, 4, 6, 0, 0, 9, 4], 'chosen_samples': [6580, 4954, 9329, 32578, 52274, 19927, 9142, 2629, 57290, 33204], 'chosen_samples_score': [0, 0.00962290486212927, 0.009580820583801625, 0.009568590955975233, 0.009554861420357002, 0.009462429349776204, 0.00930566244084, 0.009278503913021978, 0.009245675634860307, 0.00920125964111308], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.829340571071953, 'batch_acquisition_elapsed_time': 6.224980669096112})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5928, 'nll': 1.442346190646228}, 'chosen_targets': [6, 2, 8, 4, 2, 2, 2, 2, 8, 2], 'chosen_samples': [10463, 51090, 39575, 1448, 18201, 29698, 18097, 41087, 25587, 410], 'chosen_samples_score': [0, 0.010737784775367767, 0.010730307040471097, 0.010611320409538397, 0.010539132832655498, 0.010321880143928224, 0.010305789442873487, 0.010132231715283822, 0.010096519818941257, 0.010053171813563784], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.538102603983134, 'batch_acquisition_elapsed_time': 4.588494217954576})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.402436722958635}, 'chosen_targets': [6, 6, 0, 6, 6, 8, 6, 8, 5, 7], 'chosen_samples': [21081, 1466, 47473, 14237, 18530, 59224, 49886, 57276, 23746, 44064], 'chosen_samples_score': [0, 0.010528011883749204, 0.009434092252023659, 0.009407985726549372, 0.009357624507187278, 0.009337631367719092, 0.009318015426243479, 0.009253208234278054, 0.009244673841066644, 0.009211485473223457], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.052879356080666, 'batch_acquisition_elapsed_time': 6.347441877005622})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 4, 0, 4, 4, 6, 0, 0, 9, 4], 'chosen_samples': [6580, 4954, 9329, 32578, 52274, 19927, 9142, 2629, 57290, 33204], 'chosen_samples_score': [0, 0.00962290486212927, 0.009580820583801625, 0.009568590955975233, 0.009554861420357002, 0.009462429349776204, 0.00930566244084, 0.009278503913021978, 0.009245675634860307, 0.00920125964111308], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.108230674872175, 'batch_acquisition_elapsed_time': 4.508472038898617})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5928, 'nll': 1.442346190646228}, 'chosen_targets': [6, 2, 8, 4, 2, 2, 2, 2, 8, 2], 'chosen_samples': [10463, 51090, 39575, 1448, 18201, 29698, 18097, 41087, 25587, 410], 'chosen_samples_score': [0, 0.010737784775367767, 0.010730307040471097, 0.010611320409538397, 0.010539132832655498, 0.010321880143928224, 0.010305789442873487, 0.010132231715283822, 0.010096519818941257, 0.010053171813563784], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.2603637350257486, 'batch_acquisition_elapsed_time': 5.618733580922708})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 4, 4, 4, 4, 4, 4, 4, 9, 4], 'chosen_samples': [6580, 4954, 52274, 4789, 8508, 32578, 33204, 29228, 57290, 49967], 'chosen_samples_score': [0, 0.00962290486212927, 0.01935598665359379, 0.01895225067317107, 0.018265307006277844, 0.018197370498784098, 0.01892590724394419, 0.018393825344954044, 0.018156738331137064, 0.01811084271879755], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.122819632058963, 'batch_acquisition_elapsed_time': 5.289688850054517})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6008, 'nll': 1.443716776365397}, 'chosen_targets': [6, 6, 6, 6, 6, 6, 6, 6, 6, 2], 'chosen_samples': [13565, 14889, 19105, 4867, 5334, 47214, 30295, 21934, 59359, 3676], 'chosen_samples_score': [0, 0.012033953249346802, 0.014924203286099754, 0.01416130121682993, 0.015819812662208648, 0.014948149523445996, 0.014928509018221297, 0.01480216065378528, 0.014801207877457574, 0.014477541797344335], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.090700570959598, 'batch_acquisition_elapsed_time': 3.7051690840162337})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 4, 4, 4, 4, 4, 4, 4, 9, 4], 'chosen_samples': [6580, 4954, 52274, 4789, 8508, 32578, 59434, 33204, 57290, 438], 'chosen_samples_score': [0, 0.00962290486212927, 0.014455424036975396, 0.015380698291420275, 0.015664852083542322, 0.015677472989477702, 0.01604018494236133, 0.016111233751534726, 0.01600560606387704, 0.015817536946803545], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.072592036100104, 'batch_acquisition_elapsed_time': 5.424126183846965})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.608, 'nll': 1.3509757267239701}, 'chosen_targets': [6, 0, 6, 6, 4, 2, 6, 6, 6, 6], 'chosen_samples': [10463, 47473, 49483, 13047, 54881, 3676, 37044, 59359, 1918, 10910], 'chosen_samples_score': [0, 0.013210314509853317, 0.01385189133540423, 0.013377720817598748, 0.01329476635252348, 0.013148347112260431, 0.013504300330422022, 0.013889811452673978, 0.014048191757773628, 0.013810706181368374], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.031085660913959, 'batch_acquisition_elapsed_time': 3.972431000089273})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6086, 'nll': 1.4448864119715472}, 'chosen_targets': [4, 4, 9, 1, 4, 8, 8, 8, 8, 8], 'chosen_samples': [2334, 18990, 34668, 59339, 22531, 25587, 20819, 39575, 24959, 10837], 'chosen_samples_score': [0, 0.012036112524650176, 0.012770683791647301, 0.014205757034066785, 0.015179436057337693, 0.015603013537394067, 0.01602896187413443, 0.01626056978214264, 0.016313207500936525, 0.016402517179379128], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.9777370980009437, 'batch_acquisition_elapsed_time': 3.4890680101234466})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5994, 'nll': 1.3413934146307156}, 'chosen_targets': [3, 2, 5, 5, 5, 5, 5, 5, 5, 5], 'chosen_samples': [4891, 39467, 13336, 56200, 23690, 4845, 32488, 58877, 49991, 44928], 'chosen_samples_score': [0, 0.00837070598910076, 0.01063650576659204, 0.01161263048646957, 0.012491449549235159, 0.012161316271208757, 0.012205831853929339, 0.012331526112348676, 0.011906668497304939, 0.011771047874119221], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.8849355860147625, 'batch_acquisition_elapsed_time': 3.659260221058503})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 4, 4, 4, 4, 4, 4, 4, 9, 4], 'chosen_samples': [6580, 4954, 52274, 4789, 8508, 32578, 59434, 33204, 57290, 438], 'chosen_samples_score': [0, 0.00962290486212927, 0.014455424036975396, 0.015380698291420275, 0.015664852083542322, 0.015677472989477702, 0.01604018494236133, 0.016111233751534726, 0.01600560606387704, 0.015817536946803545], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.603244988014922, 'batch_acquisition_elapsed_time': 5.215571581851691})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.608, 'nll': 1.3509757267239701}, 'chosen_targets': [6, 0, 6, 6, 4, 2, 6, 6, 6, 6], 'chosen_samples': [10463, 47473, 49483, 13047, 54881, 3676, 37044, 59359, 1918, 10910], 'chosen_samples_score': [0, 0.013210314509853317, 0.01385189133540423, 0.013377720817598748, 0.01329476635252348, 0.013148347112260431, 0.013504300330422022, 0.013889811452673978, 0.014048191757773628, 0.013810706181368374], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0973109279293567, 'batch_acquisition_elapsed_time': 5.418352944077924})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6086, 'nll': 1.4448864119715472}, 'chosen_targets': [4, 4, 9, 1, 4, 8, 8, 8, 8, 8], 'chosen_samples': [2334, 18990, 34668, 59339, 22531, 25587, 20819, 39575, 24959, 10837], 'chosen_samples_score': [0, 0.012036112524650176, 0.012770683791647301, 0.014205757034066785, 0.015179436057337693, 0.015603013537394067, 0.01602896187413443, 0.01626056978214264, 0.016313207500936525, 0.016402517179379128], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.9858848459552974, 'batch_acquisition_elapsed_time': 5.349757496966049})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 4, 0, 4, 4, 6, 0, 0, 9, 4], 'chosen_samples': [6580, 4954, 9329, 32578, 52274, 19927, 9142, 2629, 57290, 33204], 'chosen_samples_score': [0, 0.00962290486212927, 0.009580820583801625, 0.009568590955975233, 0.009554861420357002, 0.009462429349776204, 0.00930566244084, 0.009278503913021978, 0.009245675634860307, 0.00920125964111308], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.542645666981116, 'batch_acquisition_elapsed_time': 4.414625287055969})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5928, 'nll': 1.442346190646228}, 'chosen_targets': [6, 2, 8, 4, 2, 2, 2, 2, 8, 2], 'chosen_samples': [10463, 51090, 39575, 1448, 18201, 29698, 18097, 41087, 25587, 410], 'chosen_samples_score': [0, 0.010737784775367767, 0.010730307040471097, 0.010611320409538397, 0.010539132832655498, 0.010321880143928224, 0.010305789442873487, 0.010132231715283822, 0.010096519818941257, 0.010053171813563784], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.9700408768840134, 'batch_acquisition_elapsed_time': 4.4274725639261305})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.402436722958635}, 'chosen_targets': [6, 6, 0, 6, 6, 8, 6, 8, 5, 7], 'chosen_samples': [21081, 1466, 47473, 14237, 18530, 59224, 49886, 57276, 23746, 44064], 'chosen_samples_score': [0, 0.010528011883749204, 0.009434092252023659, 0.009407985726549372, 0.009357624507187278, 0.009337631367719092, 0.009318015426243479, 0.009253208234278054, 0.009244673841066644, 0.009211485473223457], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1177632389590144, 'batch_acquisition_elapsed_time': 4.89187957206741})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6244, 'nll': 1.2964696541967866}, 'chosen_targets': [3, 2, 2, 2, 2, 2, 3, 3, 2, 2], 'chosen_samples': [37271, 23584, 57442, 27957, 6391, 6377, 43417, 44903, 27232, 46217], 'chosen_samples_score': [0, 0.01146140293610509, 0.011066051157166001, 0.010873807361693544, 0.010739148376096675, 0.010325633082199285, 0.010131138486021471, 0.01005499187744889, 0.010011587185036462, 0.009992448409603], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 2.538668650900945, 'batch_acquisition_elapsed_time': 5.326538630062714})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.621, 'nll': 1.207728265866899}, 'chosen_targets': [4, 8, 6, 6, 0, 6, 6, 4, 6, 4], 'chosen_samples': [2334, 18674, 39320, 52156, 14773, 43420, 16998, 44342, 15951, 19923], 'chosen_samples_score': [0, 0.010148640214617683, 0.01000247690217368, 0.009762833157472839, 0.00948688906786022, 0.009468950703366171, 0.009322989492686822, 0.00930503194912903, 0.009288081407213605, 0.00925447942768852], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.2871274009812623, 'batch_acquisition_elapsed_time': 5.462955198949203})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 3, 4, 4, 4, 4, 8, 2, 4, 8], 'chosen_samples': [6580, 22443, 54634, 40677, 2217, 15686, 39519, 9193, 8644, 24959], 'chosen_samples_score': [0, 0.029632966965436935, 0.029019780457019806, 0.0289558544754982, 0.028941528871655464, 0.028613969683647156, 0.02855612151324749, 0.028423011302947998, 0.028218958526849747, 0.02813406102359295], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.53336667502299, 'batch_acquisition_elapsed_time': 4.216911046067253})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5592, 'nll': 1.488338738035432}, 'chosen_targets': [0, 0, 2, 0, 0, 3, 2, 0, 3, 7], 'chosen_samples': [27462, 11453, 59374, 32062, 18337, 36852, 27957, 48554, 23294, 13600], 'chosen_samples_score': [0, 0.036047618836164474, 0.033990535885095596, 0.03396409749984741, 0.032771721482276917, 0.03208883851766586, 0.03173023834824562, 0.03144466504454613, 0.031415343284606934, 0.0313333161175251], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.104461920214817, 'batch_acquisition_elapsed_time': 3.6966405301354825})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6568, 'nll': 1.0493557826980684}, 'chosen_targets': [6, 8, 8, 6, 6, 8, 2, 1, 3, 0], 'chosen_samples': [23626, 44241, 5409, 33055, 49483, 58777, 41466, 25981, 38377, 48434], 'chosen_samples_score': [0, 0.03296607732772827, 0.03229938820004463, 0.03198312595486641, 0.03189826384186745, 0.03144541010260582, 0.030856702476739883, 0.030682630836963654, 0.030471622943878174, 0.030226994305849075], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.169762165984139, 'batch_acquisition_elapsed_time': 3.4360778981354088})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7062, 'nll': 0.9541477856764986}, 'chosen_targets': [7, 7, 7, 2, 2, 7, 4, 2, 1, 5], 'chosen_samples': [22753, 17183, 13963, 1447, 15279, 23698, 49479, 1096, 47075, 22193], 'chosen_samples_score': [0, 0.03444581478834152, 0.03299137204885483, 0.03230464458465576, 0.03207346796989441, 0.031341616064310074, 0.031318578869104385, 0.03102225624024868, 0.03090975619852543, 0.030882280319929123], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1123558131512254, 'batch_acquisition_elapsed_time': 3.473470436176285})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7492, 'nll': 0.8326867817265095}, 'chosen_targets': [6, 4, 4, 4, 4, 4, 6, 4, 4, 4], 'chosen_samples': [19293, 13471, 15568, 45238, 42781, 21940, 13731, 44798, 19819, 30602], 'chosen_samples_score': [0, 0.038801874965429306, 0.038433223962783813, 0.036361925303936005, 0.03563864529132843, 0.03433438017964363, 0.03351110219955444, 0.033150773495435715, 0.03281400725245476, 0.032759178429841995], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1519141469616443, 'batch_acquisition_elapsed_time': 3.524953533196822})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.732, 'nll': 0.9202901255044069}, 'chosen_targets': [3, 7, 9, 6, 6, 6, 6, 7, 1, 7], 'chosen_samples': [25538, 1057, 50358, 35205, 54847, 45552, 4520, 35636, 6413, 17955], 'chosen_samples_score': [0, 0.028521452099084854, 0.02755684405565262, 0.027428781613707542, 0.02742527425289154, 0.027248287573456764, 0.02696078270673752, 0.02693718671798706, 0.02682793140411377, 0.026799073442816734], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1814255509525537, 'batch_acquisition_elapsed_time': 3.389833295950666})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 3, 5, 8, 8, 8, 9, 8, 8, 8], 'chosen_samples': [6580, 22443, 43837, 39519, 24959, 57767, 33443, 25873, 25766, 25587], 'chosen_samples_score': [0, 0.029632966965436935, 0.03360749036073685, 0.03352029621601105, 0.03736760467290878, 0.03785046190023422, 0.03794632852077484, 0.03781474754214287, 0.037933483719825745, 0.03818272426724434], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.594127781921998, 'batch_acquisition_elapsed_time': 4.27056355192326})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5408, 'nll': 1.446180117079097}, 'chosen_targets': [2, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'chosen_samples': [28795, 10500, 35108, 37531, 17422, 46915, 44473, 28063, 27025, 1989], 'chosen_samples_score': [0, 0.0295619647949934, 0.037677373737096786, 0.038698360323905945, 0.03938176855444908, 0.04013672471046448, 0.04107336699962616, 0.04202047362923622, 0.04299790412187576, 0.04330621287226677], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.217682289890945, 'batch_acquisition_elapsed_time': 3.7272067030426115})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5468, 'nll': 1.5579872505271926}, 'chosen_targets': [7, 4, 9, 1, 1, 5, 5, 1, 1, 1], 'chosen_samples': [15254, 46623, 3696, 21899, 50068, 30626, 3219, 36924, 33648, 38056], 'chosen_samples_score': [0, 0.03136790543794632, 0.03299541771411896, 0.03319961950182915, 0.03582446649670601, 0.035970788449048996, 0.039073213934898376, 0.03724265843629837, 0.037642356008291245, 0.03775782138109207], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.080459389137104, 'batch_acquisition_elapsed_time': 3.7391039340291172})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6328, 'nll': 1.282689823233043}, 'chosen_targets': [6, 6, 6, 6, 6, 6, 4, 0, 4, 4], 'chosen_samples': [28898, 13046, 14109, 14237, 18530, 47006, 4567, 3709, 15298, 54447], 'chosen_samples_score': [0, 0.03330361098051071, 0.03433392941951752, 0.035546980798244476, 0.036084242165088654, 0.035183750092983246, 0.03387445956468582, 0.03435652330517769, 0.034083615988492966, 0.0339764766395092], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1623152608517557, 'batch_acquisition_elapsed_time': 3.4359581880271435})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 3, 5, 0, 9, 2, 8, 1, 3, 8], 'chosen_samples': [6580, 22443, 43837, 943, 45739, 28630, 28892, 10285, 8450, 25873], 'chosen_samples_score': [0, 0.029632966965436935, 0.03976662456989288, 0.039786793291568756, 0.039129838347435, 0.039054594933986664, 0.04022335633635521, 0.04361003264784813, 0.04300583153963089, 0.04717088118195534], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.899130763020366, 'batch_acquisition_elapsed_time': 4.2058291849680245})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6032, 'nll': 1.3048394465769158}, 'chosen_targets': [7, 7, 7, 7, 3, 3, 7, 7, 3, 3], 'chosen_samples': [53911, 43645, 16133, 44219, 40550, 8709, 17955, 50783, 42083, 42117], 'chosen_samples_score': [0, 0.03547824174165726, 0.04541195183992386, 0.04517706111073494, 0.04732140153646469, 0.04727178066968918, 0.04547619819641113, 0.04508877545595169, 0.047438256442546844, 0.04505123570561409], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.4689306090585887, 'batch_acquisition_elapsed_time': 3.64760449109599})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.666, 'nll': 1.0344288962352637}, 'chosen_targets': [2, 3, 7, 7, 9, 2, 7, 0, 3, 7], 'chosen_samples': [28795, 7322, 11946, 7125, 15244, 8691, 41520, 14472, 43076, 14095], 'chosen_samples_score': [0, 0.0315752737224102, 0.042602356523275375, 0.04538838565349579, 0.04512016475200653, 0.04432285949587822, 0.04405657574534416, 0.0445450022816658, 0.043794579803943634, 0.043476179242134094], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.29214444803074, 'batch_acquisition_elapsed_time': 3.617263908032328})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7154, 'nll': 0.9272072746744904}, 'chosen_targets': [7, 5, 3, 5, 3, 5, 3, 5, 5, 3], 'chosen_samples': [14506, 35838, 1449, 58803, 53757, 799, 51462, 40432, 42046, 17139], 'chosen_samples_score': [0, 0.02904186025261879, 0.050400059670209885, 0.05255096033215523, 0.04771668091416359, 0.052291952073574066, 0.05019291117787361, 0.049241069704294205, 0.04881887510418892, 0.048127952963113785], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.2378986219409853, 'batch_acquisition_elapsed_time': 3.5250101720448583})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6746, 'nll': 1.0136848451829885}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [26820, 48554, 18893, 49639, 18124, 53073, 57201, 27805, 23297, 28274], 'chosen_samples_score': [0, 0.03862176090478897, 0.05169225484132767, 0.05023175850510597, 0.04735274240374565, 0.04764343425631523, 0.04707133397459984, 0.046884935349226, 0.04666677117347717, 0.04830707609653473], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.276983147021383, 'batch_acquisition_elapsed_time': 3.3676581010222435})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7014, 'nll': 0.9094067549133968}, 'chosen_targets': [3, 5, 3, 3, 2, 3, 2, 3, 3, 1], 'chosen_samples': [15947, 3219, 45477, 39397, 33659, 4073, 4935, 1119, 1233, 55710], 'chosen_samples_score': [0, 0.03555849567055702, 0.045835740864276886, 0.045229941606521606, 0.04455753043293953, 0.042252302169799805, 0.043349891901016235, 0.04352441057562828, 0.043273791670799255, 0.04224511235952377], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1952759670093656, 'batch_acquisition_elapsed_time': 3.253742024069652})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7112, 'nll': 0.8935669319222918}, 'chosen_targets': [7, 6, 5, 5, 2, 8, 5, 6, 5, 5], 'chosen_samples': [7033, 5554, 4113, 25747, 30884, 59294, 45536, 29620, 23392, 27802], 'chosen_samples_score': [0, 0.031066305935382843, 0.04586169496178627, 0.043778903782367706, 0.04176894575357437, 0.04210313782095909, 0.04150994494557381, 0.04019606113433838, 0.04002285376191139, 0.04684140160679817], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0496263878885657, 'batch_acquisition_elapsed_time': 3.4004780321847647})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 9, 9, 7, 9, 9, 9, 8, 9, 5], 'chosen_samples': [54498, 19537, 9308, 30414, 58562, 48924, 48148, 37522, 35556, 34139], 'chosen_samples_score': [0, 0.04381062835454941, 0.04381062835454941, 0.04173654690384865, 0.04173637554049492, 0.04173637554049492, 0.04173637554049492, 0.04173637554049492, 0.04173637554049492, 0.04173637554049492], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.54239437286742, 'batch_acquisition_elapsed_time': 20.741366543108597})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6013, 'nll': 1.3904961317610007}, 'chosen_targets': [4, 0, 7, 6, 0, 4, 9, 6, 4, 3], 'chosen_samples': [11023, 54985, 50536, 49769, 44513, 35136, 53735, 53697, 53254, 37792], 'chosen_samples_score': [0, 0.051554903388023376, 0.051554903388023376, 0.051554903388023376, 0.051554903388023376, 0.051554903388023376, 0.05133356153964996, 0.05133356153964996, 0.05133356153964996, 0.05133356153964996], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.368796378839761, 'batch_acquisition_elapsed_time': 17.186400602106005})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6865, 'nll': 0.9656748809698922}, 'chosen_targets': [8, 7, 7, 5, 0, 8, 7, 7, 7, 6], 'chosen_samples': [27197, 53338, 55216, 51124, 36055, 22320, 6695, 19978, 46514, 38958], 'chosen_samples_score': [0, 0.04422582685947418, 0.043174441903829575, 0.04317434877157211, 0.04317434877157211, 0.04317434877157211, 0.04317434877157211, 0.043119657784700394, 0.043119270354509354, 0.0431191585958004], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.325674933148548, 'batch_acquisition_elapsed_time': 20.489540125010535})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6752, 'nll': 0.9982558251465523}, 'chosen_targets': [2, 5, 4, 9, 5, 8, 9, 4, 9, 4], 'chosen_samples': [10321, 40172, 54819, 43034, 4416, 30451, 28808, 16037, 11931, 10695], 'chosen_samples_score': [0, 0.04685283079743385, 0.046465951949357986, 0.0452490895986557, 0.044833920896053314, 0.044391315430402756, 0.044391315430402756, 0.044391315430402756, 0.044391315430402756, 0.044391315430402756], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.7069887281395495, 'batch_acquisition_elapsed_time': 18.006699721794575})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7049, 'nll': 0.9316211237850195}, 'chosen_targets': [1, 1, 3, 2, 3, 3, 2, 2, 2, 2], 'chosen_samples': [14756, 42332, 10518, 49028, 25106, 5097, 55504, 54794, 38288, 31852], 'chosen_samples_score': [0, 0.049812521785497665, 0.049812521785497665, 0.0487060509622097, 0.0487060509622097, 0.0487060509622097, 0.048291079699993134, 0.048291079699993134, 0.048291079699993134, 0.048291079699993134], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.317407354945317, 'batch_acquisition_elapsed_time': 17.31629060395062})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8028, 'nll': 0.6434787385285099}, 'chosen_targets': [2, 2, 5, 2, 7, 6, 4, 4, 0, 0], 'chosen_samples': [22661, 17241, 15892, 15731, 54606, 54237, 44584, 32762, 26183, 23821], 'chosen_samples_score': [0, 0.04925980791449547, 0.047876566648483276, 0.0477108359336853, 0.04649363458156586, 0.04649363458156586, 0.04649363458156586, 0.04649363458156586, 0.04649363458156586, 0.04649363458156586], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.421312589896843, 'batch_acquisition_elapsed_time': 17.161846595117822})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8103, 'nll': 0.6444862005741484}, 'chosen_targets': [9, 2, 5, 9, 9, 6, 8, 9, 8, 3], 'chosen_samples': [16488, 54574, 34692, 22782, 19644, 16583, 14457, 12272, 7101, 57990], 'chosen_samples_score': [0, 0.047821901738643646, 0.047821901738643646, 0.047821901738643646, 0.047821901738643646, 0.047821901738643646, 0.047821901738643646, 0.047821901738643646, 0.047821901738643646, 0.04381084442138672], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.4774879741016775, 'batch_acquisition_elapsed_time': 17.309790363069624})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8365, 'nll': 0.6055163882744337}, 'chosen_targets': [8, 4, 2, 5, 3, 9, 3, 4, 3, 4], 'chosen_samples': [1239, 57841, 50826, 36453, 34716, 33961, 3415, 45252, 40517, 33106], 'chosen_samples_score': [0, 0.0526617057621479, 0.0526617057621479, 0.049951206892728806, 0.049951206892728806, 0.049951206892728806, 0.049951206892728806, 0.04795940965414047, 0.04795940965414047, 0.04795940965414047], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.663153636967763, 'batch_acquisition_elapsed_time': 17.82922959397547})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8417, 'nll': 0.5770822249864371}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 5, 0], 'chosen_samples': [21137, 53632, 42448, 33776, 32557, 20334, 7281, 58229, 57593, 57558], 'chosen_samples_score': [0, 0.05119560658931732, 0.05119560658931732, 0.05119560658931732, 0.05119560658931732, 0.05119560658931732, 0.05119560658931732, 0.04961903765797615, 0.04961903765797615, 0.04961903765797615], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.2560150229837745, 'batch_acquisition_elapsed_time': 20.29895609500818})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8303, 'nll': 0.6048740726697901}, 'chosen_targets': [3, 3, 8, 6, 1, 1, 1, 1, 1, 6], 'chosen_samples': [27930, 54915, 41996, 28507, 394, 49397, 16943, 13227, 43411, 50266], 'chosen_samples_score': [0, 0.045359980314970016, 0.045359980314970016, 0.04414251819252968, 0.043451324105262756, 0.04331277683377266, 0.04289822652935982, 0.04220672696828842, 0.042150840163230896, 0.04134953394532204], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.360967211890966, 'batch_acquisition_elapsed_time': 18.20833361102268})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8334, 'nll': 0.5880459317029455}, 'chosen_targets': [2, 2, 6, 7, 4, 6, 4, 7, 7, 7], 'chosen_samples': [19229, 25412, 31220, 19187, 49897, 10419, 20346, 47242, 44257, 17303], 'chosen_samples_score': [0, 0.047572389245033264, 0.0467706061899662, 0.04386633262038231, 0.0438103973865509, 0.04331314191222191, 0.04289801046252251, 0.04287029057741165, 0.04287029057741165, 0.04287029057741165], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.2675720658153296, 'batch_acquisition_elapsed_time': 17.151579502038658})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrbf'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 6, 6, 6, 6, 8, 6, 6, 6, 6], 'chosen_samples': [54498, 51690, 13780, 41690, 9629, 37522, 20081, 30345, 49478, 12636], 'chosen_samples_score': [0, 0.025212022983612137, 0.025151059583112187, 0.025127625398409768, 0.025057800809932862, 0.024902738180168422, 0.02483628805296591, 0.024690801112892277, 0.024657898670270954, 0.024629609632425872], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.375786480959505, 'batch_acquisition_elapsed_time': 18.085306073073298})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5508, 'nll': 1.6399237601120031}, 'chosen_targets': [2, 5, 2, 3, 2, 3, 5, 2, 2, 5], 'chosen_samples': [11346, 23191, 42683, 55771, 24050, 6033, 11154, 1183, 37462, 28175], 'chosen_samples_score': [0, 0.02472717137280583, 0.024654176073166778, 0.024648157063715207, 0.024387330833047265, 0.024321584942517883, 0.024248221317635404, 0.024083255341658068, 0.024067548255606152, 0.023989571060065776], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.441454067826271, 'batch_acquisition_elapsed_time': 20.26884202589281})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6482, 'nll': 1.1666553318916113}, 'chosen_targets': [4, 4, 4, 4, 4, 4, 4, 4, 4, 4], 'chosen_samples': [4228, 19404, 31006, 20053, 19907, 55516, 26546, 25844, 53738, 15866], 'chosen_samples_score': [0, 0.031022096957852536, 0.030346860552180034, 0.03014087422265495, 0.02997185739283244, 0.029853106306977024, 0.029560583148996636, 0.02944026494244568, 0.02943185526069503, 0.02855474796696734], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.3546280059963465, 'batch_acquisition_elapsed_time': 18.279229969950393})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6331, 'nll': 1.1342218941845748}, 'chosen_targets': [8, 4, 7, 4, 4, 6, 4, 4, 4, 7], 'chosen_samples': [12317, 14650, 10716, 35363, 59743, 58506, 17406, 59708, 5445, 29002], 'chosen_samples_score': [0, 0.025426274128542425, 0.024999156402614697, 0.024945694042476436, 0.02490997668477309, 0.02486643255545271, 0.024839370525197836, 0.024716959280527803, 0.024662778189710934, 0.0246322695626854], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.3222428588196635, 'batch_acquisition_elapsed_time': 19.360809565056115})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7091, 'nll': 0.957514763085153}, 'chosen_targets': [9, 6, 4, 6, 2, 6, 6, 6, 3, 6], 'chosen_samples': [28838, 50556, 39123, 14109, 48349, 33010, 14147, 45376, 43126, 46626], 'chosen_samples_score': [0, 0.024805540156797954, 0.023949732476603706, 0.02394117997705116, 0.023910584697825168, 0.023878300779922385, 0.0238775716215874, 0.02379689198778089, 0.023742223647013883, 0.023537841296903173], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.3443531189113855, 'batch_acquisition_elapsed_time': 17.500720905140042})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.723, 'nll': 0.935184346295745}, 'chosen_targets': [2, 2, 9, 9, 2, 5, 9, 9, 4, 9], 'chosen_samples': [17269, 25309, 31878, 56212, 26533, 47769, 23816, 32882, 15514, 52184], 'chosen_samples_score': [0, 0.022653355515046818, 0.02233140614830522, 0.022244515614741535, 0.022227275134264896, 0.022146493545688234, 0.022038618649983185, 0.02199407241208965, 0.021977676759528223, 0.021974337379653607], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.3433894829358906, 'batch_acquisition_elapsed_time': 17.53829570300877})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 9, 9, 7, 9, 9, 9, 8, 5, 9], 'chosen_samples': [54498, 19537, 9308, 30414, 58562, 48924, 48148, 37522, 34139, 35556], 'chosen_samples_score': [0, 0.035814203321933746, 0.035814203321933746, 0.03411870822310448, 0.03411870449781418, 0.03411870449781418, 0.03411870449781418, 0.03411870449781418, 0.03411870449781418, 0.03411860391497612], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.515317108947784, 'batch_acquisition_elapsed_time': 17.871165144024417})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6013, 'nll': 1.3904961317610007}, 'chosen_targets': [4, 0, 7, 6, 0, 4, 9, 4, 9, 6], 'chosen_samples': [11023, 54985, 50536, 49769, 44513, 35136, 53735, 53254, 8776, 53697], 'chosen_samples_score': [0, 0.04214517027139664, 0.04214517027139664, 0.04214517027139664, 0.04214517027139664, 0.04214517027139664, 0.04196418076753616, 0.04196418076753616, 0.04196418076753616, 0.04196406528353691], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.324401614954695, 'batch_acquisition_elapsed_time': 17.73653509002179})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6431, 'nll': 1.235616888311448}, 'chosen_targets': [8, 0, 2, 8, 2, 3, 4, 5, 3, 8], 'chosen_samples': [27197, 49889, 24961, 23350, 49567, 59630, 50411, 15698, 47520, 47936], 'chosen_samples_score': [0, 0.03981641307473183, 0.03981641307473183, 0.03981641307473183, 0.03857290372252464, 0.038414254784584045, 0.038414254784584045, 0.038414254784584045, 0.038211412727832794, 0.03705766052007675], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.265334205003455, 'batch_acquisition_elapsed_time': 17.17350775981322})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6846, 'nll': 0.9780872635281649}, 'chosen_targets': [6, 8, 6, 4, 2, 7, 3, 2, 6, 2], 'chosen_samples': [28805, 19470, 9723, 46716, 3569, 51916, 26154, 21891, 20512, 32601], 'chosen_samples_score': [0, 0.03615351393818855, 0.03615351393818855, 0.03529427945613861, 0.03529427945613861, 0.03524882718920708, 0.03524882718920708, 0.034932490438222885, 0.03423144668340683, 0.034005291759967804], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.530084770172834, 'batch_acquisition_elapsed_time': 19.055987579049543})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7826, 'nll': 0.7086434500750629}, 'chosen_targets': [5, 8, 7, 5, 5, 1, 0, 1, 1, 5], 'chosen_samples': [55591, 54909, 53171, 50263, 23925, 13875, 30240, 1936, 51439, 47177], 'chosen_samples_score': [0, 0.031767092645168304, 0.031767092645168304, 0.031767092645168304, 0.031767092645168304, 0.031767092645168304, 0.031315140426158905, 0.031224193051457405, 0.031066041439771652, 0.03097580559551716], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.353629009099677, 'batch_acquisition_elapsed_time': 17.040645163040608})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8338, 'nll': 0.545709230943694}, 'chosen_targets': [9, 3, 8, 4, 5, 8, 7, 8, 7, 9], 'chosen_samples': [5045, 45911, 4700, 35256, 13533, 53728, 31861, 30874, 6914, 5718], 'chosen_samples_score': [0, 0.04022308439016342, 0.04001976549625397, 0.03891180828213692, 0.03818851709365845, 0.036967672407627106, 0.036424607038497925, 0.036424607038497925, 0.036424607038497925, 0.036424607038497925], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.337486109929159, 'batch_acquisition_elapsed_time': 19.130465681198984})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7911, 'nll': 0.691849199727695}, 'chosen_targets': [5, 2, 4, 7, 1, 1, 6, 6, 2, 7], 'chosen_samples': [9340, 43794, 60, 36157, 28017, 6877, 56405, 33572, 5400, 19334], 'chosen_samples_score': [0, 0.03732948377728462, 0.03732948377728462, 0.03558805212378502, 0.034796759486198425, 0.034796759486198425, 0.034729018807411194, 0.034729018807411194, 0.034729018807411194, 0.03405076637864113], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.369591907132417, 'batch_acquisition_elapsed_time': 17.215374096063897})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8183, 'nll': 0.6164685511932588}, 'chosen_targets': [5, 3, 3, 3, 9, 3, 3, 3, 3, 8], 'chosen_samples': [49140, 56823, 55378, 53042, 51592, 38377, 37765, 36458, 34873, 31726], 'chosen_samples_score': [0, 0.03615351393818855, 0.03615351393818855, 0.03615351393818855, 0.03615351393818855, 0.03615351393818855, 0.03615351393818855, 0.03615351393818855, 0.03615351393818855, 0.03615351393818855], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.2029062788933516, 'batch_acquisition_elapsed_time': 19.26831007306464})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8377, 'nll': 0.605742742533387}, 'chosen_targets': [7, 8, 9, 6, 3, 7, 6, 6, 7, 4], 'chosen_samples': [28933, 38000, 39692, 39379, 32106, 6050, 46310, 12402, 57546, 52873], 'chosen_samples_score': [0, 0.039815835654735565, 0.03979354351758957, 0.03979354351758957, 0.03979354351758957, 0.03979354351758957, 0.03891223296523094, 0.03891223296523094, 0.03891201689839363, 0.03834615647792816], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.8796025931369513, 'batch_acquisition_elapsed_time': 19.290160389849916})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8539, 'nll': 0.5372023982368771}, 'chosen_targets': [2, 0, 0, 9, 0, 4, 9, 0, 4, 4], 'chosen_samples': [11841, 57067, 50727, 50239, 49713, 46038, 44534, 42658, 42519, 42018], 'chosen_samples_score': [0, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.272001012926921, 'batch_acquisition_elapsed_time': 18.26437974302098})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8463, 'nll': 0.5696800843168116}, 'chosen_targets': [2, 3, 9, 9, 5, 7, 8, 5, 9, 2], 'chosen_samples': [17464, 49230, 48584, 41219, 29571, 20398, 52290, 52999, 18131, 22353], 'chosen_samples_score': [0, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494, 0.041851725429296494, 0.04182836040854454, 0.04173829033970833, 0.04173829033970833, 0.04112732410430908], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.667301498120651, 'batch_acquisition_elapsed_time': 17.267308563925326})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8613, 'nll': 0.5869337461403492}, 'chosen_targets': [7, 2, 2, 0, 0, 5, 6, 6, 9, 7], 'chosen_samples': [12956, 27719, 58910, 28628, 59680, 52326, 34840, 18388, 39025, 26441], 'chosen_samples_score': [0, 0.04295940697193146, 0.04196378216147423, 0.04182836040854454, 0.04173829033970833, 0.04173829033970833, 0.04173829033970833, 0.03977121040225029, 0.03925112634897232, 0.03925112634897232], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.295438411878422, 'batch_acquisition_elapsed_time': 17.296876118984073})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8773, 'nll': 0.5348563740111643}, 'chosen_targets': [2, 7, 2, 0, 4, 4, 0, 2, 7, 2], 'chosen_samples': [14139, 51862, 3890, 46412, 33638, 32278, 45126, 56998, 23526, 41633], 'chosen_samples_score': [0, 0.03981630876660347, 0.03981630876660347, 0.038414254784584045, 0.03671857714653015, 0.03671857714653015, 0.03665115311741829, 0.03631185367703438, 0.036040518432855606, 0.03583691269159317], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.314768562093377, 'batch_acquisition_elapsed_time': 19.726567120989785})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8525, 'nll': 0.6400809990816414}, 'chosen_targets': [2, 4, 5, 6, 5, 9, 2, 7, 0, 7], 'chosen_samples': [49192, 52580, 52266, 37370, 25935, 8525, 28, 59602, 56140, 50520], 'chosen_samples_score': [0, 0.032694220542907715, 0.032694220542907715, 0.032694220542907715, 0.032694220542907715, 0.032694220542907715, 0.032694220542907715, 0.03163130208849907, 0.03163130208849907, 0.03163130208849907], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.214215243933722, 'batch_acquisition_elapsed_time': 18.03403597115539})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8695, 'nll': 0.5630989217624851}, 'chosen_targets': [2, 3, 4, 7, 9, 4, 8, 0, 2, 4], 'chosen_samples': [3791, 44181, 20460, 7304, 3588, 46894, 28751, 13719, 38846, 34294], 'chosen_samples_score': [0, 0.04072047397494316, 0.04072047397494316, 0.04072047397494316, 0.04072047397494316, 0.038188423961400986, 0.038188423961400986, 0.03660552576184273, 0.035927578806877136, 0.035927578806877136], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.369006001856178, 'batch_acquisition_elapsed_time': 19.637772439047694})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 9, 6, 1, 8, 6, 8, 6, 8, 6], 'chosen_samples': [54498, 19537, 35664, 57888, 52884, 48827, 43945, 38400, 37431, 9239], 'chosen_samples_score': [0, 0.035814203321933746, 0.03927374258637428, 0.04115799441933632, 0.043891843408346176, 0.04553215578198433, 0.04662569239735603, 0.047406792640686035, 0.04799261689186096, 0.04844825714826584], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.10146409412846, 'batch_acquisition_elapsed_time': 21.836060025030747})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5836, 'nll': 1.6115725592003987}, 'chosen_targets': [6, 3, 7, 4, 2, 7, 9, 9, 3, 3], 'chosen_samples': [29966, 4235, 44039, 52708, 56612, 54152, 55313, 54578, 22231, 17906], 'chosen_samples_score': [0, 0.03615351393818855, 0.039872556924819946, 0.04112023487687111, 0.03910403698682785, 0.04112318903207779, 0.040494825690984726, 0.04215176776051521, 0.04339446872472763, 0.044361013919115067], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.458479871042073, 'batch_acquisition_elapsed_time': 18.36332390503958})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.662, 'nll': 1.0355131398785358}, 'chosen_targets': [4, 4, 4, 4, 8, 5, 9, 3, 5, 5], 'chosen_samples': [55883, 15841, 3503, 52343, 33778, 11839, 22485, 22126, 50399, 34005], 'chosen_samples_score': [0, 0.03615351393818855, 0.04290243610739708, 0.04143636301159859, 0.042065806686878204, 0.042443472892045975, 0.04267239198088646, 0.04366936907172203, 0.04056219011545181, 0.040939074009656906], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.748119845986366, 'batch_acquisition_elapsed_time': 17.83055447600782})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7295, 'nll': 0.8462982000337539}, 'chosen_targets': [3, 9, 2, 6, 6, 6, 0, 3, 2, 6], 'chosen_samples': [36324, 52814, 59415, 42207, 35566, 35158, 28714, 27132, 19132, 18530], 'chosen_samples_score': [0, 0.04056224972009659, 0.042800676077604294, 0.04589824751019478, 0.04744703695178032, 0.048376310616731644, 0.04899582266807556, 0.04943833127617836, 0.04977021366357803, 0.05002834275364876], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.6708629571367055, 'batch_acquisition_elapsed_time': 18.051758768968284})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7805, 'nll': 0.6852751595208835}, 'chosen_targets': [9, 9, 3, 2, 9, 9, 3, 2, 9, 2], 'chosen_samples': [25640, 33610, 55893, 4457, 19007, 58566, 57598, 52373, 51582, 51517], 'chosen_samples_score': [0, 0.03852754458785057, 0.03974853456020355, 0.038994770497083664, 0.03903631865978241, 0.04009244590997696, 0.04209260269999504, 0.04352128505706787, 0.04459279775619507, 0.04542619735002518], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.72600889694877, 'batch_acquisition_elapsed_time': 19.093899517087266})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7974, 'nll': 0.648876984575449}, 'chosen_targets': [8, 2, 5, 5, 7, 4, 7, 8, 3, 3], 'chosen_samples': [4684, 43815, 14673, 31418, 45594, 39590, 36563, 31124, 28953, 24906], 'chosen_samples_score': [0, 0.03830140084028244, 0.0439763218164444, 0.04208466038107872, 0.041421689093112946, 0.043556030839681625, 0.044978927820920944, 0.04599527642130852, 0.046757541596889496, 0.04735041409730911], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.591320107923821, 'batch_acquisition_elapsed_time': 17.434171929955482})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8158, 'nll': 0.631743569230493}, 'chosen_targets': [2, 2, 7, 1, 1, 1, 6, 1, 1, 1], 'chosen_samples': [6846, 16948, 20504, 37354, 33279, 23444, 21003, 15977, 59616, 56081], 'chosen_samples_score': [0, 0.03615351393818855, 0.03978222608566284, 0.0406305231153965, 0.04349624365568161, 0.0452156737446785, 0.04636196419596672, 0.04718073830008507, 0.04409243166446686, 0.04402688145637512], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.614652924006805, 'batch_acquisition_elapsed_time': 17.376086238073185})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8244, 'nll': 0.6009924382305463}, 'chosen_targets': [0, 2, 2, 4, 4, 9, 8, 8, 8, 8], 'chosen_samples': [8855, 17230, 40279, 48786, 33926, 22174, 41611, 36565, 19932, 10339], 'chosen_samples_score': [0, 0.04214517027139664, 0.043139807879924774, 0.04382575675845146, 0.045101363211870193, 0.04586672782897949, 0.046346914023160934, 0.04780098795890808, 0.048891544342041016, 0.04973975569009781], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.323280279058963, 'batch_acquisition_elapsed_time': 18.03596434602514})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8339, 'nll': 0.590471512594516}, 'chosen_targets': [6, 2, 7, 7, 1, 1, 7, 1, 1, 1], 'chosen_samples': [32381, 21042, 55842, 51346, 48273, 45254, 37769, 34632, 31279, 17834], 'chosen_samples_score': [0, 0.040562670677900314, 0.042800676077604294, 0.04589824751019478, 0.04744703695178032, 0.048376310616731644, 0.04899582266807556, 0.04943833127617836, 0.04977021366357803, 0.05002834275364876], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.401927578030154, 'batch_acquisition_elapsed_time': 17.187649755040184})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8483, 'nll': 0.5460112460175437}, 'chosen_targets': [2, 7, 7, 8, 9, 6, 6, 9, 8, 5], 'chosen_samples': [33203, 49242, 11054, 47154, 56237, 33318, 51446, 8238, 15502, 13457], 'chosen_samples_score': [0, 0.038889117538928986, 0.04404445365071297, 0.04243895411491394, 0.04264829307794571, 0.04453731328248978, 0.0439876914024353, 0.0446934774518013, 0.04263422265648842, 0.044177692383527756], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.9435702268965542, 'batch_acquisition_elapsed_time': 17.723457447020337})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.842, 'nll': 0.5429926166920088}, 'chosen_targets': [0, 8, 4, 6, 4, 4, 0, 9, 0, 1], 'chosen_samples': [14749, 1319, 56330, 21728, 40903, 15023, 1046, 38358, 34251, 2426], 'chosen_samples_score': [0, 0.039477165788412094, 0.039047352969646454, 0.04243149980902672, 0.040505874902009964, 0.04282338172197342, 0.042521942406892776, 0.04301099851727486, 0.04470030218362808, 0.042147859930992126], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.363430307013914, 'batch_acquisition_elapsed_time': 17.250466529047117})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 7, 7, 3, 2, 2, 2, 7, 2], 'chosen_samples': [27714, 52926, 51384, 9198, 29701, 180, 31258, 37426, 14032, 55326], 'chosen_samples_score': [0, 0.02879508212208748, 0.029590507969260216, 0.029355177655816078, 0.0298802200704813, 0.03228991851210594, 0.03391372784972191, 0.03625372797250748, 0.0352945402264595, 0.03545722737908363], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.001236500917003, 'batch_acquisition_elapsed_time': 37.99674705090001})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6564, 'nll': 1.099316437757998}, 'chosen_targets': [3, 5, 5, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [12901, 52332, 56935, 54997, 45853, 43665, 45905, 59987, 45769, 5083], 'chosen_samples_score': [0, 0.025327743962407112, 0.029999367892742157, 0.030706679448485374, 0.03391408175230026, 0.03545091673731804, 0.0369035080075264, 0.0377899706363678, 0.038350678980350494, 0.03925822675228119], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.3083476109895855, 'batch_acquisition_elapsed_time': 36.34083868516609})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6828, 'nll': 0.9397923460916667}, 'chosen_targets': [8, 1, 2, 2, 2, 2, 2, 2, 2, 1], 'chosen_samples': [19931, 29062, 57928, 58651, 35240, 58670, 10228, 18215, 19903, 26376], 'chosen_samples_score': [0, 0.024589937180280685, 0.029871536418795586, 0.032555803656578064, 0.0319594107568264, 0.03345463424921036, 0.033312294632196426, 0.03306298702955246, 0.033123746514320374, 0.03286987915635109], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.355447690933943, 'batch_acquisition_elapsed_time': 35.59529511886649})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 2, 1, 3, 7, 8, 1, 3, 2], 'chosen_samples': [27714, 52926, 6492, 29062, 51381, 58167, 51058, 37725, 20606, 8403], 'chosen_samples_score': [0, 0.02879508212208748, 0.02830446884036064, 0.027593528851866722, 0.027363086119294167, 0.027063801884651184, 0.02683168649673462, 0.026787985116243362, 0.026736196130514145, 0.026699353009462357], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.508576339110732, 'batch_acquisition_elapsed_time': 39.053747839992866})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6661, 'nll': 1.0555931337327171}, 'chosen_targets': [8, 5, 8, 7, 0, 8, 8, 7, 8, 5], 'chosen_samples': [28587, 26891, 24359, 38537, 42250, 3630, 23143, 7331, 25074, 57511], 'chosen_samples_score': [0, 0.028936240822076797, 0.028838472440838814, 0.0272593442350626, 0.027060840278863907, 0.027013294398784637, 0.026928452774882317, 0.0268044825643301, 0.02670200727880001, 0.026630965992808342], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.30988470511511, 'batch_acquisition_elapsed_time': 36.790070105111226})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6736, 'nll': 0.9662251684887954}, 'chosen_targets': [4, 4, 9, 9, 4, 9, 4, 9, 6, 9], 'chosen_samples': [5091, 58795, 19537, 45039, 8399, 50593, 53144, 56618, 38214, 42851], 'chosen_samples_score': [0, 0.028931884095072746, 0.028531527146697044, 0.028442896902561188, 0.028039583936333656, 0.027868786826729774, 0.027803786098957062, 0.027682306244969368, 0.02762104570865631, 0.027590075507760048], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.209879860049114, 'batch_acquisition_elapsed_time': 36.123728685081005})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7267, 'nll': 0.8587859959002728}, 'chosen_targets': [9, 9, 4, 8, 4, 5, 2, 4, 0, 8], 'chosen_samples': [20641, 45176, 31858, 13639, 16942, 39513, 26340, 21746, 59847, 25514], 'chosen_samples_score': [0, 0.02637678198516369, 0.026111455634236336, 0.025921180844306946, 0.025487465783953667, 0.02538289688527584, 0.025373298674821854, 0.025334980338811874, 0.025299590080976486, 0.02529359981417656], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.254726815968752, 'batch_acquisition_elapsed_time': 33.38506918796338})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7697, 'nll': 0.7382510305712209}, 'chosen_targets': [9, 8, 4, 1, 8, 9, 8, 7, 7, 8], 'chosen_samples': [58413, 36944, 15891, 34640, 11614, 10857, 55430, 48102, 56030, 5696], 'chosen_samples_score': [0, 0.02609468251466751, 0.025087416172027588, 0.024859201163053513, 0.024521490558981895, 0.024491218850016594, 0.024439388886094093, 0.024362551048398018, 0.024334844201803207, 0.024135790765285492], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.119001657003537, 'batch_acquisition_elapsed_time': 34.863572881091386})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7946, 'nll': 0.6870719109663065}, 'chosen_targets': [5, 6, 6, 1, 2, 6, 6, 6, 2, 2], 'chosen_samples': [19909, 27449, 14190, 51529, 28611, 7867, 27491, 51728, 38953, 18231], 'chosen_samples_score': [0, 0.02640734426677227, 0.025843439623713493, 0.024642229080200195, 0.02451571635901928, 0.024398474022746086, 0.02423706278204918, 0.024151556193828583, 0.02397817187011242, 0.023976361379027367], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.217866498976946, 'batch_acquisition_elapsed_time': 37.84368891292252})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7624, 'nll': 0.7387089291264105}, 'chosen_targets': [8, 5, 5, 7, 0, 5, 9, 0, 5, 5], 'chosen_samples': [21375, 17073, 25557, 46493, 35681, 19825, 15609, 53051, 18600, 23858], 'chosen_samples_score': [0, 0.026915887370705605, 0.024869820103049278, 0.024856898933649063, 0.024662699550390244, 0.024369047954678535, 0.024338318035006523, 0.02428050898015499, 0.024248605594038963, 0.024227779358625412], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.893313235137612, 'batch_acquisition_elapsed_time': 34.12557950685732})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8096, 'nll': 0.6312410358898516}, 'chosen_targets': [9, 4, 3, 2, 4, 3, 4, 4, 9, 4], 'chosen_samples': [23262, 36518, 19285, 23776, 32976, 4138, 12332, 39954, 42400, 10212], 'chosen_samples_score': [0, 0.0286091435700655, 0.02802196890115738, 0.027965417131781578, 0.027759628370404243, 0.027331870049238205, 0.02730107121169567, 0.027212239801883698, 0.027194101363420486, 0.027167070657014847], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.312690043123439, 'batch_acquisition_elapsed_time': 37.134054949041456})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'multibald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 2, 7, 9, 9, 3, 2, 9, 2, 4], 'chosen_samples': [54498, 19443, 36157, 14790, 34824, 874, 28944, 3083, 48356, 23435], 'chosen_samples_score': [1.0639342932484648, 1.7879807904593172, 2.079642829048501, 2.201653204142446, 2.2557348440892846, 2.2830043013322907, 2.2958263057245905, 2.299805904773266, 2.295904256499756, 2.2937718824441324], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.5024233488366, 'batch_acquisition_elapsed_time': 101.74746614019386})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6556, 'nll': 1.1891351979792015}, 'chosen_targets': [3, 6, 2, 8, 3, 2, 8, 2, 2, 3], 'chosen_samples': [17100, 41060, 46286, 28342, 37439, 10417, 27197, 24612, 12938, 46570], 'chosen_samples_score': [1.1444256571297118, 1.8439597670250831, 2.0759509675200594, 2.188172604518334, 2.246293563410295, 2.279694026735695, 2.2975630872580233, 2.3112246492765802, 2.316121300078314, 2.3143646704709324], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.288904998917133, 'batch_acquisition_elapsed_time': 104.74863399215974})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7006, 'nll': 1.0034235478207916}, 'chosen_targets': [8, 7, 0, 8, 6, 8, 5, 5, 0, 7], 'chosen_samples': [1404, 7808, 53432, 32407, 8072, 17362, 40182, 26675, 21521, 41054], 'chosen_samples_score': [0.922141050474032, 1.550918392095993, 1.885809333442443, 2.0680757784592583, 2.17171029490663, 2.2190381718950403, 2.2523762251706474, 2.269615945133725, 2.280586195254293, 2.2919389152980347], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.595314658945426, 'batch_acquisition_elapsed_time': 104.60885345004499})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7548, 'nll': 0.805333551246}, 'chosen_targets': [9, 6, 6, 0, 2, 4, 0, 7, 6, 4], 'chosen_samples': [14306, 41018, 31974, 46344, 53218, 51337, 8113, 23678, 19316, 16818], 'chosen_samples_score': [0.9153509072765245, 1.5092757617611872, 1.8485059565395692, 2.037473345528167, 2.144104680238854, 2.210754619119835, 2.2527789272767507, 2.2783919191051325, 2.2819502746066167, 2.291923913011974], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.5826338939368725, 'batch_acquisition_elapsed_time': 101.09547785087489})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 7, 2, 2, 3, 7, 5, 2, 7], 'chosen_samples': [27714, 25491, 3518, 24124, 27770, 5467, 29186, 25144, 18147, 12524], 'chosen_samples_score': [0, 0.014825202719273076, 0.013898894818959971, 0.013313100774266898, 0.013254483490409625, 0.01324915820898944, 0.013241716275594843, 0.01320907468148918, 0.013200042117305176, 0.013192441186876604], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.45844797999598, 'batch_acquisition_elapsed_time': 45.701373090967536})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6519, 'nll': 1.0736164442212224}, 'chosen_targets': [2, 9, 4, 4, 4, 4, 4, 4, 9, 4], 'chosen_samples': [46727, 4788, 14207, 21797, 24810, 27424, 58, 59434, 22086, 52274], 'chosen_samples_score': [0, 0.013849607494007883, 0.013489089273694164, 0.013226941350241201, 0.013216520148857196, 0.013177998239050066, 0.01316903690045125, 0.013155816282875673, 0.01310253375078054, 0.013045566866812627], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.332198946969584, 'batch_acquisition_elapsed_time': 48.597548597026616})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6943, 'nll': 0.9346578216139148}, 'chosen_targets': [7, 7, 7, 7, 7, 7, 7, 7, 7, 7], 'chosen_samples': [26255, 48135, 48341, 59360, 50269, 18402, 27379, 27341, 14795, 22037], 'chosen_samples_score': [0, 0.018656732824261054, 0.018147608009006177, 0.017794191704358333, 0.017789430043219426, 0.017465721737203208, 0.01719899406859493, 0.0171649808014752, 0.016791894125041448, 0.016782336340038527], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.46617317898199, 'batch_acquisition_elapsed_time': 48.42720970581286})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7131, 'nll': 0.9500303565779277}, 'chosen_targets': [7, 2, 2, 2, 2, 2, 2, 2, 7, 2], 'chosen_samples': [33798, 14163, 47780, 23503, 49474, 43576, 8390, 14490, 40378, 14446], 'chosen_samples_score': [0, 0.011988629573863561, 0.01146138282870593, 0.011250662820865174, 0.011105537921589734, 0.011080326628653943, 0.010958127184741248, 0.01061691174104114, 0.010610104476212844, 0.010578457694467478], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.4718117960728705, 'batch_acquisition_elapsed_time': 48.080738957971334})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 7, 2, 2, 3, 7, 5, 2, 7], 'chosen_samples': [27714, 25491, 3518, 24124, 27770, 5467, 29186, 25144, 18147, 12524], 'chosen_samples_score': [0, 0.014825202719273076, 0.013898894818959971, 0.013313100774266898, 0.013254483490409625, 0.01324915820898944, 0.013241716275594843, 0.01320907468148918, 0.013200042117305176, 0.013192441186876604], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.281652220059186, 'batch_acquisition_elapsed_time': 46.088444569846615})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6519, 'nll': 1.0736164442212224}, 'chosen_targets': [2, 9, 4, 4, 4, 4, 4, 4, 9, 4], 'chosen_samples': [46727, 4788, 14207, 21797, 24810, 27424, 58, 59434, 22086, 52274], 'chosen_samples_score': [0, 0.013849607494007883, 0.013489089273694164, 0.013226941350241201, 0.013216520148857196, 0.013177998239050066, 0.01316903690045125, 0.013155816282875673, 0.01310253375078054, 0.013045566866812627], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.383703649975359, 'batch_acquisition_elapsed_time': 45.47312734904699})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6943, 'nll': 0.9346578216139148}, 'chosen_targets': [7, 7, 7, 7, 7, 7, 7, 7, 7, 7], 'chosen_samples': [26255, 48135, 48341, 59360, 50269, 18402, 27379, 27341, 14795, 22037], 'chosen_samples_score': [0, 0.018656732824261054, 0.018147608009006177, 0.017794191704358333, 0.017789430043219426, 0.017465721737203208, 0.01719899406859493, 0.0171649808014752, 0.016791894125041448, 0.016782336340038527], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.398355768062174, 'batch_acquisition_elapsed_time': 43.679277724120766})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7131, 'nll': 0.9500303565779277}, 'chosen_targets': [7, 2, 2, 2, 2, 2, 2, 2, 7, 2], 'chosen_samples': [33798, 14163, 47780, 23503, 49474, 43576, 8390, 14490, 40378, 14446], 'chosen_samples_score': [0, 0.011988629573863561, 0.01146138282870593, 0.011250662820865174, 0.011105537921589734, 0.011080326628653943, 0.010958127184741248, 0.01061691174104114, 0.010610104476212844, 0.010578457694467478], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.4516514420975, 'batch_acquisition_elapsed_time': 51.34917555889115})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6724, 'nll': 1.0410769091110461}, 'chosen_targets': [3, 2, 2, 2, 2, 3, 1, 3, 7, 2], 'chosen_samples': [13707, 28389, 31740, 14267, 20055, 15968, 26376, 14476, 41998, 39146], 'chosen_samples_score': [0, 0.011947929782276432, 0.01146025079320831, 0.010863484762930645, 0.010387194335085517, 0.010297177731845691, 0.010111284525315158, 0.010093237955444678, 0.009961267277281093, 0.009906879242424883], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.4046341080684215, 'batch_acquisition_elapsed_time': 45.89147154381499})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7386, 'nll': 0.8698170316451704}, 'chosen_targets': [7, 7, 7, 7, 7, 4, 9, 7, 9, 7], 'chosen_samples': [59468, 24221, 46615, 8629, 2014, 52935, 56178, 4799, 52467, 9665], 'chosen_samples_score': [0, 0.013093469064461759, 0.012802324369258272, 0.01262591803002901, 0.01241746967788245, 0.012407257149369232, 0.012345760892769052, 0.012067875704710426, 0.012052197075539658, 0.01204838890016043], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.388832309981808, 'batch_acquisition_elapsed_time': 43.78069948218763})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 7, 7, 7, 7, 2, 2, 3, 7], 'chosen_samples': [27714, 52926, 51384, 9198, 31076, 19658, 45462, 37734, 31274, 50697], 'chosen_samples_score': [0, 0.02879508212208748, 0.026509715244174004, 0.02425387315452099, 0.02255394496023655, 0.021686188876628876, 0.021072452887892723, 0.02044689655303955, 0.020049218088388443, 0.01960483007133007], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.573033574968576, 'batch_acquisition_elapsed_time': 26.65934004704468})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6339, 'nll': 1.1725199761806173}, 'chosen_targets': [8, 8, 8, 8, 8, 8, 8, 0, 8, 8], 'chosen_samples': [16023, 44007, 25015, 503, 10927, 28785, 58131, 58649, 30173, 3438], 'chosen_samples_score': [0, 0.027684761211276054, 0.026088286191225052, 0.027357716113328934, 0.027646837756037712, 0.027096476405858994, 0.02654194086790085, 0.026010137051343918, 0.025463111698627472, 0.024961629882454872], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.492942873155698, 'batch_acquisition_elapsed_time': 27.48952585598454})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6085, 'nll': 1.308486982996856}, 'chosen_targets': [8, 4, 9, 9, 9, 4, 4, 4, 4, 4], 'chosen_samples': [4761, 46487, 1820, 46238, 20700, 38630, 42421, 27365, 43152, 9026], 'chosen_samples_score': [0, 0.02581804059445858, 0.02473687380552292, 0.022839438170194626, 0.021615931764245033, 0.020573878660798073, 0.01949269510805607, 0.018860161304473877, 0.018217895179986954, 0.01770409569144249], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.274421921931207, 'batch_acquisition_elapsed_time': 27.43877545092255})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 2, 9, 2, 2, 4, 5, 4, 9, 2], 'chosen_samples': [6580, 33133, 8585, 5815, 43815, 37712, 47741, 41865, 40855, 1096], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.133334109559655, 'batch_acquisition_elapsed_time': 2.428780574351549})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6302, 'nll': 1.276293703391139}, 'chosen_targets': [6, 8, 5, 6, 9, 1, 0, 6, 3, 0], 'chosen_samples': [55645, 33162, 16011, 17542, 29472, 42690, 27427, 42207, 17404, 40208], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0694683361798525, 'batch_acquisition_elapsed_time': 1.991020044311881})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 8, 4, 8, 8, 9, 2, 7, 3, 8], 'chosen_samples': [27714, 14697, 48365, 31881, 30415, 23732, 16298, 36157, 40575, 35841], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.5873929765075445, 'batch_acquisition_elapsed_time': 21.881107546389103})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6645, 'nll': 1.110465137224495}, 'chosen_targets': [2, 3, 5, 7, 7, 2, 7, 2, 5, 2], 'chosen_samples': [46727, 4762, 9044, 28880, 47536, 35405, 37536, 6349, 13305, 47575], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.504824774339795, 'batch_acquisition_elapsed_time': 22.95590703934431})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6801, 'nll': 1.0239424400978017}, 'chosen_targets': [5, 2, 1, 0, 5, 8, 6, 5, 0, 0], 'chosen_samples': [51764, 24752, 58072, 14705, 8676, 59101, 37091, 32348, 41376, 14153], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.566531401127577, 'batch_acquisition_elapsed_time': 21.210473146289587})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 8, 4, 8, 9, 2, 7, 3, 8, 3], 'chosen_samples': [27714, 14697, 48365, 31881, 23732, 16298, 36157, 40575, 35841, 22717], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.575638858601451, 'batch_acquisition_elapsed_time': 20.388812720775604})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6722, 'nll': 1.0640473907869772}, 'chosen_targets': [2, 3, 9, 9, 6, 9, 9, 9, 2, 8], 'chosen_samples': [6377, 22643, 10235, 4816, 39273, 5999, 51329, 40485, 6327, 14305], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.620105408132076, 'batch_acquisition_elapsed_time': 19.741348896175623})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6635, 'nll': 1.052811929759439}, 'chosen_targets': [6, 5, 6, 9, 5, 8, 0, 9, 6, 2], 'chosen_samples': [48006, 19942, 47214, 21224, 36939, 28506, 53116, 33472, 31974, 11581], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.6320158410817385, 'batch_acquisition_elapsed_time': 20.302663965150714})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7237, 'nll': 0.8986032384630147}, 'chosen_targets': [7, 7, 7, 7, 7, 7, 7, 7, 7, 7], 'chosen_samples': [37769, 50763, 50877, 4559, 38607, 50849, 16205, 19251, 11640, 29855], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.768369922414422, 'batch_acquisition_elapsed_time': 21.166540691629052})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 8, 9, 2, 7, 8, 3, 9, 2, 4], 'chosen_samples': [27714, 14697, 23732, 16298, 36157, 35841, 22717, 36807, 19545, 2542], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.646766524761915, 'batch_acquisition_elapsed_time': 20.28211343847215})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6722, 'nll': 1.075837860085842}, 'chosen_targets': [3, 2, 2, 2, 2, 2, 2, 5, 7, 5], 'chosen_samples': [643, 42168, 36123, 32022, 1262, 57394, 27073, 19449, 36615, 1311], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.701200498268008, 'batch_acquisition_elapsed_time': 19.696464342996478})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7451, 'nll': 0.7670429529488719}, 'chosen_targets': [0, 8, 0, 6, 6, 0, 5, 7, 5, 0], 'chosen_samples': [2817, 40466, 23104, 24726, 57297, 29311, 23733, 20552, 55591, 17187], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.757283745333552, 'batch_acquisition_elapsed_time': 20.63588890247047})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7367, 'nll': 0.7989399598770698}, 'chosen_targets': [0, 9, 9, 0, 0, 3, 0, 3, 2, 8], 'chosen_samples': [52728, 58422, 29390, 16975, 46826, 46570, 8813, 17324, 54395, 4767], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.7793797962367535, 'batch_acquisition_elapsed_time': 19.943535078316927})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7757, 'nll': 0.7457501264408981}, 'chosen_targets': [8, 8, 3, 3, 8, 3, 2, 2, 8, 5], 'chosen_samples': [39266, 20025, 37383, 37373, 29132, 6428, 42671, 53076, 21399, 36452], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.643125442788005, 'batch_acquisition_elapsed_time': 21.060730054974556})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7935, 'nll': 0.710923646664169}, 'chosen_targets': [5, 5, 5, 5, 5, 2, 5, 2, 8, 8], 'chosen_samples': [21481, 20476, 19759, 36268, 722, 43176, 6418, 45094, 12493, 17756], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.4502782337367535, 'batch_acquisition_elapsed_time': 19.764310490339994})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7698, 'nll': 0.8507358183553382}, 'chosen_targets': [0, 3, 8, 0, 3, 3, 0, 3, 0, 0], 'chosen_samples': [21242, 19829, 59361, 13030, 38602, 28199, 51395, 4864, 2352, 45728], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.550606578588486, 'batch_acquisition_elapsed_time': 19.691111009567976})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 8, 2, 5, 6, 3, 8, 2, 2], 'chosen_samples': [27714, 36157, 35841, 19545, 53000, 17161, 32276, 11885, 6846, 56055], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.697453960776329, 'batch_acquisition_elapsed_time': 22.538338588550687})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6188, 'nll': 1.19798430095523}, 'chosen_targets': [0, 6, 8, 5, 2, 4, 3, 0, 4, 4], 'chosen_samples': [42362, 37217, 32784, 26637, 54240, 52299, 1320, 6179, 35442, 35461], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.809591788798571, 'batch_acquisition_elapsed_time': 21.901850609108806})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7048, 'nll': 0.918727950490418}, 'chosen_targets': [9, 4, 5, 2, 7, 8, 5, 3, 2, 5], 'chosen_samples': [27130, 54264, 55513, 46727, 7033, 24457, 21204, 9420, 13743, 16692], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.563718885183334, 'batch_acquisition_elapsed_time': 21.38023845665157})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7374, 'nll': 0.8951865306644291}, 'chosen_targets': [5, 8, 5, 4, 8, 2, 7, 3, 6, 8], 'chosen_samples': [40678, 12934, 22805, 27514, 20966, 22800, 29338, 14205, 57514, 27459], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.512184053659439, 'batch_acquisition_elapsed_time': 23.88894378207624})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7298, 'nll': 0.8820903594545217}, 'chosen_targets': [0, 5, 8, 2, 0, 3, 9, 5, 5, 2], 'chosen_samples': [58560, 14100, 23112, 5647, 39346, 9403, 43392, 31415, 59377, 28958], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.798296580091119, 'batch_acquisition_elapsed_time': 21.321807587519288})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7663, 'nll': 0.7885711486418636}, 'chosen_targets': [3, 6, 9, 8, 7, 1, 7, 8, 9, 2], 'chosen_samples': [13658, 33812, 55064, 58394, 17849, 7542, 28869, 40437, 19190, 9098], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.727842608466744, 'batch_acquisition_elapsed_time': 21.376264499500394})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8189, 'nll': 0.6460807318776115}, 'chosen_targets': [2, 3, 6, 5, 2, 5, 3, 4, 1, 3], 'chosen_samples': [14121, 41573, 40642, 31926, 3719, 45602, 24531, 44998, 30614, 23877], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.608994400128722, 'batch_acquisition_elapsed_time': 21.26792428828776})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 2, 5, 3, 9, 7, 1, 0, 0], 'chosen_samples': [6580, 47741, 48811, 14096, 43417, 45739, 53956, 47340, 24189, 3632], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.277205476537347, 'batch_acquisition_elapsed_time': 4.590528383851051})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.576, 'nll': 1.4151625426244459}, 'chosen_targets': [6, 5, 3, 2, 2, 3, 8, 4, 9, 4], 'chosen_samples': [28083, 14204, 15848, 47787, 8257, 52853, 42417, 47028, 39532, 32776], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1398275773972273, 'batch_acquisition_elapsed_time': 3.9241793490946293})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 8, 2, 6, 3, 8, 6, 1, 2], 'chosen_samples': [27714, 36157, 35841, 19545, 17161, 32276, 27596, 34827, 9804, 34789], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.619546789675951, 'batch_acquisition_elapsed_time': 42.622156431898475})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6298, 'nll': 1.234586646783136}, 'chosen_targets': [9, 3, 3, 2, 0, 4, 7, 8, 5, 3], 'chosen_samples': [30782, 46549, 9303, 14121, 27153, 23580, 9927, 48752, 42390, 47587], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.712560914456844, 'batch_acquisition_elapsed_time': 33.508156679570675})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7417, 'nll': 0.8506563631224113}, 'chosen_targets': [5, 6, 3, 5, 9, 5, 0, 7, 5, 2], 'chosen_samples': [26901, 37044, 7192, 6169, 57880, 32954, 37946, 15122, 59747, 13743], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.709813378751278, 'batch_acquisition_elapsed_time': 23.1205471213907})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8], 'chosen_samples': [6580], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.042981470003724, 'batch_acquisition_elapsed_time': 7.909554824233055})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 5, 2, 5, 3, 9, 7, 1, 0, 0], 'chosen_samples': [6580, 47741, 48811, 14096, 43417, 45739, 53956, 47340, 24189, 3632], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.765564693138003, 'batch_acquisition_elapsed_time': 5.002146912738681})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.576, 'nll': 1.4151625426244459}, 'chosen_targets': [6, 5, 3, 2, 2, 3, 8, 4, 9, 4], 'chosen_samples': [28083, 14204, 15848, 47787, 8257, 52853, 42417, 47028, 39532, 32776], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.204099340364337, 'batch_acquisition_elapsed_time': 3.9846612997353077})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6526, 'nll': 1.113866923569826}, 'chosen_targets': [7, 6, 7, 8, 6, 3, 4, 2, 1, 8], 'chosen_samples': [31396, 14186, 16133, 38112, 8417, 10984, 29291, 53076, 41424, 40467], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.0896772500127554, 'batch_acquisition_elapsed_time': 4.010969899594784})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7342, 'nll': 0.7880755050035162}, 'chosen_targets': [0, 9, 5, 6, 2, 0, 4, 7, 9, 1], 'chosen_samples': [56444, 14364, 56200, 48262, 54556, 28305, 54634, 40643, 2934, 4225], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1595871038734913, 'batch_acquisition_elapsed_time': 3.3081019930541515})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 8, 2, 6, 3, 8, 6, 1, 2], 'chosen_samples': [27714, 36157, 35841, 19545, 17161, 32276, 27596, 34827, 9804, 34789], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.765159700065851, 'batch_acquisition_elapsed_time': 43.044882237911224})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6298, 'nll': 1.234586646783136}, 'chosen_targets': [9, 3, 3, 2, 0, 4, 7, 8, 5, 3], 'chosen_samples': [30782, 46549, 9303, 14121, 27153, 23580, 9927, 48752, 42390, 47587], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.609036276116967, 'batch_acquisition_elapsed_time': 33.76312153041363})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7417, 'nll': 0.8506563631224113}, 'chosen_targets': [5, 6, 3, 5, 9, 5, 0, 7, 5, 2], 'chosen_samples': [26901, 37044, 7192, 6169, 57880, 32954, 37946, 15122, 59747, 13743], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.65567616187036, 'batch_acquisition_elapsed_time': 23.954828990623355})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7466, 'nll': 0.8041057767077979}, 'chosen_targets': [9, 3, 5, 4, 2, 1, 8, 5, 0, 4], 'chosen_samples': [17958, 43043, 19942, 40719, 14458, 25910, 49509, 47146, 45760, 3946], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.546497305855155, 'batch_acquisition_elapsed_time': 30.80270729213953})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7963, 'nll': 0.6492380712260277}, 'chosen_targets': [9, 3, 2, 3, 2, 2, 2, 3, 5, 1], 'chosen_samples': [4929, 47605, 3791, 14025, 42323, 34902, 21012, 6428, 54483, 26444], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.9214088916778564, 'batch_acquisition_elapsed_time': 25.59565551765263})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8106, 'nll': 0.6493810276581051}, 'chosen_targets': [0, 5, 3, 4, 7, 2, 2, 7, 3, 1], 'chosen_samples': [54004, 32323, 54191, 57985, 7033, 21024, 52582, 38920, 11075, 24038], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.665479827672243, 'batch_acquisition_elapsed_time': 21.96569349244237})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.813, 'nll': 0.6819147601446892}, 'chosen_targets': [2, 6, 8, 2, 4, 3, 4, 2, 8, 5], 'chosen_samples': [27503, 4360, 49824, 52169, 13766, 40575, 55282, 37632, 4873, 42687], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.715808337554336, 'batch_acquisition_elapsed_time': 31.793263783678412})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7835, 'nll': 0.8329376967031321}, 'chosen_targets': [9, 0, 7, 3, 2, 8, 7, 0, 4, 5], 'chosen_samples': [20050, 22634, 27837, 21946, 19505, 517, 4061, 29713, 59900, 7172], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.51412464119494, 'batch_acquisition_elapsed_time': 46.68070864491165})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8156, 'nll': 0.6842939270697614}, 'chosen_targets': [5, 5, 6, 2, 9, 8, 7, 2, 8, 1], 'chosen_samples': [41602, 32277, 7867, 47132, 1674, 33388, 48098, 7673, 42467, 8873], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.7779810000211, 'batch_acquisition_elapsed_time': 27.773719975724816})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8002, 'nll': 0.779698159436596}, 'chosen_targets': [0, 0, 9, 4, 6, 5, 7, 2, 7, 0], 'chosen_samples': [40208, 46412, 50078, 37794, 10298, 15462, 13842, 14378, 10050, 47156], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.92156127654016, 'batch_acquisition_elapsed_time': 126.11373716033995})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 8, 9, 2, 7, 3, 8, 3, 5, 6], 'chosen_samples': [27714, 14697, 23732, 16298, 36157, 40575, 35841, 22717, 32074, 32140], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.524579146876931, 'batch_acquisition_elapsed_time': 21.386227941140532})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6552, 'nll': 1.0680507126801313}, 'chosen_targets': [0, 2, 9, 2, 9, 6, 0, 0, 4, 2], 'chosen_samples': [8116, 13023, 28853, 41169, 28058, 42335, 29903, 30939, 13650, 58841], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.705843197181821, 'batch_acquisition_elapsed_time': 21.19334431923926})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7144, 'nll': 0.8748782244724856}, 'chosen_targets': [3, 2, 2, 8, 9, 7, 0, 2, 0, 2], 'chosen_samples': [50500, 42671, 53019, 40437, 11202, 49616, 14775, 52358, 59418, 56664], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.68796612881124, 'batch_acquisition_elapsed_time': 21.303789637982845})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7037, 'nll': 0.9276176685126547}, 'chosen_targets': [2, 5, 7, 7, 3, 3, 8, 5, 2, 7], 'chosen_samples': [17220, 1285, 18894, 54106, 38529, 10405, 45122, 10804, 31956, 1154], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.847287446260452, 'batch_acquisition_elapsed_time': 23.226095031946898})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7715, 'nll': 0.7413138480137932}, 'chosen_targets': [8, 3, 5, 3, 8, 8, 8, 5, 8, 9], 'chosen_samples': [52862, 7915, 19942, 11708, 10012, 20079, 4873, 16692, 21650, 34743], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.906992277130485, 'batch_acquisition_elapsed_time': 22.28520230948925})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7648, 'nll': 0.7642808754539384}, 'chosen_targets': [9, 0, 5, 9, 5, 6, 7, 0, 3, 8], 'chosen_samples': [28838, 12477, 30991, 9810, 9414, 40492, 52937, 57003, 47140, 49064], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.600613672286272, 'batch_acquisition_elapsed_time': 21.19663974456489})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7795, 'nll': 0.7509121842429013}, 'chosen_targets': [2, 8, 2, 3, 6, 4, 2, 2, 0, 3], 'chosen_samples': [3676, 29132, 23041, 10210, 59693, 34429, 56049, 15510, 11304, 670], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.678087808191776, 'batch_acquisition_elapsed_time': 21.240411823615432})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 3, 8, 5, 6, 4, 8, 2, 9], 'chosen_samples': [27714, 36157, 40575, 35841, 32074, 32140, 23435, 54498, 19545, 30646], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.71902715973556, 'batch_acquisition_elapsed_time': 22.004421202465892})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6726, 'nll': 1.0868048592587471}, 'chosen_targets': [0, 3, 2, 9, 2, 0, 0, 1, 5, 0], 'chosen_samples': [18171, 59416, 45488, 36587, 27915, 25547, 26007, 19188, 35787, 2826], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.650804737582803, 'batch_acquisition_elapsed_time': 21.472676038742065})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7588, 'nll': 0.7564526321966332}, 'chosen_targets': [9, 2, 8, 5, 5, 2, 8, 8, 3, 5], 'chosen_samples': [1364, 25920, 45245, 33247, 49992, 54805, 59101, 58394, 9602, 32348], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.431833136826754, 'batch_acquisition_elapsed_time': 21.428296281024814})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7804, 'nll': 0.7601171377572429}, 'chosen_targets': [4, 2, 2, 8, 3, 2, 4, 9, 6, 6], 'chosen_samples': [50377, 42206, 31634, 32784, 15261, 28525, 13163, 58850, 10463, 40492], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.595730656757951, 'batch_acquisition_elapsed_time': 21.260595040395856})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8176, 'nll': 0.6407984095006015}, 'chosen_targets': [3, 2, 5, 2, 6, 8, 3, 2, 3, 2], 'chosen_samples': [19368, 25246, 32323, 32022, 17079, 24589, 22741, 8691, 46126, 53494], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.571345284581184, 'batch_acquisition_elapsed_time': 21.423269748687744})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7857, 'nll': 0.7239383846175946}, 'chosen_targets': [7, 2, 3, 7, 5, 3, 0, 0, 0, 7], 'chosen_samples': [51819, 47787, 50500, 32145, 2258, 19793, 25823, 55481, 16043, 2417], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.590310513973236, 'batch_acquisition_elapsed_time': 21.865382065996528})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.829, 'nll': 0.6268367292402748}, 'chosen_targets': [0, 2, 9, 9, 9, 0, 5, 0, 8, 5], 'chosen_samples': [13816, 10291, 48030, 53976, 22824, 54985, 34610, 45728, 17756, 7833], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.745492884889245, 'batch_acquisition_elapsed_time': 21.19121197424829})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8123, 'nll': 0.7647506733176838}, 'chosen_targets': [2, 7, 3, 6, 1, 2, 6, 0, 6, 2], 'chosen_samples': [5250, 14386, 36337, 33401, 16971, 8978, 57994, 49354, 7990, 58000], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.7728235851973295, 'batch_acquisition_elapsed_time': 21.70220842398703})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8626, 'nll': 0.6217211334305098}, 'chosen_targets': [6, 9, 4, 9, 2, 5, 6, 6, 9, 2], 'chosen_samples': [14147, 20820, 44466, 31624, 49537, 28231, 22561, 34520, 4459, 16650], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.778023451566696, 'batch_acquisition_elapsed_time': 21.515995835885406})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8324, 'nll': 0.7637071009809872}, 'chosen_targets': [8, 1, 5, 8, 0, 1, 5, 2, 9, 2], 'chosen_samples': [39266, 51544, 37069, 33162, 28102, 26072, 20476, 32065, 8702, 6348], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.653569806367159, 'batch_acquisition_elapsed_time': 21.322822242975235})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 8, 8, 9, 3, 2, 7, 3, 8, 3], 'chosen_samples': [27714, 14697, 31881, 23732, 17010, 16298, 36157, 40575, 35841, 22717], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.579193947836757, 'batch_acquisition_elapsed_time': 20.734443686902523})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6008, 'nll': 1.2329495331125968}, 'chosen_targets': [6, 4, 9, 4, 9, 3, 2, 4, 9, 8], 'chosen_samples': [23050, 35425, 55970, 42793, 33061, 24531, 3676, 42587, 56156, 55683], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.647042566910386, 'batch_acquisition_elapsed_time': 19.68188506923616})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6598, 'nll': 1.0232003459931833}, 'chosen_targets': [0, 2, 0, 0, 2, 2, 2, 0, 0, 0], 'chosen_samples': [56651, 20042, 41376, 39175, 47787, 12784, 17927, 19985, 19915, 48554], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.704415608197451, 'batch_acquisition_elapsed_time': 19.787698520347476})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7249, 'nll': 0.8868207670542649}, 'chosen_targets': [8, 5, 0, 4, 9, 8, 7, 5, 5, 5], 'chosen_samples': [49487, 8479, 30123, 20169, 47445, 31014, 22941, 28057, 5991, 8104], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.660439591854811, 'batch_acquisition_elapsed_time': 19.86291384883225})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.763, 'nll': 0.7531867748491652}, 'chosen_targets': [0, 5, 5, 0, 5, 0, 3, 5, 0, 0], 'chosen_samples': [14817, 19959, 8676, 14749, 20476, 6097, 27143, 32348, 16286, 37946], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.805997712537646, 'batch_acquisition_elapsed_time': 20.337213890627027})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7591, 'nll': 0.7789877993552953}, 'chosen_targets': [2, 8, 8, 9, 4, 4, 4, 2, 2, 2], 'chosen_samples': [28268, 24533, 4797, 5106, 13650, 60, 40224, 31956, 17123, 24612], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.653906282037497, 'batch_acquisition_elapsed_time': 19.683126175776124})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 8, 2, 7, 8, 3, 5, 9, 8, 7], 'chosen_samples': [27714, 14697, 16298, 36157, 35841, 22717, 32074, 36807, 54498, 29633], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.640552144497633, 'batch_acquisition_elapsed_time': 20.202231224626303})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6556, 'nll': 1.0816074297962837}, 'chosen_targets': [7, 2, 5, 2, 3, 9, 7, 2, 6, 5], 'chosen_samples': [2634, 32678, 57369, 1262, 4762, 48030, 33362, 14369, 14405, 29871], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.5930083226412535, 'batch_acquisition_elapsed_time': 21.321787340566516})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6623, 'nll': 1.0719989485607087}, 'chosen_targets': [3, 4, 3, 0, 3, 3, 4, 3, 4, 6], 'chosen_samples': [54559, 27514, 14851, 23293, 953, 12677, 53990, 28957, 41455, 48328], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.196987308561802, 'batch_acquisition_elapsed_time': 20.30989122018218})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.792, 'nll': 0.6596029425669363}, 'chosen_targets': [5, 2, 3, 5, 8, 3, 0, 2, 5, 5], 'chosen_samples': [24332, 56049, 49955, 49202, 4767, 17100, 22634, 19343, 58428, 28512], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.654516255483031, 'batch_acquisition_elapsed_time': 20.1393404006958})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8042, 'nll': 0.6626168439041987}, 'chosen_targets': [2, 6, 2, 4, 9, 8, 8, 2, 0, 0], 'chosen_samples': [27113, 15500, 27503, 991, 1940, 55696, 40466, 39487, 23104, 14329], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.795250941067934, 'batch_acquisition_elapsed_time': 19.95223219692707})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8163, 'nll': 0.6395029389687025}, 'chosen_targets': [5, 2, 2, 5, 7, 9, 2, 5, 2, 0], 'chosen_samples': [23434, 21012, 24982, 16084, 8214, 23901, 15679, 8676, 54805, 26258], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.752285078167915, 'batch_acquisition_elapsed_time': 19.905213365331292})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8296, 'nll': 0.6514643389785563}, 'chosen_targets': [2, 0, 2, 9, 4, 8, 8, 0, 0, 0], 'chosen_samples': [57632, 7649, 48681, 59314, 45048, 55128, 59343, 23971, 59786, 54004], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.757393948733807, 'batch_acquisition_elapsed_time': 19.865439288318157})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7976, 'nll': 0.7644138555015489}, 'chosen_targets': [6, 0, 6, 6, 2, 3, 3, 6, 9, 6], 'chosen_samples': [33812, 11304, 37091, 49255, 3719, 10210, 48700, 28177, 826, 55390], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.809991182759404, 'batch_acquisition_elapsed_time': 20.14962756074965})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8201, 'nll': 0.7536213304872312}, 'chosen_targets': [9, 5, 9, 4, 0, 6, 5, 8, 6, 8], 'chosen_samples': [12305, 4495, 31456, 38898, 12497, 13318, 13533, 21421, 37315, 25301], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.550742458552122, 'batch_acquisition_elapsed_time': 19.887474296614528})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7928, 'nll': 0.7333870807558619}, 'chosen_targets': [5, 3, 5, 2, 3, 3, 2, 8, 3, 7], 'chosen_samples': [49140, 28199, 34800, 11600, 36471, 17997, 26850, 23112, 9913, 22743], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.642763867974281, 'batch_acquisition_elapsed_time': 20.0113045591861})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7444, 'nll': 0.8771349448140021}, 'chosen_targets': [3, 3, 3, 9, 5, 9, 3, 2, 6, 3], 'chosen_samples': [41123, 47587, 47605, 11202, 35864, 13096, 13831, 4955, 10044, 49207], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.665267007425427, 'batch_acquisition_elapsed_time': 19.91302583925426})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7165, 'nll': 0.9225239648718251}, 'chosen_targets': [5, 9, 9, 5, 2, 0, 2, 9, 0, 0], 'chosen_samples': [28455, 1674, 20820, 36268, 47787, 29677, 3676, 48384, 55556, 39664], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.707048675045371, 'batch_acquisition_elapsed_time': 19.785265730693936})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7539, 'nll': 0.8716143781480487}, 'chosen_targets': [3, 5, 8, 3, 3, 3, 3, 0, 5, 0], 'chosen_samples': [48360, 46476, 31706, 43126, 18739, 966, 9664, 46412, 20784, 49354], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.792648522183299, 'batch_acquisition_elapsed_time': 19.896455463021994})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7186, 'nll': 0.9725583459316973}, 'chosen_targets': [6, 5, 7, 6, 0, 8, 7, 8, 6, 0], 'chosen_samples': [49084, 19973, 59468, 44346, 52294, 528, 30188, 49064, 51993, 9687], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.752543972805142, 'batch_acquisition_elapsed_time': 19.94201102666557})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 9, 3, 3, 2, 6, 7, 4, 3, 0], 'chosen_samples': [27714, 23732, 22717, 35045, 19443, 47705, 46457, 51125, 53287, 46748], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.655069064348936, 'batch_acquisition_elapsed_time': 47.7772465236485})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7068, 'nll': 0.9067126388326274}, 'chosen_targets': [2, 5, 3, 2, 8, 8, 8, 9, 5, 6], 'chosen_samples': [6327, 55685, 45801, 35652, 20859, 54178, 14385, 33232, 19430, 23236], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.758465867489576, 'batch_acquisition_elapsed_time': 49.46915633790195})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7209, 'nll': 0.8601339699498621}, 'chosen_targets': [8, 9, 8, 8, 6, 7, 7, 5, 4, 8], 'chosen_samples': [24589, 29390, 45122, 57532, 40591, 54037, 8517, 49890, 32829, 54469], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.758373651653528, 'batch_acquisition_elapsed_time': 40.580018892884254})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7389, 'nll': 0.8223470129145085}, 'chosen_targets': [5, 0, 2, 7, 6, 6, 9, 4, 5, 2], 'chosen_samples': [59377, 16921, 14139, 43912, 5084, 31000, 37369, 27335, 28491, 29287], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.434174174442887, 'batch_acquisition_elapsed_time': 31.82936843857169})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7695, 'nll': 0.7416439181314091}, 'chosen_targets': [0, 0, 3, 0, 5, 8, 3, 7, 4, 9], 'chosen_samples': [59418, 5194, 43978, 28102, 7833, 49064, 27143, 11564, 20183, 41501], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.679088704288006, 'batch_acquisition_elapsed_time': 23.497718259692192})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7679, 'nll': 0.7489195451996233}, 'chosen_targets': [8, 2, 3, 0, 5, 7, 9, 7, 5, 9], 'chosen_samples': [4909, 49285, 32850, 49200, 31545, 33057, 39521, 28362, 46469, 36122], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.769670849665999, 'batch_acquisition_elapsed_time': 23.23895621486008})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7676, 'nll': 0.7708068207790693}, 'chosen_targets': [5, 8, 2, 7, 8, 7, 6, 9, 6, 2], 'chosen_samples': [36642, 40466, 11600, 27498, 29634, 36398, 35988, 36080, 13709, 15751], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.728950135409832, 'batch_acquisition_elapsed_time': 25.109867183491588})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7421, 'nll': 0.8470466163366162}, 'chosen_targets': [5, 9, 3, 8, 9, 9, 1, 6, 2, 0], 'chosen_samples': [40905, 45688, 47651, 34758, 49880, 5868, 24222, 40492, 31688, 53290], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.71350072324276, 'batch_acquisition_elapsed_time': 26.29764144681394})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 8, 3, 4, 3, 8, 8, 9, 3], 'chosen_samples': [27714, 3518, 14697, 8597, 48365, 17810, 31881, 30415, 23732, 17010], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.676209094002843, 'batch_acquisition_elapsed_time': 20.29429198615253})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7135, 'nll': 0.9176955862394317}, 'chosen_targets': [2, 6, 5, 2, 2, 7, 2, 2, 5, 2], 'chosen_samples': [19444, 35962, 7885, 48334, 34833, 51363, 21073, 39145, 40473, 714], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.701618378981948, 'batch_acquisition_elapsed_time': 20.214270785450935})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.73, 'nll': 0.8556512008980817}, 'chosen_targets': [9, 0, 5, 5, 9, 2, 8, 6, 2, 0], 'chosen_samples': [8586, 5730, 31402, 35274, 20820, 10291, 25415, 25306, 14267, 44040], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.754829380661249, 'batch_acquisition_elapsed_time': 20.93787844106555})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8131, 'nll': 0.689094065366824}, 'chosen_targets': [2, 5, 3, 3, 3, 0, 3, 2, 4, 3], 'chosen_samples': [23001, 19089, 46062, 32619, 18992, 47696, 48038, 9098, 38898, 57820], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.7144770715385675, 'batch_acquisition_elapsed_time': 19.96787024103105})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7612, 'nll': 0.8040635846869784}, 'chosen_targets': [8, 2, 3, 2, 2, 0, 9, 3, 7, 9], 'chosen_samples': [16022, 10024, 21415, 21323, 28533, 27427, 6149, 22717, 30798, 10070], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.822000099346042, 'batch_acquisition_elapsed_time': 21.22992606833577})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7971, 'nll': 0.734310053351643}, 'chosen_targets': [2, 5, 3, 6, 6, 2, 2, 3, 6, 6], 'chosen_samples': [20959, 19942, 17491, 48507, 12744, 29334, 9725, 38058, 3524, 52004], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.761157123371959, 'batch_acquisition_elapsed_time': 19.95080305635929})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.74, 'nll': 0.8669447477699758}, 'chosen_targets': [0, 9, 0, 6, 6, 9, 8, 8, 0, 0], 'chosen_samples': [28992, 10028, 56651, 20057, 24030, 45800, 49114, 49824, 12748, 15761], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.851806033402681, 'batch_acquisition_elapsed_time': 20.28752293623984})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8041, 'nll': 0.7130359867593943}, 'chosen_targets': [2, 6, 5, 1, 2, 5, 2, 2, 5, 2], 'chosen_samples': [3676, 7867, 36984, 25910, 47132, 50071, 25309, 16989, 19590, 52358], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.782112337648869, 'batch_acquisition_elapsed_time': 20.396765576675534})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8507, 'nll': 0.6916890500052795}, 'chosen_targets': [2, 2, 4, 3, 0, 0, 4, 0, 2, 0], 'chosen_samples': [33593, 33832, 27473, 28199, 8093, 18324, 60, 8813, 3719, 54004], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.729750208556652, 'batch_acquisition_elapsed_time': 19.87593854777515})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7728, 'nll': 0.8535388123064109}, 'chosen_targets': [4, 2, 5, 8, 8, 4, 3, 9, 9, 4], 'chosen_samples': [13650, 9472, 36268, 52862, 47723, 56440, 18739, 30704, 14164, 24758], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.649861257523298, 'batch_acquisition_elapsed_time': 19.884011697024107})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.771, 'nll': 0.8686489733063394}, 'chosen_targets': [7, 2, 0, 7, 7, 8, 2, 7, 2, 6], 'chosen_samples': [42368, 47787, 58560, 58885, 24022, 47322, 21880, 934, 46727, 54994], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.699718162417412, 'batch_acquisition_elapsed_time': 19.975936884060502})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7802, 'nll': 0.8143236595294278}, 'chosen_targets': [5, 6, 1, 6, 4, 4, 3, 7, 2, 6], 'chosen_samples': [6418, 54885, 36744, 42335, 32673, 3056, 37383, 2634, 42671, 45262], 'chosen_samples_score': [0], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.885348811745644, 'batch_acquisition_elapsed_time': 20.04083389043808})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--quickquick', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [4, 9, 4, 4, 4, 4, 4, 4, 9], 'chosen_samples': [54634, 27277, 15686, 2742, 16225, 28509, 32578, 24113, 57290], 'chosen_samples_score': [0, 0.05652657151222229, 0.03974330797791481, 0.036184925585985184, 0.03546580672264099, 0.03507865592837334, 0.033573634922504425, 0.03345026448369026, 0.03320109099149704, 0.03256600722670555], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.867552859708667, 'batch_acquisition_elapsed_time': 6.836747895926237})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.611, 'nll': 1.379226143073437}, 'chosen_targets': [6, 6, 3, 3, 5, 5, 5, 8, 5], 'chosen_samples': [42905, 27850, 42938, 44138, 34274, 42850, 2330, 44320, 49140], 'chosen_samples_score': [0, 0.05624254047870636, 0.03572652116417885, 0.031181737780570984, 0.02997475117444992, 0.029260631650686264, 0.028880300000309944, 0.027943285182118416, 0.0278408695012331, 0.02770930901169777], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.2107319869101048, 'batch_acquisition_elapsed_time': 8.049282521009445})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6672, 'nll': 1.0335183269444117}, 'chosen_targets': [3, 3, 3, 3, 3, 3, 5, 3, 3], 'chosen_samples': [52038, 30692, 2883, 27666, 15261, 47625, 14534, 45545, 38238], 'chosen_samples_score': [0, 0.05624254047870636, 0.037011004984378815, 0.028856325894594193, 0.028499573469161987, 0.02827462926506996, 0.028097907081246376, 0.027676261961460114, 0.02760270982980728, 0.026914171874523163], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1414003260433674, 'batch_acquisition_elapsed_time': 7.319101914763451})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6436, 'nll': 1.1327376195213192}, 'chosen_targets': [5, 5, 5, 3, 3, 7, 9, 3, 3], 'chosen_samples': [12146, 20476, 35976, 33566, 20430, 37900, 11208, 5399, 8710], 'chosen_samples_score': [0, 0.05652657151222229, 0.0440899021923542, 0.04207015037536621, 0.037994228303432465, 0.034418441355228424, 0.03440661355853081, 0.03377918526530266, 0.03228903189301491, 0.031178221106529236], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.085168331861496, 'batch_acquisition_elapsed_time': 6.4046609196811914})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'chosen_samples': [58227, 51756, 10369, 16867, 10349, 17189, 5337, 17088, 46221, 15336], 'chosen_samples_score': [0.05652657151222229, 0.04136767238378525, 0.037911806255578995, 0.03755858913064003, 0.03736363723874092, 0.03631705418229103, 0.035254161804914474, 0.0340191088616848, 0.03366830572485924, 0.03314315527677536], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.697897372767329, 'batch_acquisition_elapsed_time': 94.06972751393914})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6957, 'nll': 1.0165074925705042}, 'chosen_targets': [4, 4, 4, 9, 9, 4, 4, 4, 9, 4], 'chosen_samples': [56797, 48936, 48172, 14582, 39034, 4802, 42421, 58174, 40458, 10634], 'chosen_samples_score': [0.05652657151222229, 0.04055054113268852, 0.03829876333475113, 0.03578388690948486, 0.035390496253967285, 0.03536685183644295, 0.03461858257651329, 0.034230172634124756, 0.03374196216464043, 0.03360016644001007], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.689731925725937, 'batch_acquisition_elapsed_time': 95.94847061671317})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6697, 'nll': 1.008672191026586}, 'chosen_targets': [9, 9, 7, 9, 9, 0, 9, 9, 9, 9], 'chosen_samples': [54599, 14240, 55802, 4124, 42318, 46439, 36062, 4320, 34184, 34292], 'chosen_samples_score': [0.05652657151222229, 0.04041726514697075, 0.03853580728173256, 0.033916909247636795, 0.03343525528907776, 0.032371800392866135, 0.031651079654693604, 0.031311023980379105, 0.03106468915939331, 0.030799830332398415], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.5413571409881115, 'batch_acquisition_elapsed_time': 95.91885544732213})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'chosen_samples': [58227, 51756, 10369, 16867, 10349, 17189, 5337, 17088, 46221, 15336], 'chosen_samples_score': [0.05652657151222229, 0.04136767238378525, 0.037911806255578995, 0.03755858913064003, 0.03736363723874092, 0.03631705418229103, 0.035254161804914474, 0.0340191088616848, 0.03366830572485924, 0.03314315527677536], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.7802150547504425, 'batch_acquisition_elapsed_time': 93.92387439496815})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'chosen_samples': [58227, 51756, 10369, 10349, 16867, 17189, 17088, 16873, 46221, 29427], 'chosen_samples_score': [0.05652657151222229, 0.04136767238378525, 0.03907589986920357, 0.03917926549911499, 0.03977128863334656, 0.03901774436235428, 0.03818089887499809, 0.037547867745161057, 0.037318263202905655, 0.03647550567984581], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.600989678874612, 'batch_acquisition_elapsed_time': 93.85049632005394})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [5, 3, 5, 5, 5, 5, 3, 5, 3, 5], 'chosen_samples': [25144, 17710, 48865, 14100, 25747, 26913, 46570, 27845, 14851, 27049], 'chosen_samples_score': [0.03381577543026581, 0.02779544592835468, 0.024750866135744586, 0.024158175869493186, 0.023359658983781617, 0.022774181322301905, 0.022255827539756048, 0.021421786833757058, 0.021104825858658145, 0.02041821254071762], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.712082205340266, 'batch_acquisition_elapsed_time': 127.15860956907272})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6082, 'nll': 1.183854107471234}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [18759, 43387, 56778, 39735, 21203, 12723, 55837, 39029, 45021, 39093], 'chosen_samples_score': [0.033801123652670066, 0.03195885546750683, 0.03078852696903401, 0.030201497862577472, 0.029795826072542497, 0.028394906434856607, 0.028391841250165792, 0.028369324770745843, 0.028220149797673434, 0.02820978512554219], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.776459768414497, 'batch_acquisition_elapsed_time': 119.47149139270186})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6651, 'nll': 1.0495254208186622}, 'chosen_targets': [8, 8, 5, 8, 5, 5, 5, 5, 5, 5], 'chosen_samples': [25715, 48967, 19390, 49033, 16017, 17502, 41808, 53272, 23424, 51072], 'chosen_samples_score': [0.03210517365323891, 0.028477475025165004, 0.024894315671288834, 0.02428261240210537, 0.023836577718375315, 0.023725849054475945, 0.02352910020973532, 0.0233372110974999, 0.023227534342499082, 0.02257009837063787], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.705961048603058, 'batch_acquisition_elapsed_time': 120.45643647573888})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 8, 9, 2, 7, 8, 3, 9, 2, 4], 'chosen_samples': [27714, 14697, 23732, 16298, 36157, 35841, 22717, 36807, 19545, 2542], 'chosen_samples_score': [1.0870433247092859, 1.062662145225325, 1.0318463812045207, 1.0260114344703366, 1.0199626236270112, 1.0153044154035546, 1.0146950031343545, 1.0072276896852563, 0.9899859247254472, 0.9891040486782625], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.703133475035429, 'batch_acquisition_elapsed_time': 21.472058778628707})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 8, 9, 2, 7, 8, 3, 9, 2, 4], 'chosen_samples': [27714, 14697, 23732, 16298, 36157, 35841, 22717, 36807, 19545, 2542], 'chosen_samples_score': [1.0870433247092859, 1.062662145225325, 1.0318463812045207, 1.0260114344703366, 1.0199626236270112, 1.0153044154035546, 1.0146950031343545, 1.0072276896852563, 0.9899859247254472, 0.9891040486782625], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.678469233214855, 'batch_acquisition_elapsed_time': 20.73821396380663})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6722, 'nll': 1.075837860085842}, 'chosen_targets': [3, 2, 2, 2, 2, 2, 2, 5, 7, 5], 'chosen_samples': [643, 42168, 36123, 32022, 1262, 57394, 27073, 19449, 36615, 1311], 'chosen_samples_score': [0.9559308725169429, 0.9196269566946751, 0.9176327817157109, 0.9138371772369367, 0.9131905609031881, 0.9093565436776223, 0.9042160063027329, 0.903981190095366, 0.8953509550127998, 0.889023366192944], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.559943728148937, 'batch_acquisition_elapsed_time': 19.814624650403857})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7451, 'nll': 0.7670429529488719}, 'chosen_targets': [0, 8, 0, 6, 6, 0, 5, 7, 5, 0], 'chosen_samples': [2817, 40466, 23104, 24726, 57297, 29311, 23733, 20552, 55591, 17187], 'chosen_samples_score': [1.0087505875487555, 0.9863668910563838, 0.9527048103442732, 0.9430793925585371, 0.919554155349869, 0.9132643142590705, 0.9025845803433581, 0.9019908892365966, 0.9006098019983608, 0.8988676656882917], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.682431168854237, 'batch_acquisition_elapsed_time': 19.817704351618886})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7367, 'nll': 0.7989399598770698}, 'chosen_targets': [0, 9, 9, 0, 0, 3, 0, 3, 2, 8], 'chosen_samples': [52728, 58422, 29390, 16975, 46826, 46570, 8813, 17324, 54395, 4767], 'chosen_samples_score': [0.8401217604360686, 0.8230512939370813, 0.8090486767009826, 0.8043518853295191, 0.8013131418831175, 0.7943135013215663, 0.7914381660979399, 0.7817394235429307, 0.7774186116077898, 0.7749759014986692], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.719370624050498, 'batch_acquisition_elapsed_time': 19.73569268360734})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7757, 'nll': 0.7457501264408981}, 'chosen_targets': [8, 8, 3, 3, 8, 3, 2, 2, 8, 5], 'chosen_samples': [39266, 20025, 37383, 37373, 29132, 6428, 42671, 53076, 21399, 36452], 'chosen_samples_score': [0.9288690386391372, 0.8690785819514032, 0.8508282246531882, 0.8395301295718465, 0.837181407933673, 0.8202736043660441, 0.8036209113354806, 0.791083422427603, 0.7890594214314754, 0.7876608471210822], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.674764510244131, 'batch_acquisition_elapsed_time': 19.980191541835666})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7935, 'nll': 0.710923646664169}, 'chosen_targets': [5, 5, 5, 5, 5, 2, 5, 2, 8, 8], 'chosen_samples': [21481, 20476, 19759, 36268, 722, 43176, 6418, 45094, 12493, 17756], 'chosen_samples_score': [0.7538344235726033, 0.7462503334829167, 0.7279284145473655, 0.7185787647521173, 0.7169389380303564, 0.7016523223897939, 0.6948742413060176, 0.6907098024817148, 0.6848609203648217, 0.6781687547600921], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.653956223279238, 'batch_acquisition_elapsed_time': 19.93030957505107})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 9, 3, 8, 8, 4, 1, 0, 7, 1], 'chosen_samples': [27714, 30646, 22717, 5394, 50625, 31761, 25504, 47696, 51634, 31238], 'chosen_samples_score': [1.0870433247092859, 0.9846575381470242, 1.0146950031343545, 0.9708412147119021, 0.9102763493514794, 0.8925854047838451, 0.7496350572212368, 0.8662399035282826, 0.9252837785382906, 0.7296220980838152], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.733093744143844, 'batch_acquisition_elapsed_time': 43.59170650690794})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6232, 'nll': 1.2361989700296112}, 'chosen_targets': [3, 6, 3, 5, 7, 5, 7, 7, 6, 5], 'chosen_samples': [56761, 34658, 22643, 5606, 56233, 12957, 35560, 51558, 17542, 13642], 'chosen_samples_score': [0.9679512102929121, 0.8526819495155059, 0.8917338887867438, 0.6906907183175037, 0.9237977977954925, 0.8159323530235675, 0.9459854328156095, 0.6566811634843948, 0.9212537677596573, 0.7457470994107851], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.6515077240765095, 'batch_acquisition_elapsed_time': 49.36240503937006})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6694, 'nll': 0.9791449005434264}, 'chosen_targets': [0, 3, 2, 0, 0, 9, 4, 0, 1, 3], 'chosen_samples': [13074, 20869, 49285, 23279, 26784, 14249, 16856, 464, 30214, 21505], 'chosen_samples_score': [1.0665694330697193, 0.9516801759837649, 0.8683179218079367, 0.6742004670735595, 0.8942361063012919, 0.7929998036229123, 0.7335247251565697, 0.8380840086031632, 0.6396231305852116, 0.7460749228703626], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.79306879080832, 'batch_acquisition_elapsed_time': 48.791528498753905})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7165, 'nll': 0.8554725768616558}, 'chosen_targets': [8, 3, 8, 8, 5, 2, 6, 7, 5, 5], 'chosen_samples': [22617, 55998, 47322, 40595, 43574, 22661, 23354, 34445, 41951, 42085], 'chosen_samples_score': [0.9547459839701324, 0.7284024678417143, 0.8047310495656701, 0.8239530866403615, 0.8740442909518668, 0.6610655454071137, 0.8820460149010521, 0.8160134879778549, 0.839558712549529, 0.7890526313395979], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.67792871594429, 'batch_acquisition_elapsed_time': 48.57517362758517})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7835, 'nll': 0.7311344217286929}, 'chosen_targets': [5, 2, 5, 5, 9, 0, 2, 5, 8, 3], 'chosen_samples': [19942, 48506, 57383, 20476, 1674, 9440, 31740, 59446, 44875, 13831], 'chosen_samples_score': [0.8268442781064425, 0.7160116340511788, 0.7348089246578604, 0.610030320628831, 0.6496158522172983, 0.737899266668283, 0.6449273728333336, 0.6491737594853919, 0.5834130943761225, 0.8010504924180691], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.643074246123433, 'batch_acquisition_elapsed_time': 48.38184450380504})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7503, 'nll': 0.8446511424528655}, 'chosen_targets': [2, 5, 3, 3, 3, 3, 8, 3, 2, 2], 'chosen_samples': [27503, 23434, 20752, 10402, 14655, 17509, 16026, 46454, 45845, 54456], 'chosen_samples_score': [0.7642305472903875, 0.7291107298678703, 0.6634089397660679, 0.6209779416997914, 0.7176455428426785, 0.6455915832303305, 0.41960382715757927, 0.5902116288968845, 0.7161604271459231, 0.41803715610940917], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.723637951537967, 'batch_acquisition_elapsed_time': 48.414227010682225})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.809, 'nll': 0.701090227461212}, 'chosen_targets': [2, 4, 0, 2, 0, 8, 2, 4, 7, 4], 'chosen_samples': [14125, 54617, 25065, 44901, 58073, 24558, 27915, 9353, 38557, 25925], 'chosen_samples_score': [0.8307896728666491, 0.6401106474468793, 0.5283067320416153, 0.7630082268673783, 0.527224946979943, 0.6868984477061295, 0.7814851413767456, 0.46296977800504335, 0.5625204453113513, 0.5419928065925754], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.620741307735443, 'batch_acquisition_elapsed_time': 48.521386835724115})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8101, 'nll': 0.7019416914569557}, 'chosen_targets': [4, 3, 9, 5, 8, 2, 9, 6, 9, 5], 'chosen_samples': [3370, 30398, 55612, 45024, 4727, 3719, 40584, 48141, 1370, 16692], 'chosen_samples_score': [0.7846936713797252, 0.7545822364439871, 0.7202883251789135, 0.5472702232630875, 0.49684521227889755, 0.6200807646903964, 0.6789278133654768, 0.5252116443621245, 0.7064091248927011, 0.6266193551998633], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.668309027329087, 'batch_acquisition_elapsed_time': 48.2750749476254})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8369, 'nll': 0.6352056713888155}, 'chosen_targets': [8, 5, 4, 9, 6, 9, 5, 5, 9, 7], 'chosen_samples': [47723, 24310, 38898, 42385, 15756, 31184, 21799, 51764, 826, 46493], 'chosen_samples_score': [0.7245473096458386, 0.5935622286467479, 0.6465734434166488, 0.42276473130195824, 0.5924771804085367, 0.6209024494783202, 0.4927412292591332, 0.704253360477735, 0.5054264906858357, 0.5310450797942027], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.615477753803134, 'batch_acquisition_elapsed_time': 48.94435326755047})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8174, 'nll': 0.6848206239498343}, 'chosen_targets': [1, 3, 1, 3, 6, 0, 3, 5, 5, 3], 'chosen_samples': [51544, 11708, 36744, 43672, 34520, 59786, 12080, 18313, 41202, 28900], 'chosen_samples_score': [0.7329214779316218, 0.6664889162973582, 0.7124905391762923, 0.6536913221265835, 0.6808148269115893, 0.693753651860765, 0.5712434716579319, 0.6076679891716279, 0.4775559734755713, 0.7101188149741586], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.73295234888792, 'batch_acquisition_elapsed_time': 48.44014382921159})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.832, 'nll': 0.6956014244279525}, 'chosen_targets': [2, 9, 2, 5, 5, 2, 2, 3, 3, 9], 'chosen_samples': [161, 42035, 27898, 43442, 544, 47787, 39342, 59299, 38399, 57728], 'chosen_samples_score': [0.6727168813194335, 0.5993421583434102, 0.6107739729719746, 0.5523614815257305, 0.4399275496423858, 0.5302390703577438, 0.5862239001561861, 0.5817387964441721, 0.5230263614306202, 0.5856758223798547], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.726618083193898, 'batch_acquisition_elapsed_time': 48.76127629540861})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8489, 'nll': 0.6510164100897329}, 'chosen_targets': [6, 9, 0, 0, 2, 0, 5, 0, 0, 6], 'chosen_samples': [33812, 19824, 12765, 19216, 51986, 46339, 28512, 15662, 21199, 33401], 'chosen_samples_score': [0.7607168341743856, 0.7199876354489742, 0.6371578312840381, 0.5512384471010882, 0.5839264063259544, 0.687422062011922, 0.6730223132258771, 0.5434556413448122, 0.6325350056588868, 0.6500913295713234], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.6513096410781145, 'batch_acquisition_elapsed_time': 48.41733327880502})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8327, 'nll': 0.6329313176182433}, 'chosen_targets': [5, 2, 2, 5, 7, 8, 2, 2, 5, 5], 'chosen_samples': [45282, 22169, 3676, 35864, 42415, 6604, 30534, 21674, 46878, 36508], 'chosen_samples_score': [0.7010335928335056, 0.6729126574860282, 0.6937161220410306, 0.6945012763500762, 0.5673744867694264, 0.6679328819438033, 0.6346301235849339, 0.6472445807935664, 0.6662466850813789, 0.6798812332760182], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.600904930382967, 'batch_acquisition_elapsed_time': 48.22332817874849})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8614, 'nll': 0.6373238478954097}, 'chosen_targets': [4, 5, 8, 4, 5, 0, 0, 5, 8, 6], 'chosen_samples': [3056, 42334, 15406, 28373, 27952, 28102, 49889, 36268, 27121, 37256], 'chosen_samples_score': [0.7269738321914618, 0.6465178927537714, 0.5864442997568899, 0.5759530715026696, 0.6299526668257224, 0.5808579422199076, 0.577602819562801, 0.5780205306018668, 0.6095954718034646, 0.4734165336256324], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.783317556604743, 'batch_acquisition_elapsed_time': 49.19834015518427})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8217, 'nll': 0.7334121181295497}, 'chosen_targets': [4, 7, 4, 5, 1, 2, 5, 2, 7, 6], 'chosen_samples': [40766, 55560, 10736, 28267, 45516, 54573, 43648, 22811, 23010, 44952], 'chosen_samples_score': [0.7101018222128184, 0.5733055542400609, 0.5231301499741189, 0.5412769796942114, 0.5237795680182722, 0.5831770011632873, 0.5820258682283522, 0.47186773331703646, 0.4071281488663284, 0.5288893258207602], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.668251095339656, 'batch_acquisition_elapsed_time': 48.64934441074729})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8079, 'nll': 0.829180297951311}, 'chosen_targets': [9, 5, 0, 2, 7, 2, 6, 2, 7, 0], 'chosen_samples': [14164, 40905, 26184, 5129, 28201, 54973, 10044, 34789, 46264, 39656], 'chosen_samples_score': [0.5018733752263955, 0.45172499046647874, 0.481091137310119, 0.44348798526801825, 0.39229195486555735, 0.4142599031592291, 0.46527857709378406, 0.3497725980620279, 0.40058907742135696, 0.44766991908877984], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.6444786954671144, 'batch_acquisition_elapsed_time': 49.124822694808245})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8217, 'nll': 0.7863888763845447}, 'chosen_targets': [2, 2, 8, 5, 2, 2, 0, 2, 7, 2], 'chosen_samples': [14458, 2738, 29335, 32507, 28210, 17089, 40390, 28366, 40308, 37243], 'chosen_samples_score': [0.6062450811340804, 0.5962810459594718, 0.5462955755920167, 0.47865364417797407, 0.5609578049323704, 0.6050481876984368, 0.5273511252543471, 0.43870489771106425, 0.5955832576609427, 0.5759596514350461], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.589363683015108, 'batch_acquisition_elapsed_time': 48.26120479032397})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8072, 'nll': 0.8004493147536881}, 'chosen_targets': [9, 0, 6, 8, 7, 0, 8, 8, 8, 4], 'chosen_samples': [20820, 57154, 14147, 27197, 29592, 27257, 35958, 48752, 31440, 32301], 'chosen_samples_score': [0.5785957961074142, 0.5098008965143505, 0.5578209874614667, 0.4798752878618501, 0.5389124805856313, 0.48391350200790473, 0.4350285891619775, 0.5152223299191013, 0.45265256115245744, 0.5261401869405471], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.781754996627569, 'batch_acquisition_elapsed_time': 50.18618962354958})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8245, 'nll': 0.7857527234022116}, 'chosen_targets': [5, 7, 7, 5, 5, 5, 3, 7, 0, 5], 'chosen_samples': [23209, 15932, 20996, 35350, 36642, 21276, 4762, 6650, 28412, 24001], 'chosen_samples_score': [0.5872324047482671, 0.4852861636386643, 0.4951424497820889, 0.5191856362068429, 0.5115106645761047, 0.43406279811747606, 0.4742242593238528, 0.5449336387394372, 0.5249645499873082, 0.49591977556455547], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.722087798640132, 'batch_acquisition_elapsed_time': 48.260307935997844})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8351, 'nll': 0.7668759797865923}, 'chosen_targets': [3, 0, 3, 7, 0, 7, 3, 2, 3, 0], 'chosen_samples': [1634, 28725, 12117, 9188, 46412, 59468, 21390, 13654, 23218, 3691], 'chosen_samples_score': [0.5330761290355555, 0.49184162966222966, 0.46929447747473274, 0.47795783819719984, 0.48148901204685246, 0.5163740396981769, 0.5120510174839978, 0.5309568220945937, 0.40223107411644066, 0.49909999610425937], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.705019952729344, 'batch_acquisition_elapsed_time': 49.36825745552778})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7821, 'nll': 0.8508556460816566}, 'chosen_targets': [3, 9, 3, 3, 3, 8, 9, 2, 3, 4], 'chosen_samples': [8958, 55064, 42476, 58237, 54730, 4652, 37048, 52358, 5153, 42078], 'chosen_samples_score': [0.5361317900850513, 0.506059562100186, 0.4866705729483505, 0.43538953446699247, 0.4186476988932567, 0.49286800197644776, 0.5337207483939941, 0.4733192262568724, 0.3150833479347561, 0.5225067624096831], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.63927311822772, 'batch_acquisition_elapsed_time': 53.56790472380817})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7966, 'nll': 0.8546977246434555}, 'chosen_targets': [3, 2, 2, 6, 5, 9, 7, 3, 5, 6], 'chosen_samples': [52753, 8886, 43176, 40491, 24426, 19953, 18736, 17100, 47683, 40492], 'chosen_samples_score': [0.5124904042506915, 0.4436956122045723, 0.4466907714996289, 0.47132515995572866, 0.47985162899515044, 0.38735061807192883, 0.3761461873682199, 0.4643240999769809, 0.3218835708221931, 0.4642435405466414], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.65301725640893, 'batch_acquisition_elapsed_time': 50.18361443281174})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7822, 'nll': 0.9185443889456357}, 'chosen_targets': [9, 8, 0, 5, 5, 2, 0, 2, 5, 5], 'chosen_samples': [18598, 55128, 53298, 10255, 4820, 21254, 16286, 25920, 55531, 31545], 'chosen_samples_score': [0.4878503083588128, 0.46082119558966195, 0.4297057914926563, 0.42215909000744145, 0.4371890228019557, 0.40180370386215547, 0.40886974756443717, 0.34898781449445493, 0.45067439726130476, 0.4254774275115818], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.782150795683265, 'batch_acquisition_elapsed_time': 50.95514898002148})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8064, 'nll': 0.8372647412447816}, 'chosen_targets': [0, 0, 7, 7, 7, 2, 7, 0, 0, 7], 'chosen_samples': [12497, 12748, 54065, 4061, 52879, 3791, 48241, 24896, 37686, 37596], 'chosen_samples_score': [0.46943902332010645, 0.4683642465714378, 0.41831381981584803, 0.4533856621842025, 0.4207088813742601, 0.4251195739056888, 0.38709480323834, 0.4190522271207755, 0.39455718037725784, 0.38352360255571827], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.557690197601914, 'batch_acquisition_elapsed_time': 48.89063995145261})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7117, 'nll': 0.9815448120810212}, 'chosen_targets': [3, 3, 8, 0, 5, 3, 3, 3, 5, 3], 'chosen_samples': [18739, 15053, 34524, 58829, 2258, 44545, 52298, 27420, 11572, 17643], 'chosen_samples_score': [0.5623347190872205, 0.41272807295985015, 0.4392622610980277, 0.4399115418897813, 0.48867466586284836, 0.37295094716427357, 0.36509459114662346, 0.4587602615923865, 0.4628449406828976, 0.4029158893848501], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.8026782758533955, 'batch_acquisition_elapsed_time': 50.00937291234732})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7801, 'nll': 0.8838921848201621}, 'chosen_targets': [9, 2, 2, 9, 9, 0, 2, 5, 5, 0], 'chosen_samples': [28313, 42037, 33593, 58422, 24497, 27328, 27181, 49316, 32659, 27247], 'chosen_samples_score': [0.5303483208171587, 0.4445279885503288, 0.48998683824081546, 0.4237462286743414, 0.39838377788685364, 0.349608571435987, 0.4349915548924834, 0.3979456635987919, 0.404988703136135, 0.4333143858050498], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.864682652056217, 'batch_acquisition_elapsed_time': 48.85318433493376})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7811, 'nll': 0.906035530678398}, 'chosen_targets': [2, 3, 0, 3, 5, 3, 2, 3, 0, 3], 'chosen_samples': [42671, 23877, 58560, 17491, 49202, 56585, 18003, 34815, 27429, 13658], 'chosen_samples_score': [0.5587398025449775, 0.4766216166298791, 0.5565680560117856, 0.4996237314722265, 0.46428054334225743, 0.4465815019568782, 0.5294963469001903, 0.48836233501208304, 0.39192794066989256, 0.42062352339342957], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.709130508825183, 'batch_acquisition_elapsed_time': 49.30495949089527})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7877, 'nll': 0.8737335356374628}, 'chosen_targets': [1, 7, 7, 7, 2, 7, 7, 2, 2, 5], 'chosen_samples': [5842, 50278, 39047, 55446, 42746, 29920, 934, 31794, 20100, 8459], 'chosen_samples_score': [0.5665884253053746, 0.538677687024886, 0.5005395307183765, 0.4859591782725887, 0.46196151150804177, 0.46573163715599686, 0.4545270520039456, 0.44770260867782885, 0.5299174789305809, 0.48103409403859265], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.694659424945712, 'batch_acquisition_elapsed_time': 49.351946014910936})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 7, 7, 9, 9, 2, 4, 4, 1, 9], 'chosen_samples': [54498, 36157, 45428, 45176, 793, 28944, 26564, 49417, 7234, 36807], 'chosen_samples_score': [1.0639342932484648, 1.052415707887233, 0.8874416572702303, 0.898201461643565, 0.8156658043756557, 0.7413430043947871, 0.5116768100525867, 0.5102218820421431, 0.671577783542717, 1.0174892680882661], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.353869438171387, 'batch_acquisition_elapsed_time': 14.020533004775643})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6546, 'nll': 1.1386900901579924}, 'chosen_targets': [4, 4, 4, 5, 3, 7, 2, 4, 0, 4], 'chosen_samples': [1227, 10967, 16127, 7842, 46908, 57653, 52839, 21077, 36304, 18190], 'chosen_samples_score': [1.045567539363044, 0.8216086892449034, 0.9313278232760488, 0.9269592941227023, 0.6764418330945572, 0.49659848198415635, 0.7550222693024342, 0.9234796519720266, 0.8324630913125117, 0.6066526850125681], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.370372097939253, 'batch_acquisition_elapsed_time': 13.398307902738452})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7018, 'nll': 0.9638691570230985}, 'chosen_targets': [3, 2, 3, 2, 7, 8, 7, 7, 7, 2], 'chosen_samples': [54285, 38427, 19865, 47924, 40465, 14754, 34914, 35625, 31331, 13486], 'chosen_samples_score': [1.0629114162268667, 0.8648243985203549, 1.0483058008190802, 0.5670948727500075, 0.6960552156689428, 0.6456345247098382, 0.5077566914582947, 0.9707461318203617, 0.8796336283846832, 0.638037579391969], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.508615083992481, 'batch_acquisition_elapsed_time': 13.631373012438416})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.707, 'nll': 0.9192233976027517}, 'chosen_targets': [6, 6, 3, 1, 8, 0, 1, 8, 0, 6], 'chosen_samples': [43518, 48437, 29185, 44131, 46502, 48719, 17639, 54056, 50852, 19298], 'chosen_samples_score': [0.9637742743989679, 0.9023803788330663, 0.6953974203032154, 0.8643931988968682, 0.7896653904045043, 0.6265124311508867, 0.5057748197457574, 0.5982946161825451, 0.6824292546809865, 0.8911780905748827], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.382605334743857, 'batch_acquisition_elapsed_time': 13.592758687213063})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7512, 'nll': 0.789970057025185}, 'chosen_targets': [1, 7, 6, 8, 9, 2, 6, 3, 6, 5], 'chosen_samples': [39818, 27632, 37315, 58933, 23863, 28958, 37071, 13827, 8846, 7735], 'chosen_samples_score': [1.0126642921001587, 0.8049281147150154, 0.9211952500583029, 0.5108152726610918, 0.6553540860866163, 0.6448686894979686, 0.7171701920933464, 0.8169680694909603, 0.44298119275014236, 0.5604324118233575], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.7305168230086565, 'batch_acquisition_elapsed_time': 14.421646161004901})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8236, 'nll': 0.5811075062618815}, 'chosen_targets': [3, 3, 0, 3, 3, 0, 4, 5, 2, 4], 'chosen_samples': [5728, 10210, 46683, 14205, 23877, 13074, 2801, 44404, 8631, 4038], 'chosen_samples_score': [1.0204375108282173, 0.9115956551159674, 0.6746253322838578, 0.8780185541356819, 0.7973960865035048, 0.7065733831380689, 0.7105220675303056, 0.424202381129212, 0.4977481335981796, 0.5162903112135152], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.399303525686264, 'batch_acquisition_elapsed_time': 13.249866483733058})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7952, 'nll': 0.6472251956230254}, 'chosen_targets': [2, 3, 7, 2, 7, 3, 9, 6, 2, 2], 'chosen_samples': [58563, 42508, 22743, 40622, 38607, 16564, 7946, 37256, 59983, 40607], 'chosen_samples_score': [0.9846303723135429, 0.6950130837495136, 0.6831461238080816, 0.8603767122120574, 0.49048829372737485, 0.48700095884601424, 0.5946636761037186, 0.7957490620867046, 0.6587445236833609, 0.568778530008689], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.447456207126379, 'batch_acquisition_elapsed_time': 13.698456946760416})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7958, 'nll': 0.7009346138857039}, 'chosen_targets': [3, 3, 5, 2, 3, 7, 3, 3, 3, 3], 'chosen_samples': [21447, 53838, 47077, 43176, 21505, 2246, 10757, 14765, 51245, 37729], 'chosen_samples_score': [0.9792285493900669, 0.7466502452681439, 0.7141783235104404, 0.6594729870680974, 0.6975599489255212, 0.6614129685326331, 0.7441740929868771, 0.76312744287628, 0.6038713654094993, 0.7266034882853963], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.431953877210617, 'batch_acquisition_elapsed_time': 13.277245953679085})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8207, 'nll': 0.6338693864905109}, 'chosen_targets': [3, 2, 2, 2, 2, 5, 0, 2, 3, 0], 'chosen_samples': [42199, 35373, 31063, 42821, 51001, 20784, 28992, 53026, 1935, 11133], 'chosen_samples_score': [0.9052493311346178, 0.7636829743575945, 0.8123898350591165, 0.7290430719008094, 0.6092495697312263, 0.5862728944640746, 0.8727840886222593, 0.7808951372463748, 0.880886821629148, 0.6849570497991108], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.428376583382487, 'batch_acquisition_elapsed_time': 13.597367065027356})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 9, 3, 8, 8, 4, 1, 0, 7, 1, 7, 2, 4, 7, 2, 2, 1, 0, 1, 7, 8, 2, 7, 6, 7, 8, 1, 7, 7, 2, 3, 7, 3, 0, 8, 9, 8, 7, 2, 9], 'chosen_samples': [27714, 30646, 22717, 5394, 50625, 31761, 25504, 47696, 51634, 31238, 9499, 59415, 2542, 18950, 2694, 28577, 25513, 1682, 37499, 12018, 30415, 28944, 51420, 57554, 55854, 14697, 2918, 19172, 3518, 8707, 18227, 59412, 12583, 42487, 35230, 12832, 31087, 3846, 16298, 23732], 'chosen_samples_score': [1.0870433247092859, 0.9846575381470242, 1.0146950031343545, 0.9708412147119021, 0.9102763493514794, 0.8925854047838451, 0.7496350572212368, 0.8662399035282826, 0.9252837785382906, 0.7296220980838152, 0.914585525065064, 0.588917465142252, 0.9891040486782625, 0.5466895665054119, 0.6632008276101327, 0.9285214450033914, 0.7365984900702804, 0.813905281037237, 0.6477279353944657, 0.9641720596914671, 1.0349214238962408, 0.7157381389962992, 0.519303901795932, 0.8951604049817017, 0.6983841092432509, 1.062662145225325, 0.5891284949396997, 0.5053889720179936, 1.0637347505165158, 0.7276140207239332, 1.009322595639278, 0.7539248791003618, 0.46913086594609577, 0.90438664753222, 0.8665019350716413, 0.49104446499156107, 0.8295116867522351, 0.9613234856164192, 1.0260114344703366, 1.0318463812045207], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.503789570182562, 'batch_acquisition_elapsed_time': 336.3988781068474})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7503, 'nll': 0.7778284158284487}, 'chosen_targets': [3, 5, 7, 5, 2, 3, 5, 8, 5, 5, 9, 6, 9, 9, 4, 9, 5, 2, 9, 2, 2, 3, 7, 4, 9, 4, 2, 2, 3, 8, 3, 2, 2, 5, 4, 2, 2, 5, 9, 2], 'chosen_samples': [46570, 59669, 9433, 57327, 46447, 23977, 7374, 40437, 8104, 37181, 27521, 15714, 48616, 36211, 42793, 15562, 34610, 23472, 20111, 22070, 59737, 392, 48166, 40573, 6121, 19111, 16183, 36072, 42070, 5299, 15848, 47883, 38256, 21976, 16459, 13179, 14113, 46489, 6149, 55782], 'chosen_samples_score': [0.8944229096593816, 0.6540406372077698, 0.8062217599917141, 0.8498061023349144, 0.7933154572838302, 0.5365198112368703, 0.6544688404082237, 0.4867546427716153, 0.8151950944386713, 0.8489709359054629, 0.5031387999943057, 0.6613806359847996, 0.8291847484139832, 0.7652172800269053, 0.6828508549385159, 0.7646745125739384, 0.8796833105864865, 0.6018439235017164, 0.5661635991140676, 0.6749077692045166, 0.5016695169279206, 0.526919566896636, 0.47416135997392705, 0.5160954424820239, 0.7743174861539036, 0.701085169033141, 0.6021985805385599, 0.8296163436326364, 0.4603992687018251, 0.6071224211647872, 0.6945213387395346, 0.45999276651837684, 0.7165466833846199, 0.5848306077829939, 0.45877835132703054, 0.49265446070238605, 0.4662156023298869, 0.5364841880064214, 0.8903483525022636, 0.5909892654401888], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.700808798894286, 'batch_acquisition_elapsed_time': 359.5814269017428})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 8, 9, 2, 7, 8, 3, 9, 2, 4, 9, 3, 5, 3, 8, 3, 3, 9, 7, 3, 8, 8, 8, 9, 7, 8, 4, 6, 2, 2, 4, 0, 0, 8, 2, 7, 3, 2, 7, 8], 'chosen_samples': [27714, 14697, 23732, 16298, 36157, 35841, 22717, 36807, 19545, 2542, 30646, 8164, 53000, 21306, 5394, 35045, 43978, 6205, 1338, 32339, 10800, 59429, 46658, 14289, 7437, 43268, 31941, 23050, 56664, 19443, 36279, 11661, 7597, 4859, 7796, 19262, 7803, 28269, 51634, 7768], 'chosen_samples_score': [1.0870433247092859, 1.062662145225325, 1.0318463812045207, 1.0260114344703366, 1.0199626236270112, 1.0153044154035546, 1.0146950031343545, 1.0072276896852563, 0.9899859247254472, 0.9891040486782625, 0.9846575381470242, 0.9748810214610822, 0.9741428098802055, 0.9735211878681912, 0.9708412147119021, 0.9673220467706407, 0.9655793541432249, 0.9642062468452036, 0.9612755965929134, 0.9600695609214925, 0.9559191334117216, 0.9534495073711169, 0.951816612790372, 0.9451841033638647, 0.944489088603474, 0.9444414598864473, 0.9434125076770676, 0.9421703061851846, 0.9406365223703894, 0.9360000687678882, 0.9359046915024829, 0.931492519945242, 0.9299849963172728, 0.9292977152831063, 0.9289936480921623, 0.927261122281764, 0.9266404195726561, 0.9258554099072893, 0.9252837785382906, 0.9219667358767704], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.85310398042202, 'batch_acquisition_elapsed_time': 20.222650472074747})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.766, 'nll': 0.7769743418824238}, 'chosen_targets': [4, 3, 9, 5, 9, 5, 4, 7, 2, 0, 9, 8, 7, 0, 7, 5, 5, 5, 2, 5, 9, 3, 4, 9, 7, 0, 7, 8, 5, 6, 4, 3, 7, 5, 8, 2, 4, 7, 7, 4], 'chosen_samples': [44466, 26358, 53280, 55591, 20636, 16084, 5175, 22481, 25004, 48719, 5740, 4909, 1075, 10128, 47613, 24847, 23123, 47021, 47499, 39409, 12840, 29246, 20169, 34052, 12526, 14773, 59468, 4253, 37750, 40492, 18398, 24531, 34445, 1285, 40595, 29853, 29503, 25610, 20002, 18487], 'chosen_samples_score': [0.9304914758613192, 0.9164492539533522, 0.8737849597276293, 0.8635980905760732, 0.8567958108782232, 0.8497725998299657, 0.8400611425243698, 0.7957616551932951, 0.7921751887826366, 0.7914211706861173, 0.7865339388884212, 0.7788496072636353, 0.7788473081548233, 0.7735428439830633, 0.7702573779132179, 0.7695088085873374, 0.7695029855218458, 0.7689235332949118, 0.7664541588549914, 0.7647553497433097, 0.7644986829367639, 0.764344267251852, 0.764153190603124, 0.7633940745309029, 0.7612334704292751, 0.7579396242852332, 0.7541690686250955, 0.7541017816549711, 0.7537631297385801, 0.7530374754636895, 0.7525964029945202, 0.7521145107636488, 0.7516996467379047, 0.7507667996352354, 0.7501606412695547, 0.7496343231306283, 0.7494807376734972, 0.7494161224617529, 0.7482862600473521, 0.7461100282445237], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.610992703586817, 'batch_acquisition_elapsed_time': 20.390136521309614})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7553, 'nll': 0.8590803087279779}, 'chosen_targets': [0, 6, 0, 2, 0, 0, 2, 6, 2, 2, 2, 0, 7, 2, 3, 2, 9, 4, 0, 2, 6, 9, 2, 7, 2, 7, 2, 2, 7, 2, 0, 2, 2, 2, 8, 0, 2, 2, 2, 9], 'chosen_samples': [59418, 33812, 16866, 27874, 53344, 38404, 20055, 7104, 45094, 33832, 53076, 4738, 45456, 42037, 1981, 44090, 10070, 39304, 44184, 16473, 47778, 24613, 28, 29470, 58162, 52937, 27503, 18643, 33057, 2748, 14705, 24098, 36950, 29334, 11984, 12497, 27700, 26431, 57342, 5044], 'chosen_samples_score': [0.7107154328058705, 0.6789020978172984, 0.6778696450913639, 0.6716922091678306, 0.6604591753977682, 0.657392403205217, 0.6517671481027774, 0.6452200501322338, 0.6403727614493879, 0.6392896134231254, 0.6381953844774111, 0.6328073153617866, 0.631200033741721, 0.6282099150291052, 0.6182471005199226, 0.6143201088068071, 0.6137959095445562, 0.6128557353900512, 0.612517870517288, 0.6114198489825615, 0.6103562129621392, 0.6083327939511423, 0.6074315350986152, 0.606128365362105, 0.6023318212169397, 0.6019258192528099, 0.599920714571017, 0.5977526980315933, 0.5975302853295621, 0.5973849518218508, 0.5947375533277124, 0.5933913546103831, 0.5933531140241199, 0.5928228040054642, 0.5922129034270871, 0.5908738909775928, 0.5906140820039505, 0.590271217385274, 0.5899531472837396, 0.5898426223277075], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.736753372475505, 'batch_acquisition_elapsed_time': 20.71755679883063})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 7, 6, 9, 9, 2, 8, 3, 9, 3], 'chosen_samples': [54498, 36157, 32140, 14790, 36807, 1255, 35841, 25453, 42643, 32619], 'chosen_samples_score': [1.0639342932484648, 1.052415707887233, 1.027462937671627, 1.0205745740716767, 1.0174892680882661, 1.010629463077382, 1.0004807402077438, 0.9965709725771075, 0.9948893787536195, 0.9947192994080314], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.37976660579443, 'batch_acquisition_elapsed_time': 11.895784392952919})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7075, 'nll': 0.9152361299169699}, 'chosen_targets': [3, 3, 3, 2, 3, 2, 2, 3, 3, 5], 'chosen_samples': [38130, 6500, 5702, 57394, 21306, 27915, 45133, 20844, 44888, 15358], 'chosen_samples_score': [1.067270393252722, 1.055099864213702, 1.032437756764079, 1.0219893215964257, 1.0063625563731695, 1.0028952936435425, 1.002121231210457, 0.9997140650128139, 0.9994298252981231, 0.9907696762387506], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.4773333966732025, 'batch_acquisition_elapsed_time': 11.595725048333406})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 7, 6, 3, 5, 9, 4, 7, 9, 3], 'chosen_samples': [54498, 36157, 32140, 32619, 53000, 9390, 23435, 27714, 23732, 28174], 'chosen_samples_score': [1.0639342932484648, 1.052415707887233, 1.027462937671627, 0.9947192994080314, 0.9916180377256604, 0.9688450298720971, 0.9619799196166665, 0.9484252252661501, 0.9354613750539252, 0.871862113524263], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.3774940967559814, 'batch_acquisition_elapsed_time': 13.481279226019979})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7328, 'nll': 0.8586578152524409}, 'chosen_targets': [2, 2, 3, 7, 3, 3, 7, 8, 2, 2], 'chosen_samples': [35970, 27120, 18307, 20449, 40691, 46548, 35337, 14896, 25294, 13743], 'chosen_samples_score': [1.1251342206873052, 1.122722159677355, 1.0996301362651155, 1.0826119297516397, 1.024039037171641, 1.0189633914762197, 1.0124678620639014, 0.9224296596377445, 0.9210498685803596, 0.9095903003450929], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.367530962452292, 'batch_acquisition_elapsed_time': 12.545955566689372})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7635, 'nll': 0.7787980827799009}, 'chosen_targets': [5, 6, 0, 6, 3, 6, 6, 8, 0, 8], 'chosen_samples': [13305, 10463, 35823, 10557, 21946, 10481, 12271, 51904, 59272, 36541], 'chosen_samples_score': [1.188331157818237, 1.0168948200442782, 0.9858457640044594, 0.978175467645775, 0.9736412464368075, 0.938146948033767, 0.9377289738556951, 0.9160959588497873, 0.8505012257237792, 0.8021497460730419], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.489597838371992, 'batch_acquisition_elapsed_time': 13.727693986147642})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7454, 'nll': 0.8103581993815305}, 'chosen_targets': [2, 0, 6, 0, 2, 2, 2, 0, 6, 0], 'chosen_samples': [5545, 32621, 15257, 27170, 49537, 35403, 20395, 51491, 8871, 48412], 'chosen_samples_score': [1.204058782192042, 1.1330730259389574, 1.0976148947224276, 1.0706360931395094, 1.0347968475663771, 1.0233637520415022, 1.021929510834704, 0.9377496192112312, 0.9178935037160469, 0.8939338980544824], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.495963042601943, 'batch_acquisition_elapsed_time': 12.60127423144877})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.807, 'nll': 0.6710417445147667}, 'chosen_targets': [5, 9, 8, 2, 5, 9, 7, 8, 8, 2], 'chosen_samples': [37270, 6520, 9769, 12514, 52686, 49767, 38688, 40547, 19362, 15731], 'chosen_samples_score': [1.034885527630467, 1.0141097306910911, 0.9094015961549466, 0.9086440293426099, 0.8965295342833618, 0.8809096202796778, 0.8577422408961044, 0.8328079429192967, 0.7908061726212471, 0.7671329358474734], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.251628220081329, 'batch_acquisition_elapsed_time': 12.394477376714349})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8147, 'nll': 0.6353383808456122}, 'chosen_targets': [2, 0, 0, 9, 3, 9, 2, 0, 0, 7], 'chosen_samples': [14125, 27082, 5730, 19586, 52891, 1364, 12985, 36783, 47289, 46832], 'chosen_samples_score': [0.9470357798736185, 0.9415721364898052, 0.9064064245633768, 0.9028230787021518, 0.8170869716613741, 0.8156639382309958, 0.8097299668590655, 0.750147801592879, 0.7480894113941082, 0.721505544084444], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.30729091912508, 'batch_acquisition_elapsed_time': 12.17920527048409})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7802, 'nll': 0.7711364170080673}, 'chosen_targets': [5, 3, 5, 9, 5, 0, 5, 5, 7, 5], 'chosen_samples': [40905, 52160, 9028, 22824, 27499, 13030, 3768, 27271, 55826, 1276], 'chosen_samples_score': [0.8725406373921885, 0.7794283165057011, 0.72182391908193, 0.715336394065734, 0.6885736264724013, 0.6701747207713635, 0.6666742284629966, 0.6614682759820796, 0.6337634273801864, 0.612541204850596], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.345801059156656, 'batch_acquisition_elapsed_time': 11.966408537700772})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7485, 'nll': 0.772167471358794}, 'chosen_targets': [2, 8, 5, 9, 7, 3, 4, 4, 5, 5], 'chosen_samples': [54573, 27147, 15041, 50528, 18962, 24531, 43740, 5217, 24716, 44760], 'chosen_samples_score': [0.7779975851233627, 0.7762475624681355, 0.7382054871395316, 0.7262941602489597, 0.7220439345758844, 0.7011953321840247, 0.7007714089609058, 0.6958439348530514, 0.6835312841405359, 0.6671227602222418], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.47370676882565, 'batch_acquisition_elapsed_time': 11.546027392148972})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7951, 'nll': 0.7123243043076349}, 'chosen_targets': [0, 0, 0, 0, 9, 0, 8, 8, 2, 0], 'chosen_samples': [15582, 33673, 11133, 46837, 29390, 51395, 25301, 11586, 51986, 26820], 'chosen_samples_score': [0.7469925894126918, 0.692423229785082, 0.6789751706564822, 0.677694476757669, 0.6751965126714873, 0.6644182348098768, 0.645317251396113, 0.6239186072646734, 0.5807763944856628, 0.533105708534036], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.641436152160168, 'batch_acquisition_elapsed_time': 13.175244675949216})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8012, 'nll': 0.7454922411132615}, 'chosen_targets': [5, 5, 5, 0, 5, 3, 5, 3, 3, 3], 'chosen_samples': [32344, 19942, 47825, 27427, 31301, 49149, 9340, 1559, 6291, 37373], 'chosen_samples_score': [0.7848968602421302, 0.7767516997159933, 0.7643507878260483, 0.7230051980953616, 0.6975648973736364, 0.6856967173911004, 0.6791036520331016, 0.6717756353329144, 0.6669223804149409, 0.6530516699212174], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.312971627339721, 'batch_acquisition_elapsed_time': 12.141745906323195})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8122, 'nll': 0.7288691077584785}, 'chosen_targets': [9, 9, 3, 9, 8, 2, 9, 4, 0, 9], 'chosen_samples': [10028, 6238, 14655, 3346, 19981, 36884, 19042, 17870, 9677, 34786], 'chosen_samples_score': [0.6988355861923587, 0.6846652623989912, 0.6680268845164583, 0.6576372931238752, 0.6526687310227197, 0.6453780599405559, 0.6371837094760927, 0.5809422002358811, 0.545989027675921, 0.5398101167855213], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.298936890438199, 'batch_acquisition_elapsed_time': 11.881983540952206})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.731, 'nll': 0.8350435402678826}, 'chosen_targets': [8, 4, 5, 8, 8, 5, 5, 4, 2, 6], 'chosen_samples': [12663, 14715, 47320, 55128, 46368, 36256, 11876, 50149, 19463, 29380], 'chosen_samples_score': [0.6137501180592455, 0.5988892459387627, 0.5926061188709066, 0.5912892003221664, 0.5885072313120201, 0.5357986302745646, 0.5324605314539153, 0.5172062406768587, 0.4677618254250073, 0.4650523348084712], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.3658217638731, 'batch_acquisition_elapsed_time': 12.457678968086839})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 2, 7, 9, 6, 9, 9, 5, 2, 8], 'chosen_samples': [54498, 19443, 36157, 42773, 32140, 14790, 36807, 32074, 1255, 35841], 'chosen_samples_score': [1.0639342932484648, 1.0620308457611038, 1.052415707887233, 1.036556891410246, 1.027462937671627, 1.0205745740716767, 1.0174892680882661, 1.0113533608508707, 1.010629463077382, 1.0004807402077438], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.451097382232547, 'batch_acquisition_elapsed_time': 11.71946287713945})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6565, 'nll': 1.1686457966284043}, 'chosen_targets': [3, 3, 3, 3, 7, 3, 7, 7, 7, 3], 'chosen_samples': [43014, 19601, 41513, 43327, 2711, 43438, 16079, 1229, 35337, 42150], 'chosen_samples_score': [1.165790021995103, 1.1176309701593925, 1.106396225671701, 1.0949155002115696, 1.0948676070696435, 1.0902810551484292, 1.086131331417103, 1.0709562823680168, 1.0618558201004846, 1.058368511344949], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.425094099715352, 'batch_acquisition_elapsed_time': 11.348341161385179})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.742, 'nll': 0.8210954179552821}, 'chosen_targets': [3, 6, 5, 5, 5, 6, 5, 6, 2, 6], 'chosen_samples': [4581, 10463, 13305, 51659, 12449, 33035, 37453, 10375, 48356, 34827], 'chosen_samples_score': [1.0115880276214042, 0.9584116828367033, 0.9488557828989881, 0.9155089183178343, 0.9114888135082115, 0.905979028491065, 0.9025221042493974, 0.8985956607411845, 0.8907903912254662, 0.8886539209717346], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.331136845052242, 'batch_acquisition_elapsed_time': 11.480480026453733})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7018, 'nll': 0.8998204697121684}, 'chosen_targets': [3, 1, 0, 0, 0, 0, 0, 2, 0, 0], 'chosen_samples': [22741, 29062, 14430, 7254, 52728, 29873, 52554, 40589, 56444, 47466], 'chosen_samples_score': [1.1026844445757682, 1.0101715349333857, 1.002486344754229, 0.987438844297078, 0.9765501827465648, 0.9602158191373412, 0.959700391661378, 0.9435979187983984, 0.9423733581208757, 0.9391929949230456], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.169985748827457, 'batch_acquisition_elapsed_time': 11.477339142933488})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7286, 'nll': 0.8242897272537806}, 'chosen_targets': [6, 5, 6, 6, 5, 5, 3, 3, 0, 7], 'chosen_samples': [9468, 12986, 47214, 40492, 8676, 57837, 52298, 28499, 39656, 50992], 'chosen_samples_score': [0.9682022937773787, 0.9530105303830252, 0.949021583374714, 0.9447023502160551, 0.9433628546819229, 0.9328218875615866, 0.9291525251774018, 0.9282704739805827, 0.9128438460203122, 0.91070027586801], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.3749735448509455, 'batch_acquisition_elapsed_time': 11.533069379627705})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7762, 'nll': 0.7454534576215639}, 'chosen_targets': [9, 9, 9, 0, 9, 4, 8, 4, 4, 3], 'chosen_samples': [14324, 30782, 4831, 27429, 20820, 58390, 4767, 5689, 50203, 42140], 'chosen_samples_score': [0.9211204341739186, 0.880410346974154, 0.870529198452286, 0.86449434566557, 0.8604997015062253, 0.8450812281647617, 0.8346115584778504, 0.8185729985618893, 0.8171344278532338, 0.811618970104237], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.3263598419725895, 'batch_acquisition_elapsed_time': 11.398340310901403})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7744, 'nll': 0.747335838650434}, 'chosen_targets': [5, 2, 2, 2, 2, 2, 5, 0, 0, 7], 'chosen_samples': [28512, 48279, 23846, 25920, 16952, 17482, 35628, 58829, 25823, 34445], 'chosen_samples_score': [0.995276377376411, 0.9681343429462231, 0.9677196932557088, 0.9503516625857248, 0.943256927458927, 0.9223133466797072, 0.9200117079680218, 0.9104042245065624, 0.9071105200694844, 0.8802703557264488], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.185052905231714, 'batch_acquisition_elapsed_time': 11.57774169743061})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7578, 'nll': 0.8069229471489603}, 'chosen_targets': [4, 4, 4, 4, 4, 4, 4, 4, 4, 4], 'chosen_samples': [54634, 32262, 44224, 26288, 29503, 59321, 46530, 53693, 23429, 18098], 'chosen_samples_score': [0.9937675138030426, 0.9636366362570612, 0.9154226131664271, 0.9107607307198926, 0.8985117188913871, 0.8969467234166809, 0.8961005619077209, 0.8917828992367588, 0.8888813487364338, 0.8855973040427014], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.491544004529715, 'batch_acquisition_elapsed_time': 11.505386175587773})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8081, 'nll': 0.6874568917942103}, 'chosen_targets': [2, 2, 2, 2, 2, 2, 2, 8, 2, 2], 'chosen_samples': [49179, 27503, 26434, 49537, 42037, 17269, 14838, 6604, 9248, 161], 'chosen_samples_score': [0.8471303255586884, 0.8363750603364535, 0.810431568329364, 0.7864949958101836, 0.7774043098734811, 0.7694761814916353, 0.7642041246978324, 0.7588802557361694, 0.7588782094268962, 0.7556047771484794], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.619852753356099, 'batch_acquisition_elapsed_time': 11.389269726350904})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'multibald', '--gpu', '1']
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'multibald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [52318, 10564, 37189, 9874, 9966, 15442, 6979, 42632, 40648, 9675], 'chosen_samples_score': [0.044091418522564055, 0.04072345455302914, 0.03582495033616108, 0.034225027276341545, 0.033151348577225265, 0.0321167536020003, 0.031537060586476734, 0.0309920985531751, 0.03090235727904603, 0.030569603435979583], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.427565960213542, 'batch_acquisition_elapsed_time': 20.908711040392518})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [52318, 10564, 37189, 9874, 9966, 15442, 42632, 40648, 8273, 22510], 'chosen_samples_score': [0.044091418522564055, 0.04072345455302914, 0.03744913477871546, 0.03627613714530881, 0.03496017658081012, 0.03429082227861047, 0.033404432963832234, 0.03299469713328274, 0.03268799728911905, 0.032574637220547834], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.344177318736911, 'batch_acquisition_elapsed_time': 20.579475125297904})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [52318, 10564, 37189, 9874, 15442, 9966, 6979, 40648, 42632, 9675], 'chosen_samples_score': [0.044091418522564055, 0.04072345455302914, 0.03907331922126984, 0.03885728928347635, 0.03794429137351918, 0.03785983060941575, 0.03706680287802867, 0.037066475283280935, 0.03704683031142716, 0.036626089720053275], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.756063312292099, 'batch_acquisition_elapsed_time': 23.57853993587196})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [52318, 10564, 37189, 9874, 9966, 15442, 6979, 42632, 40648, 9675], 'chosen_samples_score': [0.044091418522564055, 0.04072345455302914, 0.03582495033616108, 0.034225027276341545, 0.033151348577225265, 0.0321167536020003, 0.031537060586476734, 0.0309920985531751, 0.03090235727904603, 0.030569603435979583], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.347380347549915, 'batch_acquisition_elapsed_time': 21.20802574045956})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [52318, 10564, 37189, 9874, 15442, 9966, 6979, 40648, 42632, 9675], 'chosen_samples_score': [0.044091418522564055, 0.04072345455302914, 0.03907331922126984, 0.03885728928347635, 0.03794429137351918, 0.03785983060941575, 0.03706680287802867, 0.037066475283280935, 0.03704683031142716, 0.036626089720053275], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.553767383098602, 'batch_acquisition_elapsed_time': 20.387346155941486})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [52318, 10564, 37189, 9874, 9966, 15442, 42632, 40648, 8273, 22510], 'chosen_samples_score': [0.044091418522564055, 0.04072345455302914, 0.03744913477871546, 0.03627613714530881, 0.03496017658081012, 0.03429082227861047, 0.033404432963832234, 0.03299469713328274, 0.03268799728911905, 0.032574637220547834], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.370529647916555, 'batch_acquisition_elapsed_time': 20.307192742824554})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [52318, 10564, 9874, 37189, 15442, 6979, 40648, 9966, 9675, 42801], 'chosen_samples_score': [0.044091418522564055, 0.04060380008836874, 0.037159744777349915, 0.03599956576884767, 0.034136843835280914, 0.03328844464046266, 0.03284736808226713, 0.032406697033658095, 0.03183039471616368, 0.03148604374489389], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.378360845148563, 'batch_acquisition_elapsed_time': 19.732184844091535})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [52318, 10564, 9874, 37189, 15442, 40648, 6979, 9675, 42801, 9966], 'chosen_samples_score': [0.044091418522564055, 0.04060380008836874, 0.03567270512241766, 0.03396706885598579, 0.0324440395214583, 0.031965498897229806, 0.030800859295233716, 0.030500055317657326, 0.029782586741172973, 0.029574949608227163], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.378268728032708, 'batch_acquisition_elapsed_time': 19.29086115770042})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 7, 6, 9, 9, 5, 2, 8, 3, 9], 'chosen_samples': [54498, 36157, 32140, 14790, 36807, 32074, 1255, 35841, 25453, 42643], 'chosen_samples_score': [1.0639342932484648, 1.052415707887233, 1.027462937671627, 1.0205745740716767, 1.0174892680882661, 1.0113533608508707, 1.010629463077382, 1.0004807402077438, 0.9965709725771075, 0.9948893787536195], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.400372255593538, 'batch_acquisition_elapsed_time': 12.042740536853671})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6913, 'nll': 0.924505157028891}, 'chosen_targets': [7, 2, 4, 2, 2, 3, 2, 4, 2, 3], 'chosen_samples': [6432, 57632, 51261, 26447, 4165, 38130, 42746, 5175, 28944, 31431], 'chosen_samples_score': [0.9244157019391582, 0.9111340882597989, 0.8925512321859118, 0.890846710206575, 0.8868429688163502, 0.8840379541264509, 0.881492288029583, 0.8802007559142587, 0.8757939632421428, 0.8722940271124835], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.5276379361748695, 'batch_acquisition_elapsed_time': 11.239854507148266})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7538, 'nll': 0.7795654060876143}, 'chosen_targets': [3, 3, 3, 8, 8, 8, 8, 2, 2, 6], 'chosen_samples': [4581, 14394, 51555, 4761, 47322, 24558, 4727, 42789, 25510, 10218], 'chosen_samples_score': [1.148113059901847, 1.0676183114744884, 1.047894669549878, 0.9762255619005561, 0.9732011188809215, 0.9708461133202008, 0.9681289110716027, 0.9601010194666595, 0.9477387839135119, 0.9349376703739979], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.379407286643982, 'batch_acquisition_elapsed_time': 11.452527206391096})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7361, 'nll': 0.8592393457015985}, 'chosen_targets': [6, 5, 5, 5, 6, 9, 5, 5, 3, 6], 'chosen_samples': [36527, 42687, 12637, 53992, 44179, 32016, 20935, 43432, 55881, 10553], 'chosen_samples_score': [0.9292296430523899, 0.9107465258403811, 0.8899862163435437, 0.8705195586034542, 0.8660104117240099, 0.8601856871234583, 0.8599359974773955, 0.8560933483485782, 0.8534373264555001, 0.8528545209086218], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.39989292435348, 'batch_acquisition_elapsed_time': 11.823107672855258})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7429, 'nll': 0.8006179285661134}, 'chosen_targets': [3, 0, 7, 7, 3, 3, 9, 0, 0, 9], 'chosen_samples': [15472, 13030, 50992, 50796, 44032, 18001, 5386, 59433, 58073, 12320], 'chosen_samples_score': [0.9956686529437436, 0.9233394152557209, 0.9050864647944488, 0.9041579650614373, 0.8560593321083071, 0.8505699013566249, 0.8478879314322184, 0.8319252903613791, 0.8234376777784131, 0.8215305425864906], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.307213859632611, 'batch_acquisition_elapsed_time': 11.413085546344519})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.774, 'nll': 0.7063911803917691}, 'chosen_targets': [2, 2, 2, 2, 2, 7, 2, 2, 9, 2], 'chosen_samples': [8924, 12196, 7933, 45158, 14125, 18962, 41900, 14121, 34743, 14139], 'chosen_samples_score': [1.001839235930671, 0.9469760985652622, 0.8958758585340248, 0.8643422494408559, 0.8493447575812495, 0.8420423057019379, 0.8338234930998716, 0.8305401252944925, 0.817447406721554, 0.8057200366148534], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.3778986893594265, 'batch_acquisition_elapsed_time': 11.738319247961044})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 7, 6, 9, 9, 2, 3, 7, 5, 9], 'chosen_samples': [54498, 36157, 32140, 14790, 36807, 1255, 32619, 4842, 53000, 34404], 'chosen_samples_score': [1.0639342932484648, 1.052415707887233, 1.027462937671627, 1.0205745740716767, 1.0174892680882661, 1.010629463077382, 0.9947192994080314, 0.9944376823124972, 0.9916180377256604, 0.971801576379207], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.439079901203513, 'batch_acquisition_elapsed_time': 11.718658410012722})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7046, 'nll': 0.8977744184767522}, 'chosen_targets': [1, 2, 4, 7, 2, 2, 2, 2, 3, 7], 'chosen_samples': [24038, 40589, 9370, 19978, 57342, 2738, 35344, 26431, 6516, 16717], 'chosen_samples_score': [1.070694135932572, 0.9521629216636264, 0.9514075688382984, 0.9508837720615911, 0.94882711154474, 0.94741440062713, 0.9452712540880286, 0.9435578702487767, 0.9352460013350792, 0.9284162947129675], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.502951264381409, 'batch_acquisition_elapsed_time': 11.774351986125112})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7403, 'nll': 0.8372080430331749}, 'chosen_targets': [5, 3, 6, 1, 2, 9, 2, 5, 2, 6], 'chosen_samples': [40678, 19264, 10481, 59919, 12951, 41254, 38275, 18639, 36775, 22465], 'chosen_samples_score': [1.0829221455894285, 1.005505886373495, 0.9330502295881646, 0.92911077455054, 0.9267794656645613, 0.904637401468205, 0.8981002546757484, 0.8897857083299591, 0.8885565787481413, 0.8865142526288652], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.4032741114497185, 'batch_acquisition_elapsed_time': 11.43926802650094})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7232, 'nll': 0.7980269317769935}, 'chosen_targets': [2, 3, 2, 3, 3, 0, 0, 2, 3, 0], 'chosen_samples': [29064, 59416, 448, 59383, 14107, 13030, 22857, 693, 25538, 29895], 'chosen_samples_score': [0.9370815301067892, 0.896041080152746, 0.8781737911271738, 0.8667271134883278, 0.8654844606729618, 0.8539762248345922, 0.8522765244942492, 0.8485759738496144, 0.8458074487510345, 0.843705360210875], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.486270811408758, 'batch_acquisition_elapsed_time': 11.462414676323533})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7569, 'nll': 0.7758732306805238}, 'chosen_targets': [7, 3, 3, 3, 6, 3, 0, 0, 7, 2], 'chosen_samples': [27225, 39768, 12086, 3314, 52918, 37636, 8812, 27395, 35696, 53138], 'chosen_samples_score': [0.9928607081708307, 0.8893526296543643, 0.8756561796754753, 0.8494263627638469, 0.841504088852659, 0.8362209432165505, 0.8261577396730508, 0.8243213475710622, 0.8228957424903977, 0.8191250132798732], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.423920447006822, 'batch_acquisition_elapsed_time': 11.631733885034919})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7717, 'nll': 0.7436733886848246}, 'chosen_targets': [2, 9, 2, 8, 0, 4, 8, 8, 9, 9], 'chosen_samples': [33593, 55834, 5013, 23391, 8813, 42181, 10513, 24101, 24285, 53280], 'chosen_samples_score': [0.8532728700363768, 0.7646700923058878, 0.764559739646503, 0.7564027175522751, 0.742256628991549, 0.7326554487135286, 0.7165947504521551, 0.7141095696338546, 0.697664584656303, 0.6953079960181949], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.441854372620583, 'batch_acquisition_elapsed_time': 11.46220369078219})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 9, 7, 8, 3, 3, 3, 4, 6, 4], 'chosen_samples': [27714, 23732, 36157, 13258, 5088, 35045, 32339, 31941, 23050, 36279], 'chosen_samples_score': [1.0870433247092859, 1.0318463812045207, 1.0199626236270112, 0.9987189070571524, 0.9675069722055323, 0.9673220467706407, 0.9600695609214925, 0.9434125076770676, 0.9421703061851846, 0.9359046915024829], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.733431424945593, 'batch_acquisition_elapsed_time': 20.42771404609084})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.698, 'nll': 0.9176863320548144}, 'chosen_targets': [2, 2, 9, 5, 6, 8, 2, 8, 2, 5], 'chosen_samples': [27073, 57910, 9346, 22268, 45410, 56866, 59677, 47322, 45287, 46418], 'chosen_samples_score': [1.0069272701096557, 0.9404003643320984, 0.9148525167109045, 0.9140262252948662, 0.892626774214026, 0.8870539030105734, 0.8790781030189309, 0.8605668873910167, 0.8598688722573419, 0.8582112052632199], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.611518446356058, 'batch_acquisition_elapsed_time': 19.757792389020324})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7445, 'nll': 0.775159391404763}, 'chosen_targets': [0, 3, 2, 0, 0, 5, 2, 0, 4, 5], 'chosen_samples': [47513, 27644, 3553, 51415, 13030, 55591, 2879, 15582, 55073, 7963], 'chosen_samples_score': [1.009682932535393, 0.9548325056433059, 0.9456391201270794, 0.9297514909592846, 0.9040059055195331, 0.8977737518289409, 0.8891147993352475, 0.8758759779601287, 0.875626259962624, 0.8604083635121484], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.594998136162758, 'batch_acquisition_elapsed_time': 19.56461277231574})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7832, 'nll': 0.6947632085620297}, 'chosen_targets': [7, 7, 5, 9, 7, 3, 7, 5, 7, 5], 'chosen_samples': [30501, 57292, 41370, 45688, 7697, 40161, 14395, 2000, 6650, 28209], 'chosen_samples_score': [0.9226259352785504, 0.9183813444509068, 0.865389104520662, 0.8478875571976594, 0.8429101822957497, 0.8342040258432879, 0.8321799249432401, 0.8319033400490963, 0.8125303716917535, 0.8120076540564465], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.745027424767613, 'batch_acquisition_elapsed_time': 19.58669234625995})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8223, 'nll': 0.6340076591581623}, 'chosen_targets': [2, 7, 8, 7, 7, 8, 6, 7, 8, 7], 'chosen_samples': [56664, 7621, 4767, 50992, 12304, 10012, 23790, 7808, 20025, 4726], 'chosen_samples_score': [0.8998471932825701, 0.8331026050297875, 0.8254298116215161, 0.8003097818951812, 0.7981954979759932, 0.7892788361119976, 0.7803885197456077, 0.7757947034647562, 0.773914108665974, 0.7640778222001496], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.803340665996075, 'batch_acquisition_elapsed_time': 20.11514629609883})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8023, 'nll': 0.6824491590803743}, 'chosen_targets': [2, 2, 4, 3, 2, 0, 2, 8, 9, 2], 'chosen_samples': [47787, 27503, 57985, 10210, 38509, 58073, 2078, 14896, 6149, 47598], 'chosen_samples_score': [0.8308474924649887, 0.7976998665686515, 0.6931798774778493, 0.6819714386510531, 0.6730563301589456, 0.6704928030194379, 0.6549533180172137, 0.6540786964511603, 0.6367616142311839, 0.6356757068549997], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.727032598108053, 'batch_acquisition_elapsed_time': 19.696067428216338})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.845, 'nll': 0.6042695105452864}, 'chosen_targets': [5, 9, 5, 2, 9, 2, 0, 9, 3, 5], 'chosen_samples': [7833, 9810, 12181, 31512, 29390, 3791, 28840, 4929, 49955, 24716], 'chosen_samples_score': [0.8610263214080406, 0.8174101237165978, 0.8018377170604023, 0.7955493473012102, 0.7734049252196893, 0.7655443727610115, 0.7537099248916435, 0.747278183204444, 0.7467275400557547, 0.7418561770732345], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.685988692566752, 'batch_acquisition_elapsed_time': 20.544570431113243})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8017, 'nll': 0.69917520907315}, 'chosen_targets': [5, 2, 3, 5, 3, 5, 3, 3, 3, 2], 'chosen_samples': [36508, 52358, 27420, 25384, 53345, 28512, 42477, 28371, 6182, 27874], 'chosen_samples_score': [0.8194414176838449, 0.7626626812285295, 0.7380277722469805, 0.7148175036667662, 0.712717639347862, 0.7075174912800418, 0.6875453423051184, 0.6847521207266034, 0.6836884564514332, 0.6772053226888537], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.519062312319875, 'batch_acquisition_elapsed_time': 19.781278306618333})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8151, 'nll': 0.6824200027413648}, 'chosen_targets': [4, 9, 4, 8, 0, 0, 2, 9, 3, 2], 'chosen_samples': [38898, 11208, 2034, 34946, 16286, 28412, 5659, 45800, 18739, 3719], 'chosen_samples_score': [0.7581386580548812, 0.6858947715565802, 0.6716026366526093, 0.6569889880476378, 0.6509029406479714, 0.6486894865866244, 0.6458164649363618, 0.6422974992061568, 0.6365354648931755, 0.6270353540258988], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.6937001924961805, 'batch_acquisition_elapsed_time': 19.456138676032424})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [8, 2, 4, 5, 7, 4, 0, 2, 9, 7], 'chosen_samples': [6580, 43815, 37712, 47741, 8559, 2578, 38161, 32611, 13395, 26162], 'chosen_samples_score': [1.0727238605437621, 1.0103276991049854, 1.0091569748261708, 1.0031255147768487, 0.9253620568736189, 0.919755793814637, 0.8936049216927133, 0.8853201940077766, 0.8837324893901751, 0.8803291868551906], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.213728031143546, 'batch_acquisition_elapsed_time': 2.507521741092205})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [6, 5, 6, 1, 1, 1, 1, 1, 8, 1], 'chosen_samples': [59531, 59406, 59065, 58741, 58727, 58591, 58580, 58361, 58195, 57906], 'chosen_samples_score': [3.278785598581635e-08, 3.278785598581635e-08, 3.2788076254064435e-08, 3.278786309124371e-08, 3.278808335949179e-08, 3.2787870196671065e-08, 3.278809046491915e-08, 3.2787873749384744e-08, 3.2787873749384744e-08, 3.278809401763283e-08], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.219267202541232, 'batch_acquisition_elapsed_time': 18.4871933106333})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [4, 9, 4, 9, 9, 4, 4, 4, 4, 4], 'chosen_samples': [11713, 25493, 34948, 16602, 59409, 2742, 5796, 39239, 58843, 8580], 'chosen_samples_score': [0.0012133237905800343, 0.013774649240076542, 0.030556026846170425, 0.043508585542440414, 0.05306875333189964, 0.05991630256175995, 0.06354892253875732, 0.06568418443202972, 0.0676506906747818, 0.06928671151399612], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.17288126796484, 'batch_acquisition_elapsed_time': 4.903686856850982})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.631, 'nll': 1.2371867175236382}, 'chosen_targets': [5, 5, 8, 5, 8, 8, 7, 5, 0, 0], 'chosen_samples': [48197, 58270, 39373, 19354, 8928, 24101, 37833, 47646, 43169, 1363], 'chosen_samples_score': [0.001623079995624721, 0.005536687560379505, 0.011968773789703846, 0.018503060564398766, 0.02720724046230316, 0.035785917192697525, 0.044593602418899536, 0.05001424625515938, 0.05558092147111893, 0.059405818581581116], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.2465507965534925, 'batch_acquisition_elapsed_time': 4.423625599592924})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5938, 'nll': 1.4357637945724202}, 'chosen_targets': [2, 8, 6, 2, 2, 2, 2, 2, 2, 2], 'chosen_samples': [46044, 39178, 15951, 35872, 21470, 50971, 49168, 21207, 18201, 41466], 'chosen_samples_score': [0.0013572947354987264, 0.00964836124330759, 0.02012278325855732, 0.02889915741980076, 0.03855765610933304, 0.04676520451903343, 0.053942225873470306, 0.059801992028951645, 0.06321398168802261, 0.06586284190416336], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1562390364706516, 'batch_acquisition_elapsed_time': 4.434790147468448})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6602, 'nll': 1.294417483160234}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [1502, 27462, 25773, 43134, 16485, 3964, 6023, 56444, 23277, 36318], 'chosen_samples_score': [0.0017805241513997316, 0.007049643434584141, 0.01566838100552559, 0.025331251323223114, 0.034722715616226196, 0.04735104367136955, 0.058047808706760406, 0.06679597496986389, 0.07424991577863693, 0.08229582011699677], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1768162958323956, 'batch_acquisition_elapsed_time': 4.6582134533673525})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6414, 'nll': 1.2303409693201577}, 'chosen_targets': [5, 5, 6, 5, 5, 3, 5, 5, 5, 2], 'chosen_samples': [17094, 22508, 27086, 7907, 22571, 21966, 6370, 50779, 21806, 5624], 'chosen_samples_score': [0.001355338143184781, 0.0075878906063735485, 0.015552779659628868, 0.023730095475912094, 0.03053266927599907, 0.035516638308763504, 0.04131219908595085, 0.04724310338497162, 0.051753927022218704, 0.05540446192026138], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.207862511277199, 'batch_acquisition_elapsed_time': 4.340572500601411})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.702, 'nll': 0.9449375665625738}, 'chosen_targets': [9, 8, 9, 9, 9, 9, 8, 9, 3, 8], 'chosen_samples': [34338, 22389, 59127, 49003, 50724, 41905, 15267, 37123, 38166, 20823], 'chosen_samples_score': [0.001384796923957765, 0.01033041812479496, 0.022706367075443268, 0.03328808397054672, 0.04279293864965439, 0.05368470028042793, 0.06325913965702057, 0.07110044360160828, 0.07820101827383041, 0.08494126796722412], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1036310456693172, 'batch_acquisition_elapsed_time': 4.498600199818611})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7204, 'nll': 0.8688490377750137}, 'chosen_targets': [8, 7, 7, 7, 7, 7, 7, 9, 5, 5], 'chosen_samples': [43745, 56722, 44465, 21318, 17816, 42528, 49372, 36863, 39526, 14659], 'chosen_samples_score': [0.0012131022522225976, 0.011878380551934242, 0.02768113650381565, 0.039754703640937805, 0.04595170170068741, 0.05141245573759079, 0.055289216339588165, 0.05773976445198059, 0.06075238436460495, 0.06392127275466919], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1978010684251785, 'batch_acquisition_elapsed_time': 5.379485830664635})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [5, 3, 3, 5, 3, 9, 3, 5, 5, 5], 'chosen_samples': [13348, 38970, 7046, 23746, 41822, 3742, 26448, 34274, 14994, 15874], 'chosen_samples_score': [0.006277021020650864, 0.007104853633791208, 0.019893193617463112, 0.03292107209563255, 0.04929142817854881, 0.05499846488237381, 0.07018066942691803, 0.07473035901784897, 0.0896896943449974, 0.09233149141073227], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.121018128469586, 'batch_acquisition_elapsed_time': 6.068313058465719})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5854, 'nll': 1.2953098859270349}, 'chosen_targets': [6, 6, 6, 6, 6, 6, 6, 4, 8, 6], 'chosen_samples': [44533, 32841, 55112, 2570, 54537, 6338, 25599, 10854, 44320, 38535], 'chosen_samples_score': [0.00644937576726079, 0.01471689809113741, 0.0246341060847044, 0.036690618842840195, 0.045994892716407776, 0.05042983219027519, 0.06327798217535019, 0.06319260597229004, 0.06856552511453629, 0.07658974081277847], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.1237651146948338, 'batch_acquisition_elapsed_time': 4.380617564544082})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6332, 'nll': 1.1428532407375038}, 'chosen_targets': [5, 5, 5, 3, 3, 7, 9, 5, 3, 3], 'chosen_samples': [33734, 44667, 33555, 41747, 15139, 20223, 19747, 21583, 9412, 1378], 'chosen_samples_score': [0.006329758558422327, 0.015789134427905083, 0.02019280008971691, 0.0301952064037323, 0.029630187898874283, 0.03743283078074455, 0.03570658713579178, 0.046438124030828476, 0.056336406618356705, 0.05341101437807083], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.198853900656104, 'batch_acquisition_elapsed_time': 4.564754968509078})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6666, 'nll': 0.9369158490606662}, 'chosen_targets': [1, 8, 8, 8, 8, 5, 2, 8, 2, 8], 'chosen_samples': [46445, 10837, 31, 7048, 28687, 40511, 674, 43945, 10476, 35383], 'chosen_samples_score': [0.006236162036657333, 0.007271472364664078, 0.019713426008820534, 0.0409693717956543, 0.055348727852106094, 0.05692920461297035, 0.0713719055056572, 0.06945032626390457, 0.07418617606163025, 0.07481063902378082], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.162997867912054, 'batch_acquisition_elapsed_time': 5.242768784984946})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7048, 'nll': 0.8881877843181981}, 'chosen_targets': [9, 9, 7, 4, 4, 4, 4, 9, 4, 4], 'chosen_samples': [44973, 17475, 30841, 49169, 16225, 8673, 2334, 16253, 48961, 48635], 'chosen_samples_score': [0.0064133405685424805, 0.00895273219794035, 0.028346609324216843, 0.03469496965408325, 0.04603166505694389, 0.06525580585002899, 0.07621937990188599, 0.09063651412725449, 0.09524796158075333, 0.0871884748339653], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.203684812411666, 'batch_acquisition_elapsed_time': 4.729916665703058})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7704, 'nll': 0.7639437671083337}, 'chosen_targets': [1, 2, 0, 0, 0, 0, 0, 0, 0, 0], 'chosen_samples': [14571, 44401, 55631, 29148, 49304, 5961, 50310, 54351, 51301, 33669], 'chosen_samples_score': [0.006645458284765482, 0.005319381132721901, 0.012541292235255241, 0.026453718543052673, 0.04555542394518852, 0.05059614032506943, 0.06586910039186478, 0.07136371731758118, 0.08140543848276138, 0.07902298867702484], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.231821458786726, 'batch_acquisition_elapsed_time': 4.4438981637358665})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8088, 'nll': 0.6700983243642197}, 'chosen_targets': [0, 0, 0, 0, 0, 0, 0, 7, 0, 0], 'chosen_samples': [10750, 42980, 5272, 24940, 10840, 22583, 34283, 5161, 45669, 3964], 'chosen_samples_score': [0.007951300591230392, 0.005220598541200161, 0.015969740226864815, 0.0300509762018919, 0.04402872174978256, 0.055603303015232086, 0.05995340272784233, 0.0627455860376358, 0.07525194436311722, 0.07467946410179138], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.3408805523067713, 'batch_acquisition_elapsed_time': 4.429350258782506})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [6, 6, 6, 6, 6, 6, 6, 6, 6, 6], 'chosen_samples': [42919, 22282, 15280, 25102, 55703, 1582, 9619, 14051, 47288, 28163], 'chosen_samples_score': [0.0021613526855024582, 0.009004540831231922, 0.019883824330225695, 0.037019853643275875, 0.05418839117728675, 0.06892327788116212, 0.08210766650328792, 0.08347096941442317, 0.09190999914283543, 0.09720170603199169], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.1701183915138245, 'batch_acquisition_elapsed_time': 6.939676696434617})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5754, 'nll': 1.4428909436548358}, 'chosen_targets': [7, 2, 2, 9, 4, 2, 2, 2, 2, 2], 'chosen_samples': [51180, 14633, 42633, 14164, 12036, 41141, 50705, 39879, 14363, 8257], 'chosen_samples_score': [0.0016476936441746893, 0.00422960159361504, 0.010070959661475167, 0.021722789335732805, 0.03631518884505746, 0.04595053565788731, 0.05487856233388872, 0.06350702394466831, 0.07114259479264178, 0.07540145637017019], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.056993192061782, 'batch_acquisition_elapsed_time': 7.0963747296482325})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': True, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--quickquick']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5844, 'nll': 1.5234098353247518}, 'chosen_targets': [5, 1, 3, 3, 4, 2, 2, 6, 2, 8], 'chosen_samples': [33734, 55036, 55665, 57990, 7725, 50971, 6414, 58259, 40530, 59215], 'chosen_samples_score': [0.008986554108560085, 0.0032546245492994785, 0.0015302823157981038, 0.002111630281433463, -0.00030134819098748267, -0.00017902870604302734, 0.0007465116796083748, 0.0010945373214781284, 0.0012943719048053026, 0.0002499776310287416], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.185196461156011, 'batch_acquisition_elapsed_time': 6.812293581664562})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7032, 'nll': 1.0147109811503223}, 'chosen_targets': [4, 2, 1, 0, 2, 4, 2, 3, 7, 7], 'chosen_samples': [51652, 36936, 51631, 15770, 54815, 57704, 51131, 35349, 14926, 37093], 'chosen_samples_score': [0.006171681918203831, 0.0031278389506042004, 0.0017555170925334096, 0.0030861555133014917, 0.002159499330446124, 0.0011348685948178172, 0.0011114772642031312, 0.002163782250136137, -7.224677392514423e-05, 0.0004370194801595062], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.3390590883791447, 'batch_acquisition_elapsed_time': 6.291503965854645})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6606, 'nll': 1.0616880739829735}, 'chosen_targets': [0, 0, 8, 0, 8, 8, 7, 7, 3, 5], 'chosen_samples': [51809, 14158, 59861, 35999, 54243, 18012, 16133, 57692, 18120, 29637], 'chosen_samples_score': [0.006761844269931316, 0.0027000848203897476, 0.004066498018801212, 0.001720294589176774, 0.00019148139108438045, 0.004050465766340494, 0.00022155653277877718, 0.0014134601224213839, 0.00041908927960321307, 0.0015189502155408263], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 3.143426513299346, 'batch_acquisition_elapsed_time': 6.23202876187861})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [8, 3, 4, 7, 7, 4, 6, 5, 0, 3], 'chosen_samples': [24110, 35613, 15665, 5416, 33627, 2089, 18788, 44673, 48187, 43599], 'chosen_samples_score': [0.009571889415383339, 0.004006844479590654, 0.0019985802937299013, 0.003362703835591674, 0.0024070004001259804, 0.0008658667211420834, 0.0009109243401326239, 0.0009267479763366282, 0.0005024742567911744, 0.0013999288203194737], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.6669665072113276, 'batch_acquisition_elapsed_time': 73.96627266705036})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7006, 'nll': 0.9372363616257804}, 'chosen_targets': [2, 2, 8, 3, 3, 1, 9, 7, 4, 6], 'chosen_samples': [52602, 39020, 49630, 13109, 34180, 43344, 2728, 42023, 47002, 29216], 'chosen_samples_score': [0.007532122079282999, 0.004024108871817589, 0.003947440069168806, 0.0022966295946389437, 0.0010719380807131529, 0.001375987776555121, 0.0019619108643382788, 0.0018106286879628897, 0.0006007128395140171, 0.0009638458723202348], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.7816379349678755, 'batch_acquisition_elapsed_time': 77.47280570864677})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7542, 'nll': 0.7357625378921724}, 'chosen_targets': [2, 2, 9, 4, 9, 6, 5, 2, 7, 4], 'chosen_samples': [20028, 36715, 52139, 50471, 6779, 13770, 23920, 26577, 55425, 33317], 'chosen_samples_score': [0.0068998862989246845, 0.006788827013224363, 0.0027019802946597338, 0.0008836414199322462, 0.0008249766542576253, 0.0008664766792207956, 0.002015728037804365, 0.00024128625227604061, 0.0010159503435716033, -0.000890023191459477], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.275000270456076, 'batch_acquisition_elapsed_time': 76.65745271369815})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7897, 'nll': 0.6851631380405843}, 'chosen_targets': [3, 6, 2, 9, 2, 5, 7, 6, 4, 1], 'chosen_samples': [15547, 3910, 36485, 35160, 21952, 38851, 27184, 13760, 45033, 57797], 'chosen_samples_score': [0.007879872806370258, 0.0029942768160253763, 0.004641669802367687, 0.003540766192600131, 0.002072791336104274, 0.0017092387424781919, 0.0003239865764044225, 0.0006709735607728362, 0.0005328204133547843, -7.041453500278294e-05], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.755248883739114, 'batch_acquisition_elapsed_time': 76.24126981943846})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7928, 'nll': 0.6576927075997142}, 'chosen_targets': [3, 6, 7, 1, 3, 3, 6, 8, 5, 4], 'chosen_samples': [11197, 42143, 34661, 46696, 18397, 13965, 32734, 36696, 23514, 718], 'chosen_samples_score': [0.008164279162883759, 0.005541294347494841, 0.0025411215610802174, 0.0032008097041398287, -0.0020883732941001654, 0.0004587742150761187, 0.0006015083636157215, 0.0010856704320758581, -0.0007994984043762088, 0.0008174850954674184], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.875930121168494, 'batch_acquisition_elapsed_time': 77.3968809209764})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8106, 'nll': 0.650419296897}, 'chosen_targets': [6, 7, 2, 6, 7, 1, 1, 3, 1, 6], 'chosen_samples': [14492, 36818, 35071, 13845, 19372, 40352, 19837, 22770, 14345, 53481], 'chosen_samples_score': [0.008452956564724445, 0.0026129563339054585, 0.002945435931906104, 0.0006081737228669226, 0.001437537488527596, 0.0022623888216912746, 0.001549559528939426, 0.001231921836733818, 0.001303746015764773, 0.001680874964222312], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.547151643782854, 'batch_acquisition_elapsed_time': 76.37553861923516})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8298, 'nll': 0.5901398212171421}, 'chosen_targets': [3, 2, 8, 0, 8, 6, 6, 3, 1, 5], 'chosen_samples': [47367, 19343, 55959, 15065, 16416, 8826, 43424, 39804, 13790, 57944], 'chosen_samples_score': [0.008507465943694115, 0.004274337086826563, 0.0006589008262380958, 0.0026532884221524, 0.0021270764991641045, -0.0012353139463812113, 0.002162815537303686, -0.0004635151126421988, 0.0006403547595255077, 0.0010707428446039557], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.902048705145717, 'batch_acquisition_elapsed_time': 76.05031984299421})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8335, 'nll': 0.5875304416113456}, 'chosen_targets': [1, 9, 3, 3, 0, 0, 5, 9, 3, 0], 'chosen_samples': [42197, 14407, 46854, 14552, 1078, 40989, 12561, 41562, 20926, 31165], 'chosen_samples_score': [0.008077154867351055, 0.004689900204539299, 0.004936238285154104, 0.003295998787507415, 0.0020851539447903633, 0.0016757422126829624, 0.0012372598284855485, 0.001899934490211308, 0.0006853155791759491, 0.001408246229402721], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.739631969481707, 'batch_acquisition_elapsed_time': 76.33263457939029})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8528, 'nll': 0.522028462698414}, 'chosen_targets': [2, 5, 8, 9, 1, 4, 5, 6, 9, 7], 'chosen_samples': [42323, 37864, 27819, 10761, 14698, 29206, 2739, 13702, 21300, 28529], 'chosen_samples_score': [0.007816608063876629, 0.005933798849582672, 0.0037063113413751125, -0.000200920389033854, 0.0016301379073411226, 0.0016441395273432136, 0.0013041978236287832, -0.0001290256332140416, 0.0015181411290541291, 0.0008182795136235654], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.832161493599415, 'batch_acquisition_elapsed_time': 76.72492098249495})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8499, 'nll': 0.5264794303416528}, 'chosen_targets': [4, 1, 9, 1, 3, 7, 1, 3, 9, 9], 'chosen_samples': [8890, 36110, 31917, 978, 7295, 41584, 14929, 17404, 4689, 56090], 'chosen_samples_score': [0.008485422469675541, 0.004925183951854706, 0.003162126522511244, 0.001288602245040238, 0.0001094639374059625, 0.0008675061981193721, 0.0017221326706930995, 0.00010553484025876969, 0.0006527700461447239, 0.0019478034228086472], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.73524478264153, 'batch_acquisition_elapsed_time': 76.34510946273804})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [0, 4, 3, 7, 6, 0, 2, 5, 3, 3], 'chosen_samples': [43102, 9149, 16708, 12116, 19464, 17693, 59053, 21093, 45699, 5660], 'chosen_samples_score': [0.007653601933270693, 0.005230148322880268, 0.0020709114614874125, 0.002011045580729842, 0.002853553043678403, 0.0008361871587112546, 0.001351000857539475, 0.00020091424812562764, 0.001975535647943616, 0.0027850992046296597], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.612012647092342, 'batch_acquisition_elapsed_time': 74.22694639489055})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7482, 'nll': 0.7929639360907523}, 'chosen_targets': [2, 0, 9, 7, 2, 7, 1, 0, 9, 0], 'chosen_samples': [58000, 47791, 56092, 3494, 37296, 51502, 37650, 3673, 17826, 1904], 'chosen_samples_score': [0.007637196220457554, 0.003372704377397895, 0.0017500986577942967, -0.0008087155292741954, 0.0008013240876607597, 0.0009338751551695168, 0.0008762114448472857, 0.002653516363352537, 0.0006872548838146031, 0.00046166914398781955], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.706913122907281, 'batch_acquisition_elapsed_time': 76.29418911784887})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7518, 'nll': 0.7452151956537586}, 'chosen_targets': [2, 6, 3, 6, 3, 3, 6, 8, 6, 5], 'chosen_samples': [51673, 20005, 19075, 38421, 30254, 17906, 6517, 47719, 58554, 57251], 'chosen_samples_score': [0.007582652382552624, 0.004404212348163128, 0.002627844689413905, 0.0018924137111753225, 0.0028985398821532726, 0.0007672502542845905, 0.0009336373768746853, -0.00010023968934547156, 0.0009171637357212603, 0.0001785425265552476], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.764317879453301, 'batch_acquisition_elapsed_time': 76.1530997864902})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7789, 'nll': 0.6695415513189762}, 'chosen_targets': [1, 9, 0, 9, 8, 5, 6, 1, 2, 1], 'chosen_samples': [37629, 41199, 18324, 59969, 25796, 49190, 5517, 6052, 19919, 34264], 'chosen_samples_score': [0.011118496768176556, 0.0026857671327888966, 0.0038922412786632776, 0.0015099170850589871, 0.00018671715224627405, 0.00024953397223725915, 0.0013043865328654647, -0.00012314801278989762, 0.002056597266346216, -0.0005652050604112446], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.747751919552684, 'batch_acquisition_elapsed_time': 76.29962004162371})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.79, 'nll': 0.6442873966145644}, 'chosen_targets': [3, 3, 5, 6, 6, 6, 1, 8, 6, 5], 'chosen_samples': [48500, 38129, 30112, 3952, 54172, 52504, 32440, 59949, 56641, 10665], 'chosen_samples_score': [0.006904246751219034, 0.003102642949670553, 0.003184752305969596, 0.0006989013636484742, 0.0024667188990861177, 0.00376062816940248, 0.00029593956423923373, 0.0003280960372649133, 0.0014740218175575137, -0.00026995062944479287], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.878778340294957, 'batch_acquisition_elapsed_time': 77.95584986917675})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [2, 8, 3, 7, 5, 0, 4, 3, 4, 4, 0, 3, 2, 3, 3, 5, 8, 7, 0, 7, 8, 5, 5, 3, 0, 4, 4, 9, 1, 3, 7, 8, 2, 8, 6, 9, 4, 4, 5, 4], 'chosen_samples': [7207, 6942, 50337, 50664, 59993, 41158, 12922, 42906, 56031, 20455, 41156, 54249, 15185, 46821, 8537, 39881, 15861, 15098, 55622, 46215, 4887, 21289, 20914, 32227, 52204, 16738, 3101, 36456, 12078, 9418, 42751, 7793, 19606, 17751, 27019, 8702, 52973, 26367, 24217, 19123], 'chosen_samples_score': [0.007237216457724571, 0.0029041876550763845, 0.0010961061343550682, 0.003168319584801793, 0.0018699693027883768, 0.00011295117292320356, 0.0012319524539634585, -0.00045633388799615204, 0.0006314661004580557, 0.0018332719337195158, 0.0006197295733727515, 0.000313696451485157, 0.0016261280979961157, 0.0006913580582477152, 0.0010032923892140388, 0.0007025724044069648, 0.0003232122689951211, 0.0005392406601458788, -4.3710409954655915e-05, 0.0006862368900328875, 0.0007242538849823177, 0.0010902468347921968, 0.00033275785972364247, -5.161400986253284e-05, -0.00032477860804647207, -0.0003563293139450252, 0.0007076432812027633, 0.0009101481991820037, 0.0004333030665293336, 0.0003462639870122075, 0.00024073511303868145, -0.0006227142876014113, 0.00019594554032664746, 0.00010605883289827034, 0.00028702497365884483, -0.0002907023299485445, 0.0003870160144288093, -7.96466920292005e-05, 0.0007888965192250907, 0.00041951832827180624], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.689850578084588, 'batch_acquisition_elapsed_time': 304.71806932240725})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7776, 'nll': 0.7481720247403032}, 'chosen_targets': [1, 1, 8, 8, 9, 9, 3, 2, 1, 6, 9, 2, 8, 2, 4, 5, 1, 5, 6, 1, 9, 2, 3, 1, 1, 1, 2, 6, 2, 4, 6, 7, 6, 8, 2, 9, 1, 7, 9, 0], 'chosen_samples': [30089, 42618, 9154, 26351, 8329, 2989, 3656, 57503, 35912, 10356, 15592, 26577, 3842, 45714, 49861, 43946, 43336, 18018, 39226, 26250, 44084, 56795, 6539, 32986, 24465, 30372, 53239, 34124, 18547, 2902, 5329, 14506, 16335, 21231, 41946, 49335, 36517, 11660, 2465, 44844], 'chosen_samples_score': [0.007104998920112848, 0.0013375770067796111, 0.002207693411037326, 0.0026355767622590065, 0.0012847462203353643, 0.002462805947288871, 0.0011441047536209226, -0.0009040744043886662, 3.242787715862505e-05, 0.0017212838865816593, 0.0005440392415039241, 0.0007910554995760322, 2.5106510292971507e-06, 0.001565927523188293, 0.001009513740427792, 0.0006603848887607455, 0.00034991660504601896, 0.0004589896707329899, 0.0011249813251197338, 0.00037730467738583684, 0.00034404697362333536, 0.00046760623808950186, -0.0006593387224711478, 0.0001228404580615461, -0.00048360941582359374, 0.0007158155785873532, 0.000861121341586113, -0.0003491676470730454, 0.0003079339803662151, 0.00031737220706418157, 0.0008331409189850092, 0.0005588966305367649, 0.00023400885402224958, -0.00035043765092268586, 1.9057251847698353e-05, 5.293594949762337e-05, 0.00044475492904894054, -0.00034164960379712284, 0.000215043211937882, -0.00022591909510083497], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.796840950846672, 'batch_acquisition_elapsed_time': 331.4436681754887})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'multibald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 7, 4, 3, 5, 9, 2, 8, 8, 3, 4, 8, 3, 3, 8, 4, 4, 3, 6, 6, 2, 9, 2, 3, 2, 9, 9, 0, 0, 4, 8, 2, 1, 1, 1, 1, 6, 2, 0, 1], 'chosen_samples': [27714, 36157, 34429, 40575, 32074, 30646, 16298, 54498, 7768, 22717, 48365, 59429, 35794, 1566, 24240, 47089, 36791, 21306, 37292, 53578, 24433, 19185, 6846, 49477, 23468, 28288, 46814, 45539, 28814, 28996, 10426, 1800, 24293, 24771, 50952, 40823, 13941, 55662, 9699, 38769], 'chosen_samples_score': [1.0870433247092859, 1.9871468359720037, 2.643448584143785, 3.060988263785438, 3.3261518041531906, 3.4757811479400385, 3.573229936951668, 3.6292477104650818, 3.6601048242403618, 3.6763586254381195, 3.6891098382938425, 3.6945011968512897, 3.6988166508597686, 3.699473980474961, 3.698863534356377, 3.6950015114333947, 3.6979555138733122, 3.70173366267465, 3.7038453709706296, 3.696501983536212, 3.6991226240988233, 3.699464765100629, 3.707486871502759, 3.7102014902102347, 3.702518176391756, 3.702894034771088, 3.7074359944353787, 3.703151025123347, 3.707372462061329, 3.7084405670918557, 3.6998602714073883, 3.6930774655971383, 3.687542753942264, 3.6888347726591455, 3.6922667300326886, 3.698667652189492, 3.6978718263507737, 3.6992894320966236, 3.7041861788314385, 3.7056857093531157], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.609373692423105, 'batch_acquisition_elapsed_time': 1227.181825965643})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7215, 'nll': 0.8971155321237658}, 'chosen_targets': [2, 2, 6, 5, 7, 3, 0, 7, 0, 7, 2, 2, 0, 0, 8, 5, 2, 2, 9, 7, 2, 1, 0, 5, 9, 9, 7, 8, 0, 2, 2, 6, 8, 8, 7, 8, 6, 2, 0, 9], 'chosen_samples': [59253, 40513, 13067, 22180, 14277, 27644, 30382, 38607, 42275, 30449, 23982, 22701, 39347, 26184, 27596, 2268, 14121, 41197, 56348, 1772, 23039, 39818, 52520, 3271, 22824, 57636, 18706, 48824, 45695, 58026, 12985, 8817, 51207, 34901, 15254, 8584, 59853, 360, 47599, 53280], 'chosen_samples_score': [0.9165120166572739, 1.6956021911584525, 2.2570130843241207, 2.696317679663526, 2.997255684396603, 3.2171146851839074, 3.366889230446901, 3.4656573622528173, 3.5434202465101485, 3.5866926419224043, 3.6244144587970553, 3.648113201381369, 3.669752948169293, 3.67927119727055, 3.6827227146127957, 3.6865710458883605, 3.6867870084399996, 3.691228818703175, 3.680311411805235, 3.6783721099968005, 3.685850796895757, 3.6810431866431372, 3.6781991866968546, 3.6822320981829293, 3.6888724647078774, 3.686212325160742, 3.681408329060627, 3.681537825478987, 3.684112204347283, 3.6887163871266324, 3.6868508512319096, 3.684337102636839, 3.685401010338367, 3.684050310986944, 3.686258153881841, 3.6861490358393816, 3.6744605463886515, 3.6777241767815134, 3.679398839258752, 3.6737446914472827], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.75327168032527, 'batch_acquisition_elapsed_time': 1228.6593712400645})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [0, 8, 2, 6, 8, 3, 7, 6, 5, 0, 5, 6, 7, 3, 6, 4, 4, 5, 1, 2, 9, 7, 4, 3, 6, 5, 3, 7, 0, 7, 9, 0, 0, 2, 2, 8, 2, 6, 2, 4], 'chosen_samples': [24075, 56879, 46400, 4367, 19358, 17077, 50664, 55913, 21895, 1501, 33528, 49765, 34633, 27534, 22035, 35227, 43819, 25598, 2162, 9748, 43478, 55916, 51199, 8528, 35684, 12957, 54248, 15754, 12456, 263, 51730, 50240, 32184, 29351, 23355, 10628, 46543, 13772, 7187, 39867], 'chosen_samples_score': [0.008156165480613708, 0.004962132778018713, 0.0010655944934114814, 0.001723108347505331, 0.0025521069765090942, 0.0003628587583079934, 0.0012461039004847407, 0.0005499285762198269, -0.00014668128278572112, 0.0015329436864703894, 0.00018084129260387272, 0.0014718779129907489, -0.000399288343032822, 0.000521759910043329, -0.00020927317382302135, 0.0011143902083858848, 0.0010124164400622249, 0.00044819380855187774, 0.0009012967348098755, 0.0004917063051834702, 0.0006478408467955887, 0.00017320610641036183, 0.0006197423790581524, 0.000980400131084025, -0.00046553194988518953, 1.64346129167825e-05, -0.000318547390634194, -5.485081419465132e-05, -0.00011417110363254324, 0.0005131210200488567, 0.00019663787679746747, -0.00012231151049491018, 0.00024322736135218292, 2.476616282365285e-05, 0.0004083975509274751, -0.0008175703114829957, 0.00048428683658130467, 0.00017883301188703626, 0.0004160210955888033, 0.00013100652722641826], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.5751752480864525, 'batch_acquisition_elapsed_time': 303.8873470760882})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8178, 'nll': 0.6109838373485998}, 'chosen_targets': [3, 2, 9, 9, 3, 2, 6, 2, 6, 2, 0, 7, 0, 9, 2, 6, 3, 5, 2, 7, 8, 3, 3, 8, 2, 1, 1, 9, 3, 8, 3, 6, 2, 9, 7, 0, 6, 7, 9, 2], 'chosen_samples': [45843, 31813, 22772, 58519, 51613, 28577, 4364, 38143, 49233, 46619, 49770, 17267, 19542, 33544, 39794, 13865, 57952, 59945, 57105, 1851, 47567, 12882, 54635, 28729, 16813, 507, 34337, 36930, 10329, 20906, 54208, 35385, 1011, 46000, 4041, 7816, 32696, 44972, 13806, 28285], 'chosen_samples_score': [0.009927313774824142, 0.002744129626080394, 0.0013768930220976472, 0.0019110646098852158, 0.0032082642428576946, 0.0028818470891565084, 0.0021012937650084496, 0.0007742298766970634, 0.0026577722746878862, 0.002248006407171488, -0.0001279302523471415, -9.129421232501045e-05, -0.0001994474878301844, 0.0009399261325597763, 0.00022845996136311442, 0.0007603332051075995, 0.0014276464935392141, -0.0001294704561587423, -0.0007891269633546472, 0.0008695113356225193, -0.000581320549827069, 0.00012496404815465212, -0.00047780980821698904, -0.0007080234354361892, 0.00044199120020493865, 0.00022724854352418333, 0.00019283060100860894, 0.000303838518448174, 1.97281133296201e-05, 6.577376188943163e-05, 0.0006507065845653415, 0.0011797845363616943, -0.00021188736718613654, -7.420127803925425e-05, -0.00044350436655804515, -0.0008075963705778122, 0.00021856070088688284, 0.0007186064613051713, 0.00010799674782902002, 0.00031677441438660026], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.870871739462018, 'batch_acquisition_elapsed_time': 331.95995078608394})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [4, 9, 9, 4, 8, 4, 4, 4, 8, 4], 'chosen_samples': [14546, 57246, 23016, 9245, 41699, 38229, 58764, 18787, 22543, 18898], 'chosen_samples_score': [0.0011921401601284742, 0.0011535420781001449, 0.001139770494773984, 0.0011312207207083702, 0.0011251316173002124, 0.001120818662457168, 0.0011141530703753233, 0.0011093204375356436, 0.0011068740859627724, 0.0011030271416530013], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.416806872934103, 'batch_acquisition_elapsed_time': 74.01245799288154})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 40, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '40', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [8, 3, 1, 3, 7, 1, 3, 7, 8, 5], 'chosen_samples': [31765, 9696, 19168, 52059, 23094, 23756, 53874, 58167, 51058, 51349], 'chosen_samples_score': [0.002753432607278228, 0.0029918912332504988, 0.0029481230303645134, 0.0030939362477511168, 0.002740975236520171, 0.0027640548069030046, 0.0029467844869941473, 0.002568138064816594, 0.0029690591618418694, 0.002830804791301489], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.937269469723105, 'batch_acquisition_elapsed_time': 74.70964351855218})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7013, 'nll': 0.9796260988636244}, 'chosen_targets': [4, 4, 4, 4, 9, 6, 9, 9, 9, 4], 'chosen_samples': [12267, 50957, 59951, 41991, 36122, 49505, 29743, 4788, 39787, 24287], 'chosen_samples_score': [0.0031772854272276163, 0.002750966465100646, 0.002918221754953265, 0.002867056056857109, 0.002711390145123005, 0.0029272614046931267, 0.0026270942762494087, 0.0027081358712166548, 0.002938874065876007, 0.0028020606841892004], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.576030135154724, 'batch_acquisition_elapsed_time': 74.93418786861002})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7542, 'nll': 0.7659674292907521}, 'chosen_targets': [0, 0, 2, 6, 0, 5, 0, 6, 3, 8], 'chosen_samples': [6700, 49720, 53656, 47343, 40895, 7047, 53353, 10304, 32422, 30147], 'chosen_samples_score': [0.0030087814666330814, 0.0027918191626667976, 0.00260809320025146, 0.002958122408017516, 0.002482040785253048, 0.0026348622050136328, 0.002454522531479597, 0.0025127832777798176, 0.002675216179341078, 0.002587897004559636], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.59021302126348, 'batch_acquisition_elapsed_time': 81.10407387651503})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [7, 6, 3, 7, 3, 3, 2, 5, 2, 4], 'chosen_samples': [58167, 48994, 53874, 4516, 3674, 43135, 35670, 1222, 21135, 33726], 'chosen_samples_score': [0.0035156882368028164, 0.003906852565705776, 0.003240998135879636, 0.0027150826063007116, 0.0029192061629146338, 0.002999482676386833, 0.0028067738749086857, 0.0032086162827908993, 0.0028774398379027843, 0.0024442498106509447], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.7067937552928925, 'batch_acquisition_elapsed_time': 76.07129706442356})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7032, 'nll': 0.9824320699718463}, 'chosen_targets': [4, 9, 4, 5, 4, 1, 0, 4, 9, 1], 'chosen_samples': [14947, 42258, 22699, 10782, 32069, 3344, 2765, 28863, 1522, 27457], 'chosen_samples_score': [0.003754850709810853, 0.003028247272595763, 0.0032141846604645252, 0.002451166044920683, 0.002043989719823003, 0.002331365831196308, 0.0024856857489794493, 0.0025762871373444796, 0.0021438226103782654, 0.0019120541401207447], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.679641051217914, 'batch_acquisition_elapsed_time': 76.47668149508536})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.802, 'nll': 0.6606208235089712}, 'chosen_targets': [8, 2, 8, 0, 8, 0, 2, 8, 8, 6], 'chosen_samples': [24587, 41911, 4357, 54354, 36861, 51491, 46122, 53651, 12974, 34765], 'chosen_samples_score': [0.003235279116779566, 0.0019641174003481865, 0.0023076205980032682, 0.002025903668254614, 0.002068469300866127, 0.0027493180241435766, 0.0023764935322105885, 0.0022347993217408657, 0.0019252607598900795, 0.0019509608391672373], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.662126157432795, 'batch_acquisition_elapsed_time': 76.43091510236263})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7409, 'nll': 0.8113086969129436}, 'chosen_targets': [9, 4, 3, 5, 6, 9, 9, 3, 5, 5], 'chosen_samples': [6787, 20230, 19950, 43523, 6930, 35647, 26921, 23796, 496, 22575], 'chosen_samples_score': [0.00364606617949903, 0.002788831014186144, 0.0026502422988414764, 0.0020246747881174088, 0.0019718962721526623, 0.0023409936111420393, 0.0028578026685863733, 0.0021575563587248325, 0.002158721210435033, 0.0027457240503281355], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.8600257113575935, 'batch_acquisition_elapsed_time': 76.52848625741899})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8085, 'nll': 0.6552079151884903}, 'chosen_targets': [7, 6, 2, 3, 4, 1, 9, 4, 3, 7], 'chosen_samples': [43384, 58016, 1058, 53711, 42620, 51249, 7016, 22563, 45759, 11525], 'chosen_samples_score': [0.003017289564013481, 0.0023052606265991926, 0.0022948074620217085, 0.002079637721180916, 0.0017558749532327056, 0.0017954272916540504, 0.00223711458966136, 0.0020540039986371994, 0.002053518546745181, 0.0017063207924365997], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.6124745681881905, 'batch_acquisition_elapsed_time': 78.09147552400827})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8236, 'nll': 0.6269034058283082}, 'chosen_targets': [0, 0, 2, 8, 7, 0, 4, 8, 8, 4], 'chosen_samples': [5288, 54812, 24010, 20666, 16304, 2617, 51962, 29194, 13436, 50154], 'chosen_samples_score': [0.003020174102857709, 0.002789335558190942, 0.002290679607540369, 0.002270972356200218, 0.0022486422676593065, 0.0020071840845048428, 0.002043984131887555, 0.0017570663476362824, 0.0018388595199212432, 0.002266343915835023], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.929630186408758, 'batch_acquisition_elapsed_time': 76.40749642066658})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8513, 'nll': 0.557963275557925}, 'chosen_targets': [2, 1, 9, 4, 9, 3, 9, 6, 4, 3], 'chosen_samples': [50478, 870, 45869, 1477, 35593, 30062, 36050, 59431, 26334, 48038], 'chosen_samples_score': [0.0027436213567852974, 0.0018296790076419711, 0.001885675243102014, 0.001581579796038568, 0.0016822831239551306, 0.0017167868791148067, 0.001681421766988933, 0.0017297544982284307, 0.0017144385492429137, 0.001561386394314468], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.489074198529124, 'batch_acquisition_elapsed_time': 78.17866331897676})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8527, 'nll': 0.5334357238462384}, 'chosen_targets': [4, 4, 4, 5, 3, 4, 8, 0, 4, 2], 'chosen_samples': [45252, 31051, 34808, 36454, 25924, 54109, 7519, 7597, 52346, 18215], 'chosen_samples_score': [0.003274946240708232, 0.0029242506716400385, 0.002839733147993684, 0.0024187653325498104, 0.002447951352223754, 0.002361614489927888, 0.0018203401705250144, 0.002375894458964467, 0.00217400467954576, 0.0019607008434832096], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.724255369976163, 'batch_acquisition_elapsed_time': 76.55775711126626})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8686, 'nll': 0.4868569241682421}, 'chosen_targets': [2, 0, 9, 0, 4, 8, 1, 9, 5, 9], 'chosen_samples': [10583, 16777, 48750, 52978, 6901, 5521, 29320, 31041, 14199, 52258], 'chosen_samples_score': [0.0030028223991394043, 0.0028402141761034727, 0.0023339337203651667, 0.0017642226302996278, 0.0021252331789582968, 0.0023476334754377604, 0.001578533323481679, 0.0020958909299224615, 0.0019251229241490364, 0.0019754127133637667], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.8494012001901865, 'batch_acquisition_elapsed_time': 77.33384774066508})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.862, 'nll': 0.5363648875304795}, 'chosen_targets': [2, 9, 6, 8, 2, 8, 5, 5, 8, 6], 'chosen_samples': [7005, 14317, 10550, 11823, 18110, 15056, 8712, 14623, 14896, 30314], 'chosen_samples_score': [0.0031336804386228323, 0.0025464424397796392, 0.0022911576088517904, 0.0020922725088894367, 0.00268443557433784, 0.0017607129411771894, 0.0020967801101505756, 0.0022322717122733593, 0.0022721420973539352, 0.002194758504629135], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.8850038312375546, 'batch_acquisition_elapsed_time': 76.2316169925034})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [3, 7, 5, 3, 2, 3, 6, 4, 9, 3], 'chosen_samples': [48076, 43401, 13253, 49814, 28555, 56165, 48565, 18999, 15151, 48722], 'chosen_samples_score': [0.009507647715508938, 0.00886146817356348, 0.009264015592634678, 0.00997683871537447, 0.010420037433505058, 0.009179608896374702, 0.009683256968855858, 0.00750042824074626, 0.00834957417100668, 0.009188732132315636], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.423247801139951, 'batch_acquisition_elapsed_time': 16.840712267905474})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7615, 'nll': 0.7984839112697246}, 'chosen_targets': [8, 1, 1, 0, 7, 2, 5, 1, 0, 0], 'chosen_samples': [33036, 52382, 16418, 29570, 7663, 5191, 34829, 49927, 21874, 51960], 'chosen_samples_score': [0.008892083540558815, 0.007975987158715725, 0.008537731133401394, 0.007591184228658676, 0.008011490106582642, 0.008072036318480968, 0.006852112710475922, 0.006611617282032967, 0.0074994200840592384, 0.008901252411305904], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.791110692545772, 'batch_acquisition_elapsed_time': 16.18377098441124})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7689, 'nll': 0.7435168160911394}, 'chosen_targets': [8, 9, 6, 7, 1, 6, 9, 7, 4, 8], 'chosen_samples': [25546, 41135, 31714, 44954, 7720, 22550, 32152, 35450, 1744, 30478], 'chosen_samples_score': [0.008429317735135555, 0.010133126750588417, 0.008825600147247314, 0.007746505551040173, 0.008610254153609276, 0.008967640809714794, 0.008493242785334587, 0.008674773387610912, 0.006832097191363573, 0.009521208703517914], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.468141818419099, 'batch_acquisition_elapsed_time': 15.442452659830451})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7602, 'nll': 0.7826983598553574}, 'chosen_targets': [7, 8, 8, 9, 8, 4, 9, 6, 4, 9], 'chosen_samples': [35474, 43388, 36605, 38760, 39764, 13878, 54905, 16726, 49501, 26405], 'chosen_samples_score': [0.011072230525314808, 0.009524203836917877, 0.007939486764371395, 0.009137555956840515, 0.008490475825965405, 0.008552277460694313, 0.007944243028759956, 0.008756349794566631, 0.008808506652712822, 0.008735128678381443], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.47426537796855, 'batch_acquisition_elapsed_time': 16.7840145137161})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7921, 'nll': 0.6656095878582803}, 'chosen_targets': [9, 0, 8, 5, 4, 3, 7, 3, 0, 9], 'chosen_samples': [39537, 54349, 34020, 32570, 28703, 59416, 37596, 46709, 27637, 10132], 'chosen_samples_score': [0.00919137429445982, 0.009036003611981869, 0.008352010510861874, 0.00771415326744318, 0.009339713491499424, 0.008213375695049763, 0.009503021836280823, 0.008667197078466415, 0.008918560110032558, 0.007935398258268833], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.304306544363499, 'batch_acquisition_elapsed_time': 15.992753144353628})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8258, 'nll': 0.5583081090384628}, 'chosen_targets': [1, 8, 2, 0, 1, 2, 5, 5, 5, 1], 'chosen_samples': [52963, 2781, 17805, 16043, 17607, 18192, 20101, 37379, 57251, 49569], 'chosen_samples_score': [0.007531598675996065, 0.006956679746508598, 0.007542429491877556, 0.0063970875926315784, 0.007363748736679554, 0.006758772302418947, 0.008057443425059319, 0.007759631145745516, 0.005686790682375431, 0.006321345921605825], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.45744570158422, 'batch_acquisition_elapsed_time': 16.08141554892063})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8212, 'nll': 0.6086504744526344}, 'chosen_targets': [9, 4, 4, 5, 5, 6, 7, 3, 9, 6], 'chosen_samples': [39034, 59629, 59321, 14183, 33954, 33975, 6600, 13376, 12840, 50073], 'chosen_samples_score': [0.00851702131330967, 0.007686985656619072, 0.007868408225476742, 0.006687081418931484, 0.0083833709359169, 0.00814446248114109, 0.008433432318270206, 0.008246643468737602, 0.006490793079137802, 0.006824107374995947], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.482434639707208, 'batch_acquisition_elapsed_time': 15.997675394639373})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.85, 'nll': 0.5824571174575442}, 'chosen_targets': [8, 9, 3, 5, 3, 8, 5, 2, 8, 8], 'chosen_samples': [28181, 50078, 20989, 1111, 37271, 44196, 32233, 24803, 3688, 13876], 'chosen_samples_score': [0.009611096233129501, 0.009671010076999664, 0.009855033829808235, 0.00845889188349247, 0.007783645763993263, 0.009197601117193699, 0.008147667162120342, 0.00874672643840313, 0.006800944451242685, 0.008929803967475891], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.459251441061497, 'batch_acquisition_elapsed_time': 15.573567347601056})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8748, 'nll': 0.5345966065320992}, 'chosen_targets': [8, 4, 9, 8, 2, 0, 0, 2, 6, 4], 'chosen_samples': [14665, 46498, 39942, 18396, 23859, 56397, 9966, 26164, 40124, 46124], 'chosen_samples_score': [0.012198194861412048, 0.011104946956038475, 0.010838703252375126, 0.01012533251196146, 0.009342377074062824, 0.01054632943123579, 0.010682977735996246, 0.010217085480690002, 0.01012423075735569, 0.010035689920186996], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.465120503678918, 'batch_acquisition_elapsed_time': 15.583868101239204})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8645, 'nll': 0.551016713450434}, 'chosen_targets': [5, 3, 8, 9, 8, 5, 0, 8, 8, 3], 'chosen_samples': [23568, 10966, 25556, 48130, 22543, 20342, 6279, 38702, 25429, 57194], 'chosen_samples_score': [0.008761797100305557, 0.009438524954020977, 0.008362197317183018, 0.010287776589393616, 0.008650432340800762, 0.00981519091874361, 0.007997611537575722, 0.007458748295903206, 0.009746119379997253, 0.007995139807462692], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.31581549346447, 'batch_acquisition_elapsed_time': 15.704889236018062})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8389, 'nll': 0.5895817328192214}, 'chosen_targets': [1, 8, 8, 2, 3, 7, 7, 6, 6, 1], 'chosen_samples': [14656, 8719, 29945, 27470, 57308, 20509, 38711, 30142, 27086, 53168], 'chosen_samples_score': [0.010242334567010403, 0.009596223011612892, 0.009547705762088299, 0.009208678267896175, 0.00847345869988203, 0.008754471316933632, 0.008865970186889172, 0.007547959219664335, 0.008231553249061108, 0.009649556130170822], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.317534228786826, 'batch_acquisition_elapsed_time': 15.354701776057482})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8721, 'nll': 0.5398952939701777}, 'chosen_targets': [3, 5, 2, 5, 2, 6, 3, 3, 7, 3], 'chosen_samples': [14107, 12572, 27520, 59618, 50576, 42405, 1234, 58654, 6862, 31788], 'chosen_samples_score': [0.009057844057679176, 0.009462188929319382, 0.009538857266306877, 0.010816474445164204, 0.011579954996705055, 0.009807717055082321, 0.009310231544077396, 0.009110873565077782, 0.008426425978541374, 0.00835942942649126], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.415908081457019, 'batch_acquisition_elapsed_time': 15.6639323849231})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8805, 'nll': 0.5185082390274616}, 'chosen_targets': [0, 7, 5, 8, 7, 9, 7, 4, 9, 9], 'chosen_samples': [49575, 38447, 10894, 50393, 44972, 20871, 4332, 55690, 21445, 18091], 'chosen_samples_score': [0.011045078746974468, 0.009003372862935066, 0.009217983111739159, 0.008676420897245407, 0.010564724914729595, 0.00987717229872942, 0.010375467129051685, 0.010054295882582664, 0.009097641333937645, 0.009918197058141232], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.390741728246212, 'batch_acquisition_elapsed_time': 15.389457376673818})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8753, 'nll': 0.6367573371583887}, 'chosen_targets': [5, 4, 0, 8, 5, 1, 3, 3, 4, 2], 'chosen_samples': [1702, 37528, 49903, 18872, 14376, 13025, 15261, 24763, 35686, 7196], 'chosen_samples_score': [0.01302565447986126, 0.011727066710591316, 0.010154461488127708, 0.010226905345916748, 0.012511459179222584, 0.011848153546452522, 0.009598268195986748, 0.01128681842237711, 0.011866862885653973, 0.011348146013915539], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.409520635381341, 'batch_acquisition_elapsed_time': 15.324814263731241})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8569, 'nll': 0.6538183992043485}, 'chosen_targets': [2, 1, 3, 5, 3, 2, 1, 0, 8, 4], 'chosen_samples': [31616, 34590, 4506, 51955, 34845, 53656, 39797, 42703, 55311, 55964], 'chosen_samples_score': [0.011609932407736778, 0.011143066920340061, 0.011178482323884964, 0.01093850377947092, 0.010373840108513832, 0.011306884698569775, 0.01032258290797472, 0.010837344452738762, 0.011562053114175797, 0.011046051979064941], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.289207203313708, 'batch_acquisition_elapsed_time': 16.31284085661173})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8902, 'nll': 0.5310155867761361}, 'chosen_targets': [2, 0, 8, 2, 4, 2, 1, 5, 6, 4], 'chosen_samples': [42717, 52048, 1063, 40936, 21627, 28454, 36822, 28231, 11684, 5764], 'chosen_samples_score': [0.010074998252093792, 0.010162273421883583, 0.009447784163057804, 0.00966849084943533, 0.00894227810204029, 0.009001062251627445, 0.010099219158291817, 0.008774620480835438, 0.009560617618262768, 0.007697435095906258], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.258114719763398, 'batch_acquisition_elapsed_time': 16.497138522565365})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8722, 'nll': 0.582835544445373}, 'chosen_targets': [3, 6, 6, 5, 3, 8, 2, 3, 4, 2], 'chosen_samples': [23490, 38022, 30338, 11609, 50976, 18353, 33707, 57533, 37221, 30925], 'chosen_samples_score': [0.012085103429853916, 0.011334319598972797, 0.011695422232151031, 0.011355570517480373, 0.010565096512436867, 0.010892815887928009, 0.010886848904192448, 0.010428257286548615, 0.010360447689890862, 0.010219280607998371], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.371527878567576, 'batch_acquisition_elapsed_time': 15.331644700840116})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8848, 'nll': 0.5527233146494958}, 'chosen_targets': [8, 1, 7, 3, 5, 9, 4, 9, 0, 5], 'chosen_samples': [1439, 14149, 11188, 38565, 23733, 56800, 22034, 16580, 25957, 13345], 'chosen_samples_score': [0.010301067493855953, 0.010760984383523464, 0.012372932396829128, 0.011654330417513847, 0.010616201907396317, 0.010287515819072723, 0.009015711955726147, 0.009227884002029896, 0.009894143790006638, 0.010730921290814877], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.2534897364676, 'batch_acquisition_elapsed_time': 15.304770264774561})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8937, 'nll': 0.5519410084007511}, 'chosen_targets': [3, 8, 2, 9, 2, 2, 7, 5, 4, 8], 'chosen_samples': [6719, 42712, 38080, 56896, 51673, 18864, 4799, 32277, 24855, 4634], 'chosen_samples_score': [0.012388121336698532, 0.011140628717839718, 0.011548140086233616, 0.01076270081102848, 0.010732254013419151, 0.01090354472398758, 0.011319640092551708, 0.011281006969511509, 0.011900919489562511, 0.01054471917450428], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.437132619321346, 'batch_acquisition_elapsed_time': 15.554283270612359})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8752, 'nll': 0.5048574736245104}, 'chosen_targets': [1, 3, 8, 3, 1, 8, 3, 8, 3, 1], 'chosen_samples': [8678, 44157, 14008, 40720, 37110, 33820, 40480, 49617, 33357, 51188], 'chosen_samples_score': [0.00935191847383976, 0.008560087531805038, 0.008018764667212963, 0.007215736899524927, 0.007172761019319296, 0.009292015805840492, 0.006756457034498453, 0.006653871852904558, 0.009235293604433537, 0.008729498833417892], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.437631607055664, 'batch_acquisition_elapsed_time': 15.701737280935049})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8725, 'nll': 0.646994572766779}, 'chosen_targets': [7, 6, 3, 7, 2, 3, 2, 4, 6, 4], 'chosen_samples': [518, 54933, 46242, 52162, 26994, 54029, 34559, 17926, 49483, 38630], 'chosen_samples_score': [0.012209583073854446, 0.01090337336063385, 0.011217862367630005, 0.011129116639494896, 0.009340576827526093, 0.011537518352270126, 0.011778722517192364, 0.01059188973158598, 0.009964841417968273, 0.009960131719708443], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.517452128231525, 'batch_acquisition_elapsed_time': 15.798931239172816})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8777, 'nll': 0.5337014907859209}, 'chosen_targets': [3, 2, 2, 7, 2, 9, 6, 0, 9, 7], 'chosen_samples': [11951, 4111, 35630, 49906, 53264, 58422, 23594, 29341, 3636, 40470], 'chosen_samples_score': [0.010897519998252392, 0.009692777879536152, 0.01060994528234005, 0.007548284716904163, 0.00954349059611559, 0.00838236790150404, 0.008564014919102192, 0.009173981845378876, 0.008251260034739971, 0.009161660447716713], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.33989891782403, 'batch_acquisition_elapsed_time': 15.999531604349613})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8937, 'nll': 0.5556350607841322}, 'chosen_targets': [8, 7, 6, 0, 9, 2, 8, 7, 8, 8], 'chosen_samples': [16467, 9433, 42247, 49185, 17347, 43852, 29189, 23782, 48726, 46794], 'chosen_samples_score': [0.01164211891591549, 0.010762832127511501, 0.009771144948899746, 0.010962847620248795, 0.01002256665378809, 0.010347473435103893, 0.01148623414337635, 0.010528311133384705, 0.010990407317876816, 0.010454939678311348], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.420007590204477, 'batch_acquisition_elapsed_time': 15.326813139021397})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 40, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '40', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5964, 'nll': 1.3619363733530185}, 'chosen_targets': [3, 3, 3, 3, 9, 1, 3, 2, 9, 3], 'chosen_samples': [59825, 41820, 18862, 38752, 39247, 32808, 2408, 3871, 11775, 41767], 'chosen_samples_score': [0.0030020971316844225, 0.0031805960461497307, 0.0030828651506453753, 0.00282990001142025, 0.0029558618552982807, 0.0029702007304877043, 0.00295151281170547, 0.003032232169061899, 0.0029663722962141037, 0.0027443370781838894], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.767598666250706, 'batch_acquisition_elapsed_time': 73.94276633299887})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7051, 'nll': 0.9459756832170982}, 'chosen_targets': [4, 4, 4, 7, 4, 4, 8, 4, 4, 4], 'chosen_samples': [35304, 45560, 25288, 28443, 14905, 9, 12027, 49940, 32565, 17868], 'chosen_samples_score': [0.0031734437216073275, 0.002943670842796564, 0.003099379362538457, 0.0028927584644407034, 0.0029924858827143908, 0.002704077400267124, 0.0028954283334314823, 0.0033215819858014584, 0.0028596813790500164, 0.0031323989387601614], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.663709182292223, 'batch_acquisition_elapsed_time': 76.1477765366435})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7018, 'nll': 0.9513363805161682}, 'chosen_targets': [5, 6, 0, 8, 5, 2, 7, 6, 3, 3], 'chosen_samples': [100, 11769, 29345, 45884, 40133, 46293, 48610, 15591, 53875, 14025], 'chosen_samples_score': [0.002691254485398531, 0.0024944418109953403, 0.0026613029185682535, 0.0024799108505249023, 0.0026989274192601442, 0.0025201942771673203, 0.002655093325302005, 0.002443773904815316, 0.002642703242599964, 0.0024120479356497526], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.562453327700496, 'batch_acquisition_elapsed_time': 80.53410195931792})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7884, 'nll': 0.6792385602920799}, 'chosen_targets': [7, 8, 3, 8, 8, 8, 4, 9, 9, 4], 'chosen_samples': [8629, 40787, 9380, 27891, 50410, 26947, 53564, 41645, 47244, 21223], 'chosen_samples_score': [0.002623399719595909, 0.002249991986900568, 0.0021116365678608418, 0.002479082439094782, 0.0021883281879127026, 0.0024740025401115417, 0.0021869458723813295, 0.002547609154134989, 0.0024723901879042387, 0.0023863110691308975], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.570216815918684, 'batch_acquisition_elapsed_time': 76.08213321864605})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8009, 'nll': 0.6996251561538612}, 'chosen_targets': [0, 0, 0, 1, 8, 6, 5, 8, 8, 0], 'chosen_samples': [41683, 8016, 31350, 38629, 14678, 32345, 22973, 4862, 5628, 22691], 'chosen_samples_score': [0.0032615165691822767, 0.002746882615610957, 0.0028165041003376245, 0.002729794243350625, 0.0026438147760927677, 0.0030419069807976484, 0.0028737946413457394, 0.002598234685137868, 0.0026941318064928055, 0.002732579130679369], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.687887579202652, 'batch_acquisition_elapsed_time': 76.71440175548196})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8415, 'nll': 0.5616801096777944}, 'chosen_targets': [2, 9, 7, 9, 5, 3, 5, 3, 8, 5], 'chosen_samples': [3304, 23868, 35790, 24062, 25521, 42931, 59426, 17988, 37417, 31702], 'chosen_samples_score': [0.002382049337029457, 0.0023634149692952633, 0.002413039328530431, 0.0025721904821693897, 0.0027409950271248817, 0.00253263209015131, 0.002565953182056546, 0.0024113317485898733, 0.0024537642020732164, 0.0026057977229356766], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.712250519543886, 'batch_acquisition_elapsed_time': 76.22057826258242})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8159, 'nll': 0.6160517364516997}, 'chosen_targets': [1, 9, 9, 7, 1, 2, 9, 0, 1, 2], 'chosen_samples': [36551, 4350, 5130, 41700, 47777, 48502, 37457, 57882, 39152, 2201], 'chosen_samples_score': [0.002721789525821805, 0.0025175451301038265, 0.002380866790190339, 0.0023535366635769606, 0.002262621885165572, 0.0021906818728893995, 0.0023176607210189104, 0.0022323313169181347, 0.002219352638348937, 0.002268346957862377], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.833774728700519, 'batch_acquisition_elapsed_time': 75.83596360497177})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8346, 'nll': 0.5854512286621375}, 'chosen_targets': [0, 8, 9, 2, 5, 5, 5, 9, 3, 7], 'chosen_samples': [17871, 25582, 4307, 28293, 11739, 16931, 47081, 53597, 6291, 19448], 'chosen_samples_score': [0.002538623521104455, 0.0023485675919800997, 0.00229556392878294, 0.0023414690513163805, 0.0022983255330473185, 0.0023635532706975937, 0.0023390580900013447, 0.002307496266439557, 0.002316239755600691, 0.0024253814481198788], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.666401907801628, 'batch_acquisition_elapsed_time': 76.10807325318456})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8676, 'nll': 0.5096150272808263}, 'chosen_targets': [2, 8, 7, 2, 6, 2, 3, 5, 5, 9], 'chosen_samples': [650, 55218, 44367, 13922, 47486, 26157, 4257, 53309, 7833, 42438], 'chosen_samples_score': [0.0024349731393158436, 0.0024304259568452835, 0.002296110847964883, 0.0022888865787535906, 0.0022782902233302593, 0.0023845552932471037, 0.0023409631103277206, 0.002304202876985073, 0.0022482520435005426, 0.002332858042791486], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.842335531488061, 'batch_acquisition_elapsed_time': 76.38109871000051})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8748, 'nll': 0.49432049665934347}, 'chosen_targets': [5, 6, 6, 2, 2, 6, 6, 6, 6, 7], 'chosen_samples': [38608, 54316, 30139, 15748, 12254, 23317, 57463, 54490, 7102, 11689], 'chosen_samples_score': [0.0026422888040542603, 0.002514207037165761, 0.0023911884054541588, 0.002499423921108246, 0.0025039762258529663, 0.0023791464045643806, 0.002304777270182967, 0.002488722326233983, 0.002412315458059311, 0.0025501621421426535], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.720415808260441, 'batch_acquisition_elapsed_time': 76.33575117401779})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 10, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '10', '--available_sample_k', '10', '--acquisition_method', 'multibald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.5904, 'nll': 1.4516659842125874}, 'chosen_targets': [8, 2, 7, 9, 9, 3, 2, 9, 2, 4], 'chosen_samples': [54498, 19443, 36157, 14790, 34824, 874, 28944, 3083, 48356, 23435], 'chosen_samples_score': [1.0639342932484648, 1.7879807904593172, 2.079642829048501, 2.201653204142447, 2.2557348440892846, 2.2830043013322907, 2.2958263057245905, 2.299805904773266, 2.295904256499756, 2.2937718824441324], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.386684162542224, 'batch_acquisition_elapsed_time': 105.25872759521008})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6556, 'nll': 1.1891351979792015}, 'chosen_targets': [3, 6, 2, 8, 3, 2, 8, 2, 2, 3], 'chosen_samples': [17100, 41060, 46286, 28342, 37439, 10417, 27197, 24612, 12938, 46570], 'chosen_samples_score': [1.1444256571297118, 1.8439597670250831, 2.0759509675200603, 2.188172604518334, 2.246293563410295, 2.279694026735695, 2.2975630872580233, 2.3112246492765802, 2.316121300078314, 2.3143646704709324], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.4387600813061, 'batch_acquisition_elapsed_time': 105.64570078067482})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7006, 'nll': 1.0034235478207916}, 'chosen_targets': [8, 7, 0, 8, 6, 8, 5, 5, 0, 7], 'chosen_samples': [1404, 7808, 53432, 32407, 8072, 17362, 40182, 26675, 21521, 41054], 'chosen_samples_score': [0.922141050474032, 1.550918392095993, 1.8858093334424435, 2.0680757784592583, 2.1717102949066307, 2.2190381718950403, 2.2523762251706474, 2.269615945133725, 2.280586195254293, 2.2919389152980347], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.430555883795023, 'batch_acquisition_elapsed_time': 105.4295485895127})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7548, 'nll': 0.805333551246}, 'chosen_targets': [9, 6, 6, 0, 2, 4, 0, 7, 6, 4], 'chosen_samples': [14306, 41018, 31974, 46344, 53218, 51337, 8113, 23678, 19316, 16818], 'chosen_samples_score': [0.9153509072765245, 1.5092757617611872, 1.8485059565395692, 2.037473345528167, 2.144104680238854, 2.210754619119835, 2.2527789272767507, 2.2783919191051325, 2.2819502746066167, 2.291923913011974], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.800748597830534, 'batch_acquisition_elapsed_time': 106.04067195765674})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7686, 'nll': 0.7477686199264444}, 'chosen_targets': [4, 6, 3, 4, 8, 6, 2, 5, 2, 6], 'chosen_samples': [39304, 36491, 17077, 25960, 12513, 50294, 25157, 45003, 41881, 35566], 'chosen_samples_score': [1.0097288227937826, 1.6690652823601067, 1.9980221576844581, 2.1523741773106915, 2.2302967869449364, 2.2532014395154394, 2.2660124480574506, 2.2709778497990545, 2.2839487589007472, 2.2844544503279813], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.431079376488924, 'batch_acquisition_elapsed_time': 106.20165236108005})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7827, 'nll': 0.7455089917911394}, 'chosen_targets': [2, 8, 0, 4, 5, 2, 2, 4, 7, 5], 'chosen_samples': [33593, 4767, 27247, 25180, 31650, 51986, 22124, 5118, 10533, 49890], 'chosen_samples_score': [0.7606324745698662, 1.3184039510291847, 1.6642750846257548, 1.8940870502514864, 2.03047360137476, 2.1122502514033235, 2.1700534958308353, 2.2066268029603275, 2.228418944615738, 2.242784581519281], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.467041064053774, 'batch_acquisition_elapsed_time': 105.613136138767})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'multibald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[35845, 27522, 33254, 16178, 11299, 57358, 58355, 26559, 27002, 41548, 33583, 45005, 58401, 7110, 17862, 28517, 54842, 24460, 23765, 46903]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1029338, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--seed', '1029338', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'multibald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[44261, 20188, 28834, 58120, 33490, 57513, 43462, 30563, 56766, 33641, 23782, 34835, 25295, 12502, 7170, 14446, 33711, 43737, 21129, 16220]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 2, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1029338, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--seed', '1029338', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '2']
store['iterations']=[]
store['initial_samples']=[44261, 20188, 28834, 58120, 33490, 57513, 43462, 30563, 56766, 33641, 23782, 34835, 25295, 12502, 7170, 14446, 33711, 43737, 21129, 16220]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 0, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1029338, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': None, 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--seed', '1029338', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '0']
store['iterations']=[]
store['initial_samples']=[44261, 20188, 28834, 58120, 33490, 57513, 43462, 30563, 56766, 33641, 23782, 34835, 25295, 12502, 7170, 14446, 33711, 43737, 21129, 16220]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6396, 'nll': 1.194176856016807}, 'chosen_targets': [8, 2, 6, 5, 2, 2, 3, 7, 5, 4], 'chosen_samples': [41544, 7782, 19298, 33903, 53029, 31956, 7915, 46265, 22015, 46643], 'chosen_samples_score': [1.1400675774135518, 2.07962453354504, 2.8152081959214073, 3.376196015821315, 3.782115332991756, 4.0498150178239705, 4.241070159808855, 4.3677143272206145, 4.447742694577764, 4.4967500270533876], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.173310793936253, 'batch_acquisition_elapsed_time': 430.21557075716555})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7073, 'nll': 0.9293722087596153}, 'chosen_targets': [3, 5, 5, 2, 7, 9, 7, 5, 0, 5], 'chosen_samples': [50317, 8676, 22380, 11581, 23140, 49740, 22527, 27317, 41999, 57327], 'chosen_samples_score': [1.0507965239359458, 1.9525406809605172, 2.6955874908981134, 3.2673865242139755, 3.6880539484933625, 3.9874145314885308, 4.180549971426103, 4.318278612135028, 4.418529767172272, 4.489261472455308], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.73362847417593, 'batch_acquisition_elapsed_time': 434.02874651551247})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6396, 'nll': 1.194176856016807}, 'chosen_targets': [9, 9, 8, 9, 0, 9, 7, 9, 9, 9], 'chosen_samples': [22216, 36194, 29381, 13191, 16540, 28396, 15213, 34176, 48244, 41953], 'chosen_samples_score': [0.0021526538766920567, 0.0018571928376331925, 0.00167604919988662, 0.0018482576124370098, 0.0018168254755437374, 0.001829601009376347, 0.0019542400259524584, 0.00174434925429523, 0.0016983711393550038, 0.0017635945696383715], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.888979258947074, 'batch_acquisition_elapsed_time': 502.36963264108635})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6902, 'nll': 0.8640055106234029}, 'chosen_targets': [8, 5, 8, 0, 5, 9, 6, 3, 5, 7], 'chosen_samples': [1239, 41509, 23190, 34708, 8459, 47755, 17728, 31831, 37313, 5000], 'chosen_samples_score': [0.8648586055874861, 1.6601446508395186, 2.3469677308915036, 2.91626572768647, 3.3596237391149693, 3.7047537453100876, 3.9485069666933494, 4.12270546548917, 4.256413789016997, 4.344807591342455], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.7343490198254585, 'batch_acquisition_elapsed_time': 433.9397215079516})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7065, 'nll': 0.9632443454745989}, 'chosen_targets': [2, 2, 5, 2, 6, 2, 8, 6, 2, 6], 'chosen_samples': [10411, 18850, 27668, 24206, 22520, 1096, 22965, 26227, 52001, 4841], 'chosen_samples_score': [0.0015750278253108263, 0.0012360201217234135, 0.001331978477537632, 0.0013007986126467586, 0.0013962913071736693, 0.0013424045173451304, 0.0012192439753562212, 0.0014290614053606987, 0.0012129317037761211, 0.0013112124288454652], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.480683416128159, 'batch_acquisition_elapsed_time': 487.96143956598826})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.775, 'nll': 0.7496850989127382}, 'chosen_targets': [1, 4, 0, 2, 1, 0, 2, 7, 9, 3], 'chosen_samples': [50632, 3739, 5052, 47132, 23059, 10265, 38409, 47613, 826, 12117], 'chosen_samples_score': [0.8444861983065212, 1.615147706376498, 2.26987575751586, 2.8052562016209968, 3.249394142067969, 3.601927357320216, 3.866785991230632, 4.050612675210887, 4.192831824354553, 4.301678857370583], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.520718060433865, 'batch_acquisition_elapsed_time': 433.94891488552094})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7514, 'nll': 0.7835265224141073}, 'chosen_targets': [3, 1, 4, 5, 1, 9, 1, 8, 1, 1], 'chosen_samples': [24278, 11975, 33125, 28657, 20987, 59496, 7671, 10187, 37869, 44227], 'chosen_samples_score': [0.0014968619216233492, 0.0015493894461542368, 0.0010362158063799143, 0.0010293585946783423, 0.0011032167822122574, 0.0011687767691910267, 0.0012574298307299614, 0.0011724029900506139, 0.001050424063578248, 0.0013883122010156512], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.251187695888802, 'batch_acquisition_elapsed_time': 489.2443753089756})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7747, 'nll': 0.8029562943780877}, 'chosen_targets': [5, 2, 5, 2, 7, 2, 2, 5, 6, 3], 'chosen_samples': [16692, 18003, 54461, 47787, 9433, 27915, 53026, 7833, 7867, 35643], 'chosen_samples_score': [0.816830337654542, 1.5952241281087618, 2.211124876438487, 2.7449184920634577, 3.1738005436035515, 3.4976855443882258, 3.755906865805506, 3.9488802926690987, 4.108978284386146, 4.23691202981626], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.928576961159706, 'batch_acquisition_elapsed_time': 433.4994368609041})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7426, 'nll': 0.7990746550548983}, 'chosen_targets': [3, 8, 3, 8, 5, 3, 3, 3, 5, 3], 'chosen_samples': [16177, 55272, 10349, 33668, 44852, 18626, 36180, 46098, 22393, 10278], 'chosen_samples_score': [0.001564721460454166, 0.0014519182732328773, 0.0015691344160586596, 0.0013963712844997644, 0.0012054097605869174, 0.0014614507090300322, 0.0012947570066899061, 0.0014331118436530232, 0.0012310220627114177, 0.0013578885700553656], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.447255562059581, 'batch_acquisition_elapsed_time': 483.22846709098667})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7739, 'nll': 0.7646792138813072}, 'chosen_targets': [2, 9, 0, 6, 9, 2, 9, 9, 4, 3], 'chosen_samples': [54973, 6149, 58560, 48006, 39480, 31794, 37048, 12127, 56440, 47643], 'chosen_samples_score': [0.7514068039299061, 1.406115618613512, 2.0169354244863404, 2.526006889695573, 2.956635955657937, 3.3116744829981695, 3.6018080392419014, 3.83629118683558, 4.014117837817373, 4.148523929420806], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.1388759184628725, 'batch_acquisition_elapsed_time': 433.57979291677475})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8208, 'nll': 0.6187694529980183}, 'chosen_targets': [4, 4, 4, 4, 4, 4, 4, 4, 4, 4], 'chosen_samples': [54745, 32340, 46731, 54175, 14187, 36952, 46757, 35822, 10870, 33204], 'chosen_samples_score': [0.0015218262560665607, 0.0014359450433403254, 0.0013417041627690196, 0.0013050527777522802, 0.001268142368644476, 0.001617117552086711, 0.0014108206378296018, 0.0013486961834132671, 0.0014292936539277434, 0.0014705510111525655], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.534700311021879, 'batch_acquisition_elapsed_time': 485.208363260841})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8012, 'nll': 0.791784968855333}, 'chosen_targets': [0, 3, 5, 0, 4, 0, 5, 8, 3, 2], 'chosen_samples': [40312, 9180, 43648, 36783, 42198, 12748, 19942, 39266, 51373, 22269], 'chosen_samples_score': [0.6476988427884895, 1.2655185336555128, 1.826631265741078, 2.322232796586566, 2.7560349869622494, 3.1228525039342783, 3.401685631516255, 3.6262679533911264, 3.8181109791799397, 3.965957210629405], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.938306927680969, 'batch_acquisition_elapsed_time': 433.7097725253552})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8488, 'nll': 0.5793446703534191}, 'chosen_targets': [8, 8, 5, 8, 8, 4, 6, 6, 5, 6], 'chosen_samples': [36825, 11322, 49203, 17765, 45223, 17057, 9961, 14632, 13829, 43264], 'chosen_samples_score': [0.0012395972153171897, 0.0010669452603906393, 0.0009807522874325514, 0.001081645954400301, 0.0011107843602076173, 0.0010643668938428164, 0.0010476583847776055, 0.0010439084144309163, 0.0009949165396392345, 0.001086382195353508], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.287610915955156, 'batch_acquisition_elapsed_time': 485.73958525201306})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8313, 'nll': 0.6964301893443837}, 'chosen_targets': [5, 8, 3, 4, 5, 3, 5, 6, 2, 3], 'chosen_samples': [24426, 4767, 28199, 27514, 47741, 46549, 51764, 36810, 12196, 27930], 'chosen_samples_score': [0.6205194010789732, 1.1900419939773097, 1.7103158886533087, 2.1861551127640686, 2.603449926044264, 2.961913658448748, 3.254885319771345, 3.503190264634533, 3.709910734007215, 3.861572977038744], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.581759598106146, 'batch_acquisition_elapsed_time': 433.34942774660885})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8392, 'nll': 0.5920310220937824}, 'chosen_targets': [9, 9, 6, 3, 9, 5, 9, 8, 8, 2], 'chosen_samples': [7873, 41084, 18608, 27078, 8220, 35164, 57776, 30418, 47753, 27641], 'chosen_samples_score': [0.0013481394853442907, 0.0013460249174386263, 0.0011537730460986495, 0.0012473196256905794, 0.0012200390920042992, 0.0011315317824482918, 0.0011754941660910845, 0.0010611072648316622, 0.0011613761307671666, 0.0010685903253033757], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.471574802882969, 'batch_acquisition_elapsed_time': 486.30630254908465})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8137, 'nll': 0.7882406044250789}, 'chosen_targets': [3, 2, 4, 9, 7, 4, 5, 5, 5, 3], 'chosen_samples': [46570, 37403, 53912, 50908, 17163, 32301, 19089, 21385, 58471, 54481], 'chosen_samples_score': [0.5303247356330871, 1.01317733752382, 1.4454107360024997, 1.855073830255396, 2.2298917291284424, 2.561125812436649, 2.843276449612312, 3.0866465908420118, 3.3058793421823562, 3.4931909676020787], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.877753283828497, 'batch_acquisition_elapsed_time': 433.2406700346619})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1029338, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': [38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329], 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.multibald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--seed', '1029338', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'multibald', '--gpu', '1']
store['iterations']=[]
store['initial_samples']=[38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 0, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 1, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1029338, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': [38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329], 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--seed', '1029338', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '0']
store['iterations']=[]
store['initial_samples']=[38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329]
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6548, 'nll': 1.2413957458983664}, 'chosen_targets': [5, 4, 0, 8, 8, 2, 7, 3, 7, 4], 'chosen_samples': [51822, 39963, 18324, 32073, 49660, 40095, 59468, 1529, 20206, 46333], 'chosen_samples_score': [1.1282087649488712, 2.090220130562621, 2.8557853140422513, 3.4332385411884685, 3.8409167114725262, 4.111229591394846, 4.297207882867125, 4.414652721709042, 4.486956793068209, 4.538288350888693], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.044068226590753, 'batch_acquisition_elapsed_time': 434.0415285844356})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6548, 'nll': 1.2413957458983664}, 'chosen_targets': [2, 3, 9, 9, 9, 7, 3, 9, 9, 9], 'chosen_samples': [28453, 953, 52763, 55778, 20084, 45114, 11039, 8484, 24594, 26518], 'chosen_samples_score': [0.0017292344709858298, 0.0017745422665029764, 0.0015789410099387169, 0.0015457246918231249, 0.0016495748423039913, 0.0015170268015936017, 0.0014602625742554665, 0.001627523684874177, 0.0016458298778161407, 0.0016583033138886094], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.658337253844365, 'batch_acquisition_elapsed_time': 493.71051995595917})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7217, 'nll': 0.8791988878431328}, 'chosen_targets': [2, 5, 7, 2, 2, 2, 5, 7, 0, 2], 'chosen_samples': [14267, 59400, 57479, 56664, 20071, 19154, 35628, 12067, 9687, 41900], 'chosen_samples_score': [1.1016978689613595, 1.9717310980953395, 2.7051240103928778, 3.2427024949233876, 3.6558302278444352, 3.9616017722025383, 4.152771242080152, 4.293879029222555, 4.396645387231829, 4.463455385572991], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.872001368552446, 'batch_acquisition_elapsed_time': 434.1726259998977})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.6951, 'nll': 1.0177771741558228}, 'chosen_targets': [5, 8, 4, 0, 4, 0, 0, 9, 4, 0], 'chosen_samples': [39700, 56891, 14538, 25024, 20932, 21985, 23389, 26748, 40168, 31683], 'chosen_samples_score': [0.0016232505440711975, 0.0013914837036281824, 0.001318178721703589, 0.001525276224128902, 0.0013574985787272453, 0.0013581031234934926, 0.00142889772541821, 0.0013349776854738593, 0.001330230850726366, 0.0014622085727751255], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.707407627021894, 'batch_acquisition_elapsed_time': 485.2131857930217})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7418, 'nll': 0.8164000244772008}, 'chosen_targets': [3, 2, 6, 5, 5, 8, 7, 6, 3, 7], 'chosen_samples': [36427, 58398, 8417, 4617, 28477, 19931, 41324, 14072, 8055, 54106], 'chosen_samples_score': [1.0370225371646327, 1.8705119641358725, 2.5748435329975403, 3.158281025377742, 3.584507574986456, 3.8999678302959513, 4.110654362739444, 4.256314518012591, 4.3606135298036355, 4.433906541814347], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.707408579066396, 'batch_acquisition_elapsed_time': 433.8583081122488})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7036, 'nll': 0.9188195027901882}, 'chosen_targets': [5, 3, 8, 6, 9, 5, 5, 6, 5, 6], 'chosen_samples': [22020, 12024, 19911, 15687, 11194, 11596, 28271, 57254, 25720, 13087], 'chosen_samples_score': [0.0014512924244627357, 0.0014748801477253437, 0.0013825256610289216, 0.0013913268921896815, 0.0013808916555717587, 0.001577372313477099, 0.0013635825598612428, 0.0012577445013448596, 0.001445842906832695, 0.0014239847660064697], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.632424221141264, 'batch_acquisition_elapsed_time': 486.42614199314266})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.789, 'nll': 0.7185630004106545}, 'chosen_targets': [5, 2, 4, 8, 3, 0, 5, 3, 9, 3], 'chosen_samples': [10995, 3791, 46530, 47322, 17491, 10265, 37313, 27274, 34176, 24868], 'chosen_samples_score': [0.9751863777765739, 1.8341291471846064, 2.5749007098440657, 3.121264484034469, 3.5352699274729407, 3.862006957017281, 4.081651732177816, 4.2411484463973, 4.35190206696085, 4.431517786833403], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.742624573409557, 'batch_acquisition_elapsed_time': 433.7894105706364})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7579, 'nll': 0.725368052634826}, 'chosen_targets': [2, 2, 7, 2, 2, 2, 2, 1, 2, 1], 'chosen_samples': [31823, 35758, 27837, 42596, 25526, 38403, 5156, 43539, 22056, 47019], 'chosen_samples_score': [0.0016255329828709364, 0.001563561731018126, 0.001362697221338749, 0.0012367463205009699, 0.0014491570182144642, 0.0014480181271210313, 0.0015190736157819629, 0.001474758260883391, 0.001622213632799685, 0.0017604947788640857], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.836620172020048, 'batch_acquisition_elapsed_time': 475.1103458891157})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.8309, 'nll': 0.5961328348861851}, 'chosen_targets': [0, 4, 3, 0, 1, 9, 4, 2, 1, 0], 'chosen_samples': [32693, 10768, 23877, 11133, 30214, 6238, 12935, 3676, 552, 49354], 'chosen_samples_score': [0.8807169497202293, 1.6242383054893728, 2.27813496094723, 2.835733931543944, 3.2818850993792985, 3.6322067255112627, 3.888946703806094, 4.069796380476266, 4.214524666473178, 4.3238009408910365], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 4.832436256110668, 'batch_acquisition_elapsed_time': 433.789297638461})
store['iterations'].append({'num_epochs': 1, 'test_metrics': {'accuracy': 0.7944, 'nll': 0.6560186490398303}, 'chosen_targets': [9, 7, 9, 8, 8, 1, 9, 7, 5, 1], 'chosen_samples': [4122, 23968, 4523, 52944, 25418, 8464, 28530, 43821, 51234, 49002], 'chosen_samples_score': [0.001208396744914353, 0.0010050839046016335, 0.0011531820055097342, 0.0010614772327244282, 0.0012015810934826732, 0.001100392546504736, 0.0009687871788628399, 0.001222782302647829, 0.0011625889455899596, 0.001136060687713325], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.583342328900471, 'batch_acquisition_elapsed_time': 439.5186536370311})
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 0, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 30, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1029338, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': [38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329], 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--seed', '1029338', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '0', '--epochs', '30']
store['iterations']=[]
store['initial_samples']=[38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 0, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 30, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1029338, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': [38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329], 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--seed', '1029338', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '0', '--epochs', '30']
store['iterations']=[]
store['initial_samples']=[38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 0, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 30, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1029338, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': [38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329], 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--seed', '1029338', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '0', '--epochs', '30']
store['iterations']=[]
store['initial_samples']=[38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329]
store = {}
store['args']={'experiment_task_id': None, 'experiments_laaos': None, 'experiment_description': 'Trying stuff..', 'batch_size': 64, 'gpu': 1, 'scoring_batch_size': 256, 'test_batch_size': 256, 'validation_set_size': 128, 'early_stopping_patience': 1, 'epochs': 30, 'epoch_samples': 5056, 'num_inference_samples': 100, 'available_sample_k': 10, 'target_num_acquired_samples': 800, 'target_accuracy': 0.98, 'no_cuda': False, 'quickquick': False, 'seed': 1038804, 'log_interval': 10, 'initial_samples_per_class': 2, 'initial_samples': [38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329], 'type': 'AcquisitionFunction.bald', 'acquisition_method': 'AcquisitionMethod.hsicbald', 'dataset': 'DatasetEnum.mnist', 'min_remaining_percentage': 100, 'min_candidates_per_acquired_item': 20, 'initial_percentage': 100, 'reduce_percentage': 0, 'balanced_validation_set': False, 'balanced_test_set': False, 'hsic_compute_batch_size': 1000, 'hsic_kernel_name': 'mixrq'}
store['cmdline']=['src/run_experiment.py', '--seed', '1038804', '--num_inference_samples', '100', '--available_sample_k', '10', '--acquisition_method', 'hsicbald', '--gpu', '1', '--epochs', '30']
store['iterations']=[]
store['initial_samples']=[38043, 40091, 17418, 2094, 39879, 3133, 5011, 40683, 54379, 24287, 9849, 59305, 39508, 39356, 8758, 52579, 13655, 7636, 21562, 41329]
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.6518, 'nll': 1.3333464629100498}, 'chosen_targets': [0, 0, 0, 6, 0, 2, 0, 0, 0, 0], 'chosen_samples': [57912, 53380, 12184, 15862, 49953, 7839, 47696, 1363, 25152, 57202], 'chosen_samples_score': [0.002023454988375306, 0.0014178180135786533, 0.0018306653946638107, 0.0015624237712472677, 0.0015942315803840756, 0.0014074884820729494, 0.0015077005373314023, 0.0015242142835631967, 0.0012785941362380981, 0.0013421623734757304], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 13.270377374719828, 'batch_acquisition_elapsed_time': 514.309993728064})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.6587, 'nll': 1.1844490287276792}, 'chosen_targets': [2, 0, 7, 0, 8, 8, 3, 9, 5, 8], 'chosen_samples': [45158, 30790, 14288, 11675, 30383, 48739, 11958, 8165, 20854, 28023], 'chosen_samples_score': [0.0018990610260516405, 0.0018897394184023142, 0.001750605064444244, 0.00175282743293792, 0.0017794868908822536, 0.0017871280433610082, 0.0018332824110984802, 0.0016458427999168634, 0.0017065793508663774, 0.0015835976228117943], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.394717428833246, 'batch_acquisition_elapsed_time': 524.9151627919637})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.6264, 'nll': 1.3234163251080844}, 'chosen_targets': [2, 1, 9, 2, 1, 2, 9, 1, 2, 9], 'chosen_samples': [16018, 22859, 41302, 57752, 13413, 39627, 21987, 8373, 7601, 21869], 'chosen_samples_score': [0.00181741698179394, 0.0017664256738498807, 0.0016288759652525187, 0.001609975122846663, 0.0018367202719673514, 0.001663639792241156, 0.0017176473047584295, 0.0016558024799451232, 0.0016873489366844296, 0.001435401733033359], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.319579608272761, 'batch_acquisition_elapsed_time': 522.0594564159401})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.779, 'nll': 0.7179044495837693}, 'chosen_targets': [5, 5, 8, 5, 5, 8, 1, 4, 0, 8], 'chosen_samples': [16737, 10831, 41046, 29329, 46667, 30318, 31122, 18487, 22023, 33636], 'chosen_samples_score': [0.0012419248232617974, 0.0011148639023303986, 0.0010219673858955503, 0.00115601543802768, 0.0011344701051712036, 0.001122629619203508, 0.0010228231549263, 0.001181144267320633, 0.0011162161827087402, 0.00101299153175205], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.273180348332971, 'batch_acquisition_elapsed_time': 517.7267537727021})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.753, 'nll': 0.7850847424529138}, 'chosen_targets': [2, 8, 8, 6, 5, 5, 4, 4, 4, 5], 'chosen_samples': [27150, 25968, 14697, 19986, 56982, 33288, 55983, 15359, 25175, 26675], 'chosen_samples_score': [0.0013800433371216059, 0.00113005586899817, 0.0009708449942991138, 0.0012233903398737311, 0.0012599946931004524, 0.001199034508317709, 0.0012034878600388765, 0.0011695901630446315, 0.0011421595700085163, 0.001214294577948749], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.500390944071114, 'batch_acquisition_elapsed_time': 536.1599848158658})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.7635, 'nll': 0.8347232094416042}, 'chosen_targets': [2, 9, 3, 3, 2, 2, 9, 2, 2, 2], 'chosen_samples': [42693, 4222, 44848, 58812, 22076, 9212, 35358, 35051, 52643, 25991], 'chosen_samples_score': [0.0015063609462231398, 0.001170064671896398, 0.0012231202563270926, 0.0013488768599927425, 0.0013422326883301139, 0.0012727838475257158, 0.001258131698705256, 0.0011894818162545562, 0.001328323152847588, 0.001275708433240652], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.13142611598596, 'batch_acquisition_elapsed_time': 538.5386456530541})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.8127, 'nll': 0.6432024389936015}, 'chosen_targets': [4, 9, 3, 6, 0, 3, 9, 4, 6, 9], 'chosen_samples': [44842, 57259, 22715, 4231, 21203, 811, 51552, 56886, 16889, 23998], 'chosen_samples_score': [0.0013023847714066505, 0.0012666448019444942, 0.0012574918800964952, 0.0011731897247955203, 0.0011215365957468748, 0.0011800555512309074, 0.001190821174532175, 0.0012180159101262689, 0.0010807868093252182, 0.0011859503574669361], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.4217923898249865, 'batch_acquisition_elapsed_time': 522.2750746239908})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.8269, 'nll': 0.6001066625955468}, 'chosen_targets': [1, 9, 4, 9, 9, 3, 9, 3, 3, 7], 'chosen_samples': [39281, 11202, 51049, 32417, 49549, 58288, 39377, 20426, 23851, 47511], 'chosen_samples_score': [0.0013060453347861767, 0.001230172230862081, 0.0011526920134201646, 0.0011594400275498629, 0.0013610358582809567, 0.0011496718507260084, 0.0010320653673261404, 0.0011551867937669158, 0.0011030081659555435, 0.0011830736184492707], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.751725510228425, 'batch_acquisition_elapsed_time': 520.4107756689191})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.8646, 'nll': 0.42970169377783096}, 'chosen_targets': [4, 4, 4, 4, 6, 4, 4, 5, 9, 3], 'chosen_samples': [45153, 13252, 18999, 23648, 35828, 564, 52424, 22180, 33642, 26694], 'chosen_samples_score': [0.0011634696274995804, 0.0008311198907904327, 0.000735491281375289, 0.0008633044199086726, 0.0007971228915266693, 0.0008769000414758921, 0.0008309400291182101, 0.00082997209392488, 0.0007203121203929186, 0.0007055202731862664], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.73459851089865, 'batch_acquisition_elapsed_time': 517.6690489058383})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.8716, 'nll': 0.42130590867354467}, 'chosen_targets': [2, 5, 5, 2, 2, 2, 5, 2, 2, 2], 'chosen_samples': [43486, 7738, 12650, 27834, 43632, 47650, 30697, 10825, 22341, 50290], 'chosen_samples_score': [0.001169468741863966, 0.0009043753379955888, 0.0008023793343454599, 0.0009454218670725822, 0.000799663073848933, 0.0009552155388519168, 0.0008739785407669842, 0.0008624850888736546, 0.0008531493367627263, 0.0007779420120641589], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.617852461989969, 'batch_acquisition_elapsed_time': 516.7419306538068})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.8905, 'nll': 0.3920328630027786}, 'chosen_targets': [7, 3, 9, 5, 8, 5, 3, 3, 3, 7], 'chosen_samples': [12526, 46424, 43416, 29077, 40016, 41000, 38145, 51038, 45764, 3618], 'chosen_samples_score': [0.0009601495694369078, 0.0008397413766942918, 0.0006447475752793252, 0.00065797712886706, 0.000646504107862711, 0.0006229366408661008, 0.0006131312111392617, 0.0006112017435953021, 0.0006747875595465302, 0.0006763744750060141], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.780665391124785, 'batch_acquisition_elapsed_time': 519.8662144821137})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9061, 'nll': 0.3489701591666032}, 'chosen_targets': [5, 2, 8, 3, 9, 5, 5, 5, 9, 5], 'chosen_samples': [32415, 15748, 55683, 500, 7492, 7498, 11721, 38553, 31919, 6929], 'chosen_samples_score': [0.0009085119236260653, 0.0007976723136380315, 0.0006765860598534346, 0.0006676532211713493, 0.0006066231871955097, 0.000706344551872462, 0.0007487523253075778, 0.0006906974595040083, 0.0007036353345029056, 0.0006919471779838204], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.681783345993608, 'batch_acquisition_elapsed_time': 519.239840102382})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.8537, 'nll': 0.6280238265634901}, 'chosen_targets': [0, 5, 3, 3, 5, 9, 7, 7, 0, 9], 'chosen_samples': [34847, 54401, 49981, 56621, 20125, 34615, 24505, 9665, 9451, 42106], 'chosen_samples_score': [0.0013123912503942847, 0.0011890880996361375, 0.0012527622748166323, 0.0012366040609776974, 0.0012506740167737007, 0.0011038040975108743, 0.0010841087205335498, 0.001045526354573667, 0.001066806842572987, 0.001059045665897429], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.389582208823413, 'batch_acquisition_elapsed_time': 518.4262522943318})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9186, 'nll': 0.3026870825137281}, 'chosen_targets': [4, 1, 6, 6, 6, 6, 7, 3, 8, 3], 'chosen_samples': [38567, 19440, 2662, 910, 30563, 34840, 24662, 43747, 20905, 27960], 'chosen_samples_score': [0.000642405531834811, 0.0005496185040101409, 0.0005687222583219409, 0.0005076440866105258, 0.0005344470264390111, 0.0004739455762319267, 0.0004584360867738724, 0.0004780998860951513, 0.0005586539045907557, 0.0005010308232158422], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.169720420148224, 'batch_acquisition_elapsed_time': 515.1011167359538})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.924, 'nll': 0.32479390796003366}, 'chosen_targets': [1, 3, 6, 8, 1, 8, 1, 1, 1, 1], 'chosen_samples': [58286, 33722, 48006, 14648, 24625, 18373, 27792, 28837, 33243, 12236], 'chosen_samples_score': [0.0008995482930913568, 0.000695534807164222, 0.000665058905724436, 0.0005676051368936896, 0.0006034913822077215, 0.0006467225030064583, 0.0005492251366376877, 0.0006676563061773777, 0.0006848680786788464, 0.0006161301280371845], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.387644494418055, 'batch_acquisition_elapsed_time': 512.5963213867508})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.8893, 'nll': 0.53260702440435}, 'chosen_targets': [8, 9, 9, 9, 8, 9, 4, 4, 4, 1], 'chosen_samples': [8867, 56279, 45605, 11617, 30407, 28422, 30908, 25759, 46623, 56737], 'chosen_samples_score': [0.001303621451370418, 0.0010839117458090186, 0.001092886901460588, 0.0010970492148771882, 0.0010054430458694696, 0.0009668206330388784, 0.0010331202065572143, 0.0010418975725769997, 0.0010164672276005149, 0.001048326026648283], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.725346397142857, 'batch_acquisition_elapsed_time': 518.9164799428545})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.8781, 'nll': 0.5615984686949945}, 'chosen_targets': [4, 7, 1, 4, 2, 8, 2, 6, 2, 3], 'chosen_samples': [42263, 50743, 18768, 7984, 42280, 33959, 14508, 9526, 161, 11075], 'chosen_samples_score': [0.0013181207468733191, 0.0011934320209547877, 0.0012858520494773984, 0.001193343778140843, 0.001190100098028779, 0.0011488134041428566, 0.0011856643250212073, 0.0010451101697981358, 0.0011386247351765633, 0.0010590972378849983], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.703001893591136, 'batch_acquisition_elapsed_time': 515.9418081222102})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.9019, 'nll': 0.525600133245112}, 'chosen_targets': [2, 8, 2, 3, 4, 7, 9, 0, 8, 0], 'chosen_samples': [48767, 50040, 47246, 11619, 15207, 26441, 25640, 33536, 56872, 44063], 'chosen_samples_score': [0.0013861815677955747, 0.0012971973046660423, 0.0011685407953336835, 0.001214490388520062, 0.001094785169698298, 0.0012253972236067057, 0.0012251449516043067, 0.0011843995889648795, 0.0011555274249985814, 0.001153543940745294], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.432995120994747, 'batch_acquisition_elapsed_time': 511.85962749412283})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9325, 'nll': 0.26090149198976287}, 'chosen_targets': [4, 4, 0, 7, 8, 2, 6, 4, 3, 8], 'chosen_samples': [22105, 48730, 17048, 5650, 47747, 47012, 23179, 53912, 20606, 59303], 'chosen_samples_score': [0.0007178056985139847, 0.000562245084438473, 0.0005683909403160214, 0.0005088481702841818, 0.00042343189124949276, 0.000509115809109062, 0.00048740184865891933, 0.0004063746891915798, 0.00042420506360940635, 0.0004335832200013101], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.694126538932323, 'batch_acquisition_elapsed_time': 518.2170686870813})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.902, 'nll': 0.5043715418332803}, 'chosen_targets': [8, 7, 3, 8, 1, 8, 7, 8, 7, 7], 'chosen_samples': [5050, 50382, 44596, 41622, 59382, 38596, 168, 47615, 50648, 29144], 'chosen_samples_score': [0.0011801018845289946, 0.0011202325113117695, 0.000978752039372921, 0.001067163422703743, 0.0010218109237030149, 0.0008824403048492968, 0.0011121138231828809, 0.0008852702449075878, 0.0010182908736169338, 0.0009513540426269174], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.936362626031041, 'batch_acquisition_elapsed_time': 518.0064125726931})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9398, 'nll': 0.281397216674382}, 'chosen_targets': [7, 9, 8, 4, 5, 4, 0, 7, 7, 5], 'chosen_samples': [14598, 8468, 10710, 8890, 19888, 20169, 55721, 36818, 51162, 45894], 'chosen_samples_score': [0.0008099523838609457, 0.0007102001109160483, 0.0005928582395426929, 0.0005871072062291205, 0.0005812168819829822, 0.0005724814254790545, 0.0005896101938560605, 0.000532334903255105, 0.0004899568157270551, 0.0005698201130144298], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.677824794314802, 'batch_acquisition_elapsed_time': 513.2686850973405})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9388, 'nll': 0.2769993003599685}, 'chosen_targets': [9, 2, 7, 7, 7, 3, 4, 6, 8, 1], 'chosen_samples': [37538, 26718, 41310, 7331, 37064, 44684, 14972, 14473, 33338, 11292], 'chosen_samples_score': [0.000892207957804203, 0.0007557260105386376, 0.0007485012756660581, 0.0006308858282864094, 0.0006505736382678151, 0.0006944522610865533, 0.000639360339846462, 0.0005649667582474649, 0.0005813781754113734, 0.0006257208297029138], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.79868541797623, 'batch_acquisition_elapsed_time': 515.1002880316228})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9388, 'nll': 0.29008942325455694}, 'chosen_targets': [5, 2, 8, 4, 5, 5, 2, 5, 8, 6], 'chosen_samples': [32372, 31454, 3066, 30422, 53567, 39958, 56614, 2571, 31103, 16070], 'chosen_samples_score': [0.000900273269508034, 0.0007882998324930668, 0.0005451174220070243, 0.0006062404136173427, 0.0006573259015567601, 0.0006554609281010926, 0.0006115584983490407, 0.0005827255663461983, 0.0006191465654410422, 0.0006174679729156196], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.107899280730635, 'batch_acquisition_elapsed_time': 520.6091531529091})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9497, 'nll': 0.22969865192750435}, 'chosen_targets': [5, 3, 4, 3, 5, 2, 8, 8, 8, 8], 'chosen_samples': [38678, 22989, 1854, 8771, 33954, 6466, 14665, 11398, 52237, 7814], 'chosen_samples_score': [0.0008083825814537704, 0.0006851100479252636, 0.0006115961004979908, 0.0005603329627774656, 0.0005521920975297689, 0.0005109295016154647, 0.0005528834881260991, 0.0006090568494983017, 0.0005020354874432087, 0.0005379635258577764], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.45517449406907, 'batch_acquisition_elapsed_time': 519.2502938020043})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9483, 'nll': 0.27191608323385613}, 'chosen_targets': [0, 0, 2, 9, 8, 4, 0, 6, 6, 2], 'chosen_samples': [1930, 56662, 49475, 41295, 17112, 37988, 15142, 14604, 38185, 15887], 'chosen_samples_score': [0.0007987919962033629, 0.0007024151273071766, 0.0006771850166842341, 0.0006605331436730921, 0.0006593135185539722, 0.0006611471762880683, 0.0006650970899499953, 0.0006510162493214011, 0.000631562143098563, 0.000656922347843647], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.160341551993042, 'batch_acquisition_elapsed_time': 516.8872241382487})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9457, 'nll': 0.29342643918808553}, 'chosen_targets': [9, 4, 1, 5, 3, 3, 3, 4, 8, 7], 'chosen_samples': [41375, 27346, 24, 57211, 13478, 52022, 28371, 21232, 6816, 41054], 'chosen_samples_score': [0.0009372305939905345, 0.0008356044418178499, 0.0007157557411119342, 0.0006770152249373496, 0.0006695388001389802, 0.0007099778740666807, 0.0006471632514148951, 0.000705466081853956, 0.0006622829241678119, 0.0006974943680688739], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.045834944117814, 'batch_acquisition_elapsed_time': 527.3805682687089})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9509, 'nll': 0.2412090752674942}, 'chosen_targets': [9, 4, 7, 2, 4, 2, 3, 7, 3, 7], 'chosen_samples': [46287, 57076, 52089, 5306, 29788, 41438, 49985, 31558, 20430, 4458], 'chosen_samples_score': [0.0007764508482068777, 0.0006555975996889174, 0.0005536697572097182, 0.000583561253733933, 0.0005897175287827849, 0.0005662121111527085, 0.00048023482668213546, 0.0004949540598317981, 0.0005615889676846564, 0.0006126136868260801], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.737064969260246, 'batch_acquisition_elapsed_time': 515.8584004058503})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9532, 'nll': 0.23441736657816692}, 'chosen_targets': [9, 1, 5, 1, 1, 9, 9, 2, 9, 4], 'chosen_samples': [33606, 16722, 49527, 8772, 29347, 24006, 28473, 14113, 54323, 29538], 'chosen_samples_score': [0.0007679411210119724, 0.0005635312991216779, 0.00046392044168896973, 0.00046239400398917496, 0.0005887439474463463, 0.0005384646356105804, 0.0005604455363936722, 0.00046279633534140885, 0.00043543247738853097, 0.0004965205444023013], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.485938230995089, 'batch_acquisition_elapsed_time': 519.0207813903689})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9428, 'nll': 0.3232256036113345}, 'chosen_targets': [0, 7, 3, 1, 8, 1, 1, 6, 1, 9], 'chosen_samples': [35905, 7438, 12702, 55310, 38397, 17262, 36822, 3474, 24970, 8586], 'chosen_samples_score': [0.0009387730387970805, 0.0008319819462485611, 0.0008523897267878056, 0.0007589636370539665, 0.0007642299751751125, 0.0007104314281605184, 0.0007619542302563787, 0.0007412654813379049, 0.0006955434801056981, 0.0007783255423419178], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.9666554420255125, 'batch_acquisition_elapsed_time': 516.3487693089992})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9532, 'nll': 0.2256949802067861}, 'chosen_targets': [9, 0, 8, 4, 3, 9, 7, 8, 6, 7], 'chosen_samples': [56271, 31778, 54178, 26704, 13376, 33212, 10544, 43121, 57954, 25748], 'chosen_samples_score': [0.0006271802121773362, 0.0005604204488918185, 0.0004934272728860378, 0.00044846831588074565, 0.000424240599386394, 0.0005163774476386607, 0.0004591181641444564, 0.0004123423423152417, 0.0004941854858770967, 0.0004850768600590527], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.354985694866627, 'batch_acquisition_elapsed_time': 523.761824216228})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9531, 'nll': 0.3162984940776814}, 'chosen_targets': [7, 5, 5, 2, 8, 4, 6, 0, 8, 3], 'chosen_samples': [2381, 17914, 55886, 49070, 20966, 22034, 8940, 18572, 23400, 3314], 'chosen_samples_score': [0.0008970358758233488, 0.000842940469738096, 0.0008042119443416595, 0.0006850752979516983, 0.000719550356734544, 0.000672878697514534, 0.0007451303536072373, 0.0007872296846471727, 0.0006927530630491674, 0.0007147291908040643], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.187465393915772, 'batch_acquisition_elapsed_time': 517.6145955463871})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9605, 'nll': 0.23014789889223936}, 'chosen_targets': [0, 9, 2, 1, 8, 7, 1, 3, 9, 1], 'chosen_samples': [12497, 13945, 43874, 4810, 49545, 24938, 15252, 30962, 5063, 28922], 'chosen_samples_score': [0.0006641134386882186, 0.0006140692275948822, 0.0005158855929039419, 0.0005190974334254861, 0.0004825257055927068, 0.0004956910852342844, 0.0005034993519075215, 0.0005125722382217646, 0.00046828208724036813, 0.0004867634561378509], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.304165406152606, 'batch_acquisition_elapsed_time': 514.319870908279})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.9176, 'nll': 0.6214350815869105}, 'chosen_targets': [4, 9, 4, 6, 4, 9, 9, 8, 8, 9], 'chosen_samples': [4636, 28715, 23152, 26159, 5954, 31878, 21495, 4887, 26805, 23111], 'chosen_samples_score': [0.0014259754680097103, 0.0014981642598286271, 0.0014986511087045074, 0.0014234663685783744, 0.0014635123079642653, 0.0013636701041832566, 0.0013389057712629437, 0.0013790522934868932, 0.00143438670784235, 0.001336399232968688], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.5617613941431046, 'batch_acquisition_elapsed_time': 519.1375007117167})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9436, 'nll': 0.3517963120309994}, 'chosen_targets': [0, 0, 7, 8, 2, 0, 6, 1, 9, 2], 'chosen_samples': [50331, 42008, 34314, 53248, 59913, 12662, 44179, 15803, 53324, 13374], 'chosen_samples_score': [0.0009711169986985624, 0.0008970568887889385, 0.0008759432239457965, 0.0008434101473540068, 0.0007929130806587636, 0.0008074729121290147, 0.0007747219642624259, 0.000792740669567138, 0.0008367084665223956, 0.0008224775083363056], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.64101852523163, 'batch_acquisition_elapsed_time': 513.0752010461874})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9503, 'nll': 0.3109108865903243}, 'chosen_targets': [4, 3, 3, 9, 5, 9, 9, 8, 7, 3], 'chosen_samples': [850, 25480, 29294, 11931, 54880, 39064, 42059, 39596, 18810, 26013], 'chosen_samples_score': [0.000990450382232666, 0.000798945315182209, 0.0007093664607964456, 0.0007915878086350858, 0.0007998716318979859, 0.0007220896077342331, 0.0007228250615298748, 0.0007060725474730134, 0.000712305074557662, 0.0007143635884858668], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.192884178832173, 'batch_acquisition_elapsed_time': 518.7473150487058})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9396, 'nll': 0.368727599328987}, 'chosen_targets': [9, 8, 3, 6, 6, 9, 8, 6, 8, 8], 'chosen_samples': [13998, 57767, 56204, 31339, 50415, 172, 32270, 44346, 50342, 48726], 'chosen_samples_score': [0.0010137736098840833, 0.0008580529829487205, 0.0007673078216612339, 0.0006887094932608306, 0.0007521502557210624, 0.0007769520743750036, 0.0006589319673366845, 0.0007984942058101296, 0.0007308545173145831, 0.000748845690395683], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.372015995439142, 'batch_acquisition_elapsed_time': 518.5075586619787})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9454, 'nll': 0.33536530698223643}, 'chosen_targets': [0, 8, 5, 4, 7, 4, 8, 0, 4, 6], 'chosen_samples': [28305, 57602, 36900, 34988, 59802, 32178, 14830, 24940, 4874, 8898], 'chosen_samples_score': [0.0009139236644841731, 0.0007759080035611987, 0.0007777420687489212, 0.0007030310807749629, 0.0007840237813070416, 0.0007058721384964883, 0.0007256301469169557, 0.0007505629328079522, 0.0007100238581188023, 0.0006908304058015347], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.730928652919829, 'batch_acquisition_elapsed_time': 519.3074157559313})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.943, 'nll': 0.33790923534254313}, 'chosen_targets': [8, 0, 3, 3, 5, 8, 5, 4, 1, 5], 'chosen_samples': [12493, 52691, 13713, 46918, 20754, 12066, 6027, 23135, 32005, 53272], 'chosen_samples_score': [0.0009698158246465027, 0.0008597942069172859, 0.0008679588208906353, 0.0009266975102946162, 0.0008090462069958448, 0.0008437162614427507, 0.0008230207022279501, 0.000795555766671896, 0.0007350430241785944, 0.0007711068610660732], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.631742739118636, 'batch_acquisition_elapsed_time': 516.5599188474007})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.9086, 'nll': 0.6601857266901826}, 'chosen_targets': [6, 7, 2, 5, 8, 5, 5, 4, 8, 6], 'chosen_samples': [45609, 30672, 15093, 46091, 47506, 17385, 19106, 32126, 10513, 46049], 'chosen_samples_score': [0.001410650904290378, 0.0014367708936333656, 0.0013606271240860224, 0.0013793971156701446, 0.0012874121312052011, 0.0013418277958407998, 0.0013498953776434064, 0.0012778552481904626, 0.00131271465215832, 0.0012777176452800632], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.374984527938068, 'batch_acquisition_elapsed_time': 519.0642867852002})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9561, 'nll': 0.2956648401761895}, 'chosen_targets': [5, 8, 8, 3, 5, 5, 3, 5, 7, 9], 'chosen_samples': [8104, 42364, 47218, 28132, 47646, 8731, 37293, 31242, 1652, 25478], 'chosen_samples_score': [0.0009272773168049753, 0.0006888775969855487, 0.0007313475362025201, 0.0007508762064389884, 0.0006876387051306665, 0.000600592524278909, 0.0006770294858142734, 0.0007044678786769509, 0.0006353289354592562, 0.0006854825187474489], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.7101821871474385, 'batch_acquisition_elapsed_time': 525.9007623889484})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.9142, 'nll': 0.6724132078040123}, 'chosen_targets': [8, 1, 4, 3, 1, 1, 1, 0, 1, 1], 'chosen_samples': [23282, 5582, 44167, 53482, 40694, 35289, 41076, 13074, 14321, 58397], 'chosen_samples_score': [0.0014647592324763536, 0.001495943171903491, 0.0014422056265175343, 0.0013366513885557652, 0.0013704730663448572, 0.001389864832162857, 0.0013978480128571391, 0.0013276863610371947, 0.0014300085604190826, 0.001437496393918991], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.8627892206422985, 'batch_acquisition_elapsed_time': 517.1048571052961})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9427, 'nll': 0.35831606488726836}, 'chosen_targets': [5, 2, 7, 8, 9, 3, 2, 2, 2, 2], 'chosen_samples': [45011, 38667, 50605, 18338, 24062, 52828, 40968, 37763, 17663, 27252], 'chosen_samples_score': [0.0009795803343877196, 0.0008961444837041199, 0.0008349203853867948, 0.0008619548752903938, 0.0007771662785671651, 0.0007960621151141822, 0.0007720354478806257, 0.0007741384324617684, 0.000751925224903971, 0.0007769279764033854], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.183355359826237, 'batch_acquisition_elapsed_time': 515.4699026988819})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.9082, 'nll': 0.6887391466982241}, 'chosen_targets': [5, 8, 2, 6, 7, 7, 7, 0, 3, 8], 'chosen_samples': [12770, 43072, 12302, 29489, 29633, 10014, 25058, 17245, 13676, 3891], 'chosen_samples_score': [0.001397042302414775, 0.0013699796982109547, 0.0013398643350228667, 0.0012912952806800604, 0.0013084565289318562, 0.0012552172411233187, 0.0012686598347499967, 0.0013202754780650139, 0.001316903391852975, 0.0012415496166795492], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.4207778647542, 'batch_acquisition_elapsed_time': 544.2505924352445})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.9188, 'nll': 0.6397013359607309}, 'chosen_targets': [2, 2, 9, 2, 9, 8, 9, 4, 1, 8], 'chosen_samples': [28954, 46727, 16776, 41900, 26042, 48973, 31394, 23956, 19441, 8645], 'chosen_samples_score': [0.0014456665376201272, 0.0013543071690946817, 0.0013445912627503276, 0.001360133639536798, 0.0013103135861456394, 0.0013132602907717228, 0.0013123222161084414, 0.0013506554532796144, 0.0012611976126208901, 0.001335685607045889], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.823976599145681, 'batch_acquisition_elapsed_time': 515.6813357681967})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9486, 'nll': 0.32368780289385585}, 'chosen_targets': [7, 9, 9, 1, 8, 9, 2, 9, 6, 6], 'chosen_samples': [11822, 50186, 53784, 7877, 18130, 20518, 10616, 21842, 55616, 38219], 'chosen_samples_score': [0.001016212161630392, 0.0009359983960166574, 0.0008154138922691345, 0.0008060361724346876, 0.0007022549398243427, 0.0007359062437899411, 0.0007731064106337726, 0.000694330083206296, 0.000763291958719492, 0.0007489317795261741], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.256414782721549, 'batch_acquisition_elapsed_time': 513.8526253141463})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9452, 'nll': 0.3961580639620272}, 'chosen_targets': [0, 9, 4, 8, 9, 7, 9, 8, 3, 7], 'chosen_samples': [10265, 19558, 32813, 6534, 9428, 26455, 14365, 8761, 1357, 57540], 'chosen_samples_score': [0.0010533817112445831, 0.0009949763771146536, 0.0009353216737508774, 0.0009191358694806695, 0.0009127078810706735, 0.0008257877198047936, 0.0008409675792790949, 0.0009193730656988919, 0.0008692232659086585, 0.0008929167524911463], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.741748759057373, 'batch_acquisition_elapsed_time': 519.0124583803117})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.948, 'nll': 0.32429131388795507}, 'chosen_targets': [1, 6, 6, 3, 5, 5, 5, 3, 1, 1], 'chosen_samples': [56025, 17382, 49910, 51154, 44713, 37558, 19318, 22103, 48273, 18830], 'chosen_samples_score': [0.0010742447338998318, 0.0008985954336822033, 0.0008225077763199806, 0.0008690344984643161, 0.0008241236791945994, 0.000878688064403832, 0.0007768880459479988, 0.0008277310989797115, 0.0007869846886023879, 0.0008650844101794064], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.909999437164515, 'batch_acquisition_elapsed_time': 518.3411617870443})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9532, 'nll': 0.29638548385873537}, 'chosen_targets': [3, 5, 3, 5, 3, 3, 8, 3, 3, 3], 'chosen_samples': [34685, 37552, 22675, 23824, 24731, 34407, 57276, 13181, 10450, 59735], 'chosen_samples_score': [0.0009505040943622589, 0.0007891833665780723, 0.0007198054809123278, 0.0007451633573509753, 0.000776562315877527, 0.0007011128473095596, 0.0007119083311408758, 0.0007112344610504806, 0.0007249524933286011, 0.0007635187939740717], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.342989081982523, 'batch_acquisition_elapsed_time': 513.6109418636188})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9502, 'nll': 0.3522974699512665}, 'chosen_targets': [0, 8, 2, 3, 2, 5, 7, 3, 9, 9], 'chosen_samples': [47479, 13186, 12435, 41639, 29906, 1325, 42466, 2661, 50408, 13191], 'chosen_samples_score': [0.0009200067725032568, 0.0009010200737975538, 0.0009204777888953686, 0.0008186682243831456, 0.000819629174657166, 0.0008516326197423041, 0.0007992064929567277, 0.0007982716779224575, 0.0008624448091723025, 0.0007412684499286115], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.25406810361892, 'batch_acquisition_elapsed_time': 533.3685678467155})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9473, 'nll': 0.3262408643086815}, 'chosen_targets': [4, 2, 0, 4, 5, 4, 2, 3, 4, 4], 'chosen_samples': [49172, 37696, 15399, 48646, 56014, 25378, 5480, 23724, 16051, 57114], 'chosen_samples_score': [0.0010614849161356688, 0.0008160399738699198, 0.0007792973192408681, 0.0008510422776453197, 0.0007730434881523252, 0.0007470240234397352, 0.0007151329191401601, 0.0007733462261967361, 0.0007293063099496067, 0.0007639274117536843], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.164284395053983, 'batch_acquisition_elapsed_time': 519.9528543693013})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9515, 'nll': 0.3370137567887305}, 'chosen_targets': [5, 4, 6, 4, 7, 8, 6, 4, 3, 9], 'chosen_samples': [22053, 6107, 47472, 33824, 38920, 24981, 16894, 51652, 49082, 48154], 'chosen_samples_score': [0.0010377084836363792, 0.0008563943556509912, 0.0009391201892867684, 0.0008886305149644613, 0.0008580801077187061, 0.0008078918908722699, 0.0008008389268070459, 0.0008267940720543265, 0.0008727128151804209, 0.0008508740575052798], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.922524688299745, 'batch_acquisition_elapsed_time': 521.6218838109635})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.9694, 'nll': 0.1817663036288296}, 'chosen_targets': [3, 6, 9, 9, 5, 8, 9, 6, 7, 1], 'chosen_samples': [9180, 54172, 641, 24756, 7962, 41180, 37424, 32731, 46641, 7599], 'chosen_samples_score': [0.0006497784052044153, 0.0005467606242746115, 0.00048671988770365715, 0.0004163252015132457, 0.0005462560802698135, 0.0004929833812639117, 0.00039479148108512163, 0.00043870561057701707, 0.00045826987479813397, 0.0004427292151376605], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.19253385066986, 'batch_acquisition_elapsed_time': 510.26325639290735})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9561, 'nll': 0.3604256880974376}, 'chosen_targets': [4, 1, 0, 5, 9, 9, 3, 7, 7, 7], 'chosen_samples': [20250, 30508, 30751, 21550, 28574, 38233, 35574, 26755, 32048, 26579], 'chosen_samples_score': [0.000977689167484641, 0.0008664600318297744, 0.00089604826644063, 0.0007907120161689818, 0.0008124864543788135, 0.0007608601590618491, 0.0007690778002142906, 0.0007718804990872741, 0.0007427165401168168, 0.0007835023570805788], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.26722467597574, 'batch_acquisition_elapsed_time': 516.945727976039})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9704, 'nll': 0.20196637322093233}, 'chosen_targets': [8, 7, 9, 6, 1, 7, 3, 8, 0, 6], 'chosen_samples': [26708, 39877, 43001, 22210, 41266, 26266, 2286, 7793, 45455, 31672], 'chosen_samples_score': [0.000634870259091258, 0.0005578104755841196, 0.000544144946616143, 0.0004951809532940388, 0.000489316473249346, 0.00046017809654586017, 0.00037604980752803385, 0.00045419667731039226, 0.0004444910737220198, 0.0004279218555893749], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.365495329722762, 'batch_acquisition_elapsed_time': 520.3662865585648})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9666, 'nll': 0.23606927254965782}, 'chosen_targets': [9, 8, 9, 1, 3, 9, 9, 5, 9, 3], 'chosen_samples': [59344, 37778, 54666, 21889, 15848, 7478, 46784, 2412, 43950, 31450], 'chosen_samples_score': [0.0007906868122518063, 0.0006318122614175081, 0.0006393083604052663, 0.0005523880245164037, 0.00056979845976457, 0.0005865519633516669, 0.0005945537122897804, 0.0005892172921448946, 0.0005750792915932834, 0.0004920512437820435], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.189504323061556, 'batch_acquisition_elapsed_time': 516.7268827408552})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.96, 'nll': 0.3243735196985305}, 'chosen_targets': [8, 9, 9, 3, 9, 8, 4, 1, 8, 3], 'chosen_samples': [2972, 23463, 51770, 58278, 26586, 14751, 53476, 42673, 1790, 26208], 'chosen_samples_score': [0.000991887180134654, 0.0008957268437370658, 0.0009059367002919316, 0.0008341965149156749, 0.00076433049980551, 0.0007932844455353916, 0.0008003380498848855, 0.0007811847608536482, 0.0008337519248016179, 0.000827910378575325], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.754284305963665, 'batch_acquisition_elapsed_time': 513.3471668967977})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9531, 'nll': 0.39240143924964854}, 'chosen_targets': [8, 8, 6, 9, 5, 4, 9, 1, 7, 9], 'chosen_samples': [51326, 7638, 47288, 48388, 43510, 50801, 11745, 5443, 21894, 7541], 'chosen_samples_score': [0.0011007090797647834, 0.0010266979224979877, 0.0009295183699578047, 0.001022390672005713, 0.0010140646481886506, 0.0009860059944912791, 0.0009394395747222006, 0.0009984350763261318, 0.0009866324253380299, 0.000983737176284194], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.8624716671183705, 'batch_acquisition_elapsed_time': 518.4214730449021})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9506, 'nll': 0.3237704467246116}, 'chosen_targets': [3, 0, 3, 8, 7, 9, 2, 9, 9, 6], 'chosen_samples': [32339, 10261, 46882, 57773, 32416, 6078, 18423, 6717, 50119, 29226], 'chosen_samples_score': [0.0009012036607600749, 0.0008311602869071066, 0.0007554321200586855, 0.000715272210072726, 0.0008043247507885098, 0.0006746611907146871, 0.0007560803205706179, 0.0007202103734016418, 0.0007437223102897406, 0.000770874263253063], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.895340447779745, 'batch_acquisition_elapsed_time': 518.3843056312762})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9632, 'nll': 0.23636636919458293}, 'chosen_targets': [2, 5, 3, 8, 9, 3, 8, 0, 2, 3], 'chosen_samples': [27426, 20628, 42088, 54056, 26748, 14588, 22308, 34706, 48356, 57308], 'chosen_samples_score': [0.0007115695043466985, 0.0006906386115588248, 0.0005285677616484463, 0.000546512077562511, 0.0005810497095808387, 0.0005512074567377567, 0.000510323909111321, 0.0005411059828475118, 0.0004984160186722875, 0.000545652350410819], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.838338701985776, 'batch_acquisition_elapsed_time': 517.8542797360569})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9632, 'nll': 0.23924029290458657}, 'chosen_targets': [6, 7, 6, 0, 0, 6, 5, 5, 3, 3], 'chosen_samples': [55314, 44726, 45614, 1682, 9440, 13207, 15781, 57302, 49103, 966], 'chosen_samples_score': [0.0006947162910364568, 0.0006303893169388175, 0.0005796088953502476, 0.0005494436481967568, 0.0006834086962044239, 0.0006028636125847697, 0.0006168475956656039, 0.0006725461571477354, 0.0006198547198437154, 0.0005724717630073428], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.278842546977103, 'batch_acquisition_elapsed_time': 519.046222566627})
store['iterations'].append({'num_epochs': 2, 'test_metrics': {'accuracy': 0.9055, 'nll': 0.806241456805034}, 'chosen_targets': [3, 9, 1, 7, 0, 1, 4, 1, 6, 5], 'chosen_samples': [39329, 27780, 32295, 4317, 19061, 50498, 31883, 32129, 34924, 5109], 'chosen_samples_score': [0.0015513189136981964, 0.0014720918843522668, 0.0014381553046405315, 0.001420232467353344, 0.0013928364496678114, 0.00142943998798728, 0.001399453030899167, 0.0013837481383234262, 0.0014187402557581663, 0.0013743643648922443], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 5.476752813439816, 'batch_acquisition_elapsed_time': 512.624835616909})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9711, 'nll': 0.20868475202570258}, 'chosen_targets': [5, 8, 2, 3, 7, 7, 3, 6, 6, 3], 'chosen_samples': [7270, 42504, 14174, 52014, 37100, 34445, 55677, 18302, 41688, 58892], 'chosen_samples_score': [0.0007101341616362333, 0.0005820899968966842, 0.0005787784466519952, 0.0004984464612789452, 0.0005260258330963552, 0.0005252613918855786, 0.0005122463335283101, 0.0005362215451896191, 0.0004623574495781213, 0.00046115292934700847], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.10710710985586, 'batch_acquisition_elapsed_time': 512.102012807969})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.9697, 'nll': 0.18614732645296753}, 'chosen_targets': [6, 9, 8, 5, 2, 4, 2, 2, 5, 8], 'chosen_samples': [28810, 54036, 34678, 50071, 21668, 9442, 45047, 9471, 42312, 56978], 'chosen_samples_score': [0.0005818571662530303, 0.00043390184873715043, 0.00043549222755245864, 0.00042155422852374613, 0.00044030643766745925, 0.0004532460297923535, 0.000413913483498618, 0.0003824782033916563, 0.0004369673551991582, 0.0004315785481594503], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.014555844012648, 'batch_acquisition_elapsed_time': 509.5734942811541})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.971, 'nll': 0.22361486016030882}, 'chosen_targets': [8, 2, 9, 4, 9, 2, 2, 1, 5, 9], 'chosen_samples': [41396, 6944, 12320, 12589, 16444, 37440, 40530, 36141, 24887, 44878], 'chosen_samples_score': [0.0008273615967482328, 0.0005979196284897625, 0.0005847830325365067, 0.0006470127264037728, 0.0005931053892709315, 0.0005315477028489113, 0.0005995311657898128, 0.000540013425052166, 0.0005478865350596607, 0.0005253094714134932], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.307204499840736, 'batch_acquisition_elapsed_time': 514.8597155157477})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9424, 'nll': 0.39883255776264936}, 'chosen_targets': [3, 2, 6, 7, 7, 8, 4, 2, 7, 5], 'chosen_samples': [7832, 51435, 28162, 41549, 2431, 57335, 22012, 46122, 39289, 29705], 'chosen_samples_score': [0.0010487677063792944, 0.0010863428469747305, 0.0009554122807458043, 0.0008937664097175002, 0.0009546291548758745, 0.0009164331131614745, 0.0009112718980759382, 0.0009382183779962361, 0.0009512805845588446, 0.0008902738918550313], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.21999524300918, 'batch_acquisition_elapsed_time': 510.10074407281354})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.9748, 'nll': 0.17103454153691772}, 'chosen_targets': [2, 8, 2, 3, 3, 7, 1, 5, 1, 2], 'chosen_samples': [40221, 16897, 5166, 32276, 8821, 57663, 24122, 35276, 470, 7292], 'chosen_samples_score': [0.0006028410862199962, 0.0005107640172354877, 0.0004880542983300984, 0.00040681546670384705, 0.00047277085832320154, 0.0004166155413258821, 0.0004169881285633892, 0.0004432275309227407, 0.0004119759250897914, 0.00044903266825713217], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.29015967482701, 'batch_acquisition_elapsed_time': 511.90267694415525})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9566, 'nll': 0.3384867066456947}, 'chosen_targets': [1, 3, 8, 8, 5, 9, 7, 7, 8, 0], 'chosen_samples': [42015, 39136, 39951, 14733, 33598, 48057, 39835, 9740, 30185, 58560], 'chosen_samples_score': [0.0009712565806694329, 0.0008312771678902209, 0.0008804076351225376, 0.000791814352851361, 0.0008098112884908915, 0.0008377491030842066, 0.0008206645143218338, 0.0008259665919467807, 0.0007843069615773857, 0.0007911424618214369], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.127154077868909, 'batch_acquisition_elapsed_time': 517.6727839563973})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9683, 'nll': 0.2300013410301225}, 'chosen_targets': [2, 7, 8, 7, 0, 2, 5, 9, 8, 5], 'chosen_samples': [9625, 16379, 50074, 14337, 31310, 30872, 42626, 7233, 52290, 15054], 'chosen_samples_score': [0.0007447266834788024, 0.0006660882500000298, 0.000606829475145787, 0.0005872087203897536, 0.0005598294665105641, 0.0005830299924127758, 0.0005251077236607671, 0.0005572970258072019, 0.000552964920643717, 0.0006445289473049343], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.03528211824596, 'batch_acquisition_elapsed_time': 510.92058549588546})
store['iterations'].append({'num_epochs': 6, 'test_metrics': {'accuracy': 0.9742, 'nll': 0.1683603812949445}, 'chosen_targets': [6, 7, 8, 6, 3, 6, 6, 9, 4, 0], 'chosen_samples': [11964, 24990, 35246, 29380, 5798, 50294, 36653, 58470, 45069, 31753], 'chosen_samples_score': [0.0006227405974641442, 0.0005660525057464838, 0.000525563140399754, 0.0004250203783158213, 0.0003742901317309588, 0.0004242166760377586, 0.000451473897555843, 0.00044547716970555484, 0.00036345128319226205, 0.00040169956628233194], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.930878171231598, 'batch_acquisition_elapsed_time': 509.24066873267293})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9435, 'nll': 0.37718019162977867}, 'chosen_targets': [9, 0, 4, 4, 4, 8, 4, 8, 8, 8], 'chosen_samples': [1282, 46654, 4626, 35852, 3694, 20217, 27196, 47387, 7136, 53970], 'chosen_samples_score': [0.000989116495475173, 0.0009034880786202848, 0.0009127219091169536, 0.0009436705149710178, 0.0008749254629947245, 0.0007961858063936234, 0.0008587464690208435, 0.0007499975617974997, 0.0007889755652286112, 0.0008040726534090936], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.9765097657218575, 'batch_acquisition_elapsed_time': 510.88427608879283})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9544, 'nll': 0.364353300881931}, 'chosen_targets': [4, 8, 8, 0, 9, 1, 2, 1, 6, 7], 'chosen_samples': [32101, 25400, 32622, 39039, 51842, 56336, 54981, 13604, 52516, 38091], 'chosen_samples_score': [0.0010991732124239206, 0.0009225397952832282, 0.0010081649525091052, 0.0008499448304064572, 0.0008215983398258686, 0.0009091729298233986, 0.0008006079588085413, 0.0008160701836459339, 0.0009082850301638246, 0.0009040539734996855], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.807337203063071, 'batch_acquisition_elapsed_time': 515.4533223379403})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.9737, 'nll': 0.17496539506723233}, 'chosen_targets': [7, 9, 3, 9, 4, 5, 1, 3, 5, 6], 'chosen_samples': [37508, 32152, 34556, 32235, 46734, 6664, 26376, 55028, 52870, 13970], 'chosen_samples_score': [0.0006047288188710809, 0.0004569316515699029, 0.00046183026279322803, 0.00043227538117207587, 0.00041480816435068846, 0.0003959300520364195, 0.0004673722432926297, 0.00038579144165851176, 0.0004071354051120579, 0.0004129591688979417], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.167913815937936, 'batch_acquisition_elapsed_time': 514.8110058577731})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9485, 'nll': 0.4388620136523724}, 'chosen_targets': [5, 5, 8, 8, 8, 4, 9, 5, 5, 2], 'chosen_samples': [23733, 23336, 27085, 2682, 2210, 22372, 30551, 53696, 31820, 2550], 'chosen_samples_score': [0.0010798495495691895, 0.001086456119082868, 0.0010291947983205318, 0.0010086438851431012, 0.0009661327349022031, 0.0009972105035558343, 0.0010073995217680931, 0.0010158857330679893, 0.001009807805530727, 0.0009563909261487424], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 7.27788399066776, 'batch_acquisition_elapsed_time': 513.5018066563644})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.975, 'nll': 0.18748092661730706}, 'chosen_targets': [9, 8, 2, 5, 0, 8, 3, 3, 3, 0], 'chosen_samples': [17698, 9641, 44881, 4600, 17503, 24979, 52096, 42161, 10674, 25386], 'chosen_samples_score': [0.0006131010013632476, 0.0005570737412199378, 0.0005394546315073967, 0.0005257712327875197, 0.0005194491823203862, 0.0005125828902237117, 0.0005004866397939622, 0.000461727351648733, 0.0004965041298419237, 0.0005037829396314919], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.708863335195929, 'batch_acquisition_elapsed_time': 509.00158071890473})
store['iterations'].append({'num_epochs': 3, 'test_metrics': {'accuracy': 0.9491, 'nll': 0.39840388008099764}, 'chosen_targets': [6, 0, 0, 0, 7, 4, 7, 8, 0, 0], 'chosen_samples': [31588, 31112, 15765, 29230, 7255, 29530, 19344, 55650, 41137, 24024], 'chosen_samples_score': [0.001188180292956531, 0.0010275961831212044, 0.0010156708303838968, 0.0009272142197005451, 0.0009412741637788713, 0.0009492339449934661, 0.0009612543508410454, 0.0009467744384892285, 0.0009588731336407363, 0.000902170839253813], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 6.744727938435972, 'batch_acquisition_elapsed_time': 519.8205837751739})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.9745, 'nll': 0.17789036665831992}, 'chosen_targets': [3, 5, 6, 9, 0, 8, 8, 2, 8, 7], 'chosen_samples': [8709, 24660, 2044, 18382, 59934, 48503, 12663, 54556, 13014, 32835], 'chosen_samples_score': [0.0006338062812574208, 0.0005048882449045777, 0.00046486788778565824, 0.0004808789526578039, 0.0004234789521433413, 0.0003762856067623943, 0.0003860178985632956, 0.00044134011841379106, 0.00045476763625629246, 0.0004290154029149562], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.074610142037272, 'batch_acquisition_elapsed_time': 513.3507907590829})
store['iterations'].append({'num_epochs': 6, 'test_metrics': {'accuracy': 0.9798, 'nll': 0.1384542601572356}, 'chosen_targets': [8, 2, 8, 8, 6, 6, 2, 8, 7, 1], 'chosen_samples': [34422, 30064, 43051, 22924, 59161, 48649, 28631, 26294, 33612, 33856], 'chosen_samples_score': [0.00060225062770769, 0.0004035213787574321, 0.0003507946094032377, 0.0003348036843817681, 0.00032848602859303355, 0.00033450027694925666, 0.0002893833152484149, 0.00031376859988085926, 0.0002859972883015871, 0.00034633130417205393], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 11.320431919302791, 'batch_acquisition_elapsed_time': 510.135514292866})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.9729, 'nll': 0.19918093954529367}, 'chosen_targets': [8, 2, 0, 9, 5, 7, 8, 8, 9, 6], 'chosen_samples': [7891, 57976, 14258, 53976, 59400, 9878, 49217, 9309, 14580, 15188], 'chosen_samples_score': [0.0006498170550912619, 0.0005345684476196766, 0.0005281136836856604, 0.00048517584218643606, 0.0005267419619485736, 0.0005170208751223981, 0.00046448135981336236, 0.0004978208453394473, 0.0004724702157545835, 0.00043659828952513635], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 10.43054649559781, 'batch_acquisition_elapsed_time': 513.1373569029383})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9707, 'nll': 0.2216206582258039}, 'chosen_targets': [5, 5, 4, 8, 1, 5, 1, 4, 5, 8], 'chosen_samples': [24402, 7833, 14572, 45576, 4676, 886, 22095, 50564, 51130, 50178], 'chosen_samples_score': [0.0007478882907889783, 0.0006681372760795057, 0.0006552876438945532, 0.0005433205515146255, 0.0005576638504862785, 0.0005524639855138958, 0.0005179399740882218, 0.0005891715409234166, 0.0005811464507132769, 0.0005559506244026124], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.554859419818968, 'batch_acquisition_elapsed_time': 507.87001983681694})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9723, 'nll': 0.2672408330667877}, 'chosen_targets': [9, 7, 0, 9, 5, 9, 1, 4, 3, 8], 'chosen_samples': [21302, 38794, 8449, 5874, 45024, 14735, 46040, 26582, 32171, 59286], 'chosen_samples_score': [0.0008721021586097777, 0.0006606215029023588, 0.0006459347787313163, 0.0006191915599629283, 0.0006038624560460448, 0.0005978602566756308, 0.0006305433344095945, 0.0006208784761838615, 0.0005844776169396937, 0.0006269587902352214], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.106108726933599, 'batch_acquisition_elapsed_time': 512.6868023360148})
store['iterations'].append({'num_epochs': 4, 'test_metrics': {'accuracy': 0.9718, 'nll': 0.23231624910343077}, 'chosen_targets': [7, 1, 1, 1, 5, 8, 1, 1, 1, 1], 'chosen_samples': [48010, 47446, 12791, 17587, 55428, 24589, 9221, 4924, 12805, 48851], 'chosen_samples_score': [0.0007800403982400894, 0.0006234562024474144, 0.0006256927154026926, 0.0007083251839503646, 0.0005995359388180077, 0.000613079231698066, 0.000619193073362112, 0.0006289388402365148, 0.0005976952379569411, 0.0006481746095232666], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 8.219011142384261, 'batch_acquisition_elapsed_time': 517.2253576796502})
store['iterations'].append({'num_epochs': 5, 'test_metrics': {'accuracy': 0.9732, 'nll': 0.19721162190382177}, 'chosen_targets': [9, 9, 3, 8, 0, 2, 9, 3, 5, 8], 'chosen_samples': [45917, 1352, 54694, 33162, 38355, 41540, 4690, 35132, 15949, 51904], 'chosen_samples_score': [0.000698830874171108, 0.0005778385675512254, 0.0005780922947451472, 0.0005137542029842734, 0.0005519528640434146, 0.0005269919638521969, 0.0005147698102518916, 0.0005492749623954296, 0.0004653987125493586, 0.0005017545190639794], 'chosen_samples_orignal_score': None, 'train_model_elapsed_time': 9.774435746017843, 'batch_acquisition_elapsed_time': 513.213891651947})
